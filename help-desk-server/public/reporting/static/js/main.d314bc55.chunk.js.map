{"version":3,"sources":["app/NavBar.js","api/client.js","features/devices/devicesSlice.js","features/reports/reportsSlice.js","features/reports/AddNewReportForm.js","features/reports/ReportModal.js","features/reports/ReportRow.js","features/reports/ReportsFilters.js","features/reports/ReportsToolkitMenu.js","features/user/userSlice.js","unities/TableHeading.js","features/reports/ReportsPage.js","features/user/DisplayUserForm.js","features/user/UserPage.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["host","document","location","NavBar","useState","currentPage","setCurrentPage","className","id","to","onClick","aria-hidden","fetch","method","window","replace","toString","client","endpoint","a","body","customConfig","headers","config","JSON","stringify","response","status","assign","json","data","ok","Error","statusText","Promise","reject","message","get","post","delete","put","require","createSlice","createEntityAdapter","createAsyncThunk","deviceAdapter","selectId","device","_id","getDevicesByEmployeeId","devices","devicesSlice","name","initialState","getInitialState","error","reducers","extraReducers","pending","state","action","rejected","fulfilled","upsertMany","payload","getSelectors","selectAllDevices","selectAll","selectById","reportsAdapter","report","fetchReportsByEmployeeId","reports","deleteReport","addNewReport","checkReportStatus","filters","reportsSlice","addOne","removeOne","selectAllReports","selectIds","selectEntities","AddNewReportForm","props","userId","useSelector","user","dispatch","useDispatch","devicesOption","map","value","deviceName","currentDevice","setCurrentDevice","validation","setValidation","loadingStatus","setLoadingStatus","employee","title","detail","reportContent","setReportContent","useEffect","onChange","e","target","deviceId","find","console","log","srcSet","type","class","alt","htmlFor","rows","data-dismiss","displayModal","disabled","then","catch","alert","ReportModal","reportModal","modalOption","isModalDisplayed","style","display","tabIndex","role","aria-labelledby","mouseX","clientX","mouseY","clientY","modalBoundary","getElementById","getBoundingClientRect","left","right","top","bottom","onCloseModalCheckly","data-","dismiss","aria-label","ReportRow","setCurrentReport","onContextMenu","reportDate","ReportsFilters","updateReportFilters","placeholder","deviceNameFilter","reportTitleFilter","reportDateFilter","reportStatusFilter","ReportsToolkitMenu","displayToolbar","currentReportId","toolbar","isDisplay","fetchUser","updateUser","checkMail","email","userSlice","userUpdated","selectUser","TableHeading","sortName","setSortOrder","sortOrder","sorterDisplayer","setSorterDisplayer","onMouseOver","onMouseOut","float","color","cookie","split","reduce","accumulator","key","trim","decodeURIComponent","ReportsPage","renderedReports","userStatus","devicesStatus","reportStatus","setFilters","deviceNameSorter","reportTitleSorter","reportDateSorter","reportStatusSorter","sorters","setSorters","toolbarOption","setToolbar","setReportModal","content","setContent","isUpdate","setUpdate","loadingToken","tempReports","Object","filter","toLowerCase","indexOf","parseInt","sort","b","localeCompare","onSetCurrentReport","reportId","onDisplayModal","onSetSorter","onMouseMove","preventDefault","tbodyOnMouseLick","DisplayUserForm","inititaluser","isEmailUpdated","setIsEmailUpdated","address","phoneNumber","birthDate","position","setUser","nameInputStatus","addressInputStatus","phoneNumberInputStatus","emailInputStatus","birthDateInputState","inputStatus","setInputStatus","emailValidation","setEmailValidation","onClockInputs","toLocaleString","readOnly","onDoubleClick","undefined","substring","err","UserPage","App","exact","path","component","configureStore","reducer","userReducer","reportsReducer","devicesReducer","Boolean","hostname","match","ReactDOM","render","StrictMode","store","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d314bc55.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './NavBar.css';\r\nimport {Link} from 'react-router-dom';\r\nconst host = document.location.host;\r\nexport const NavBar = () => {\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n\r\n    const logOut = () =>{\r\n        fetch(`http://${host}/logout`, {method :'GET'});\r\n        window.location.replace(`http://${host}/logout`);\r\n    }\r\n    \r\n    return (\r\n        <div className=\"wrapper\">\r\n            <nav id=\"sidebar\">\r\n                <div className=\"sidebar-header\">\r\n                </div>\r\n                <ul className=\"list-unstyled components\">\r\n                    <li className={currentPage === 0? \"active\":''}>\r\n                        <Link to=\"/reporting/home\" onClick={()=>setCurrentPage(0)}><i className=\"fa fa-home reg-icon\" aria-hidden=\"true\"></i></Link> \r\n                    </li>\r\n                    <li className={currentPage === 1? \"active\":''}>\r\n                        <Link to=\"/reporting/user\" onClick={()=>setCurrentPage(1)}><i className=\"fa fa-address-card-o reg-icon\" aria-hidden=\"true\"></i></Link> \r\n                    </li>\r\n                    <li className={currentPage === 2? \"active\":''}>\r\n                        <Link to=\"/reporting/reports\" onClick={()=>setCurrentPage(2)}><i className=\"fa fa-file-text reg-icon\" aria-hidden=\"true\"></i></Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link onClick={logOut}>\r\n                            <i className=\"fa fa-sign-out reg-icon\" aria-hidden=\"true\"></i>\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n\r\n            </nav>\r\n\r\n        </div>\r\n    );\r\n}","const host = document.location.host.toString();\r\nexport async function client(endpoint, { body, ...customConfig } = {}) {\r\n    // authenticated requests\r\n    const headers = { 'Content-Type': 'application/json' };\r\n    const config = {\r\n        method: body ? 'POST' : 'GET',\r\n        ...customConfig,\r\n        headers: {\r\n            ...headers,\r\n            ...customConfig.headers\r\n        }\r\n    }\r\n\r\n    if (body) {\r\n        config.body = JSON.stringify(body);\r\n    }\r\n\r\n\r\n    let data;\r\n    try {\r\n        const response = await window.fetch(`http://${host}/${endpoint}`, config);\r\n        if (response.status === 401) {\r\n            logout();\r\n            window.location.assign(window.location);\r\n            return;\r\n        }\r\n        data = await response.json();\r\n        if (response.ok) {\r\n            \r\n            return data;\r\n        }\r\n        throw new Error(response.statusText);\r\n    } catch (err) {\r\n        return Promise.reject(err.message ? err.message : data)\r\n    }\r\n\r\n}\r\n\r\nfunction logout() {\r\n\r\n}\r\n\r\nclient.get = function (endpoint, customConfig = {}) {\r\n    return client(endpoint, { ...customConfig, method: 'GET' });\r\n}\r\n\r\nclient.post = function (endpoint, body, customConfig = {}) {\r\n    return client(endpoint, { ...customConfig, body, method: 'POST' })\r\n}\r\n\r\nclient.delete = function (endpoint, customConfig = {}) {\r\n    return client(endpoint, { ...customConfig, method: 'DELETE' })\r\n}\r\n\r\nclient.put = function (endpoint, body, customConfig = {}) {\r\n    return client(endpoint, { ...customConfig, body, method: 'PUT' })\r\n}\r\n\r\n\r\n","import { client } from \"../../api/client\";\r\n\r\nconst { createSlice, createEntityAdapter, createAsyncThunk } = require(\"@reduxjs/toolkit\");\r\nconst deviceAdapter = createEntityAdapter({\r\n    selectId: device => device._id\r\n});\r\n\r\nexport const getDevicesByEmployeeId = createAsyncThunk('devices/fetchDevices' ,async (id)=>{\r\n    const response =await client.get(`api/employees/${id}/devices`);\r\n   \r\n    return response.devices;\r\n});\r\n\r\nexport const  fetchDevices = createAsyncThunk('devices/fetchDevise', async () =>{\r\n    const response = await client.get(`api/devices`);\r\n    return response.devices;\r\n})\r\n\r\n\r\nconst initialState = deviceAdapter.getInitialState({\r\n    status: 'idle',\r\n    error: null,\r\n});\r\n\r\nconst devicesSlice = createSlice({\r\n    name: 'devices',\r\n    initialState,\r\n    reducers: {\r\n\r\n    },\r\n    extraReducers:{\r\n        [getDevicesByEmployeeId.pending]:(state, action)=>{\r\n            state.status = 'loading';\r\n        },\r\n        [getDevicesByEmployeeId.rejected]:(state, action)=>{\r\n            state.status = 'failed';\r\n        },\r\n        [getDevicesByEmployeeId.fulfilled]:(state, action)=>{\r\n            state.status = 'succeeded';\r\n            deviceAdapter.upsertMany(state, action.payload);\r\n        }\r\n    }\r\n});\r\nexport const {\r\n    selectAll : selectAllDevices,\r\n    selectById: selectDeviceById,\r\n} = deviceAdapter.getSelectors(state => state.devices);\r\nexport default devicesSlice.reducer;","import { createAsyncThunk, createEntityAdapter, createSlice } from '@reduxjs/toolkit';\r\nimport {client} from '../../api/client';\r\n\r\nconst reportsAdapter = createEntityAdapter({\r\n    selectId : report => report._id,\r\n\r\n});\r\n\r\nexport const fetchReportsByEmployeeId = createAsyncThunk('reports/fetchReportsByEmployeeId', async (id) =>{\r\n    const response = await client.get(`api/reports/employee/${id}`);\r\n    return response.reports;\r\n});\r\nexport const deleteReport = createAsyncThunk('reports/deleteReport', async (id)=>{\r\n    const response = await client.delete(`api/reports/${id}`);\r\n    return response.report;\r\n});\r\nexport const addNewReport = createAsyncThunk('reports/addNewReport',async (report)=>{\r\n    const response = await client.post('api/reports',{report});\r\n    return response.report;\r\n})\r\nexport const checkReportStatus = async (id)=>{\r\n    const response = await client.get(`api/reports/${id}/status`);\r\n    return response.status;\r\n};\r\n\r\n\r\n\r\nconst initialState = reportsAdapter.getInitialState({\r\n    status : 'idle',\r\n    error: null,\r\n    filters:{\r\n\r\n    }\r\n});\r\nconst reportsSlice = createSlice({\r\n    name: 'reports',\r\n    initialState,\r\n    reducers: {\r\n        \r\n    },\r\n    extraReducers:{\r\n        [fetchReportsByEmployeeId.pending]:(state , action)=>{\r\n            state.status = 'loading';\r\n        },\r\n        [fetchReportsByEmployeeId.fulfilled] :(state , action)=>{\r\n            state.status = 'succeeded';\r\n            reportsAdapter.upsertMany(state, action.payload);\r\n        },\r\n        [fetchReportsByEmployeeId.rejected] :(state , action)=>{\r\n            state.status = 'failed';\r\n        },\r\n        [addNewReport.fulfilled]:(state, action)=> reportsAdapter.addOne(state, action.payload),\r\n        [deleteReport.fulfilled]: (state, action)=>reportsAdapter.removeOne(state, action.payload._id),\r\n    }\r\n});\r\n\r\nexport const {\r\n    selectAll: selectAllReports,\r\n    selectIds: selectReportIds,\r\n    selectById: selectReportById,\r\n    selectEntities: selectReport,\r\n} = reportsAdapter.getSelectors(state => state.reports);\r\nexport default reportsSlice.reducer;","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectAllDevices } from '../devices/devicesSlice';\r\n\r\nimport { addNewReport, selectAllReports } from './reportsSlice';\r\nexport const AddNewReportForm = (props) => {\r\n    const userId = useSelector(state => state.user.user._id);\r\n    const dispatch = useDispatch();\r\n    const devices = useSelector(selectAllDevices);\r\n\r\n    const devicesOption = devices.map(device => <option\r\n        key={device._id} value={device.deviceName} id={device._id}>\r\n        {device.deviceName}</option>\r\n    );\r\n\r\n    const [currentDevice, setCurrentDevice] = useState({\r\n    \r\n        deviceName : devices[0].deviceName\r\n    });\r\n\r\n    const [validation, setValidation] = useState(false);\r\n    const [loadingStatus, setLoadingStatus] = useState(false);\r\n\r\n    const [reportContent, setReportContent] = useState({\r\n        employee: userId,\r\n        device: devices[0]._id,\r\n        title: '',\r\n        detail: '',\r\n        status: 0\r\n    });\r\n    \r\n    const validate = () => {\r\n        if (reportContent.employee === '') return false;\r\n        if (reportContent.device === '') return false;\r\n        if (reportContent.title === '') return false;\r\n        if (reportContent.detail === '') return false;\r\n        return true;\r\n    }\r\n    useEffect(() => {\r\n        setValidation(validate());\r\n    }, [reportContent])\r\n\r\n    const onChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        setReportContent({ ...reportContent, [name]: value });\r\n    }\r\n\r\n\r\n    // eslint-disable-next-line array-callback-return\r\n\r\n    const onSave = () => {\r\n        setLoadingStatus(true);\r\n        dispatch(addNewReport(reportContent))\r\n            .then(() => {\r\n                setLoadingStatus(false);\r\n                setReportContent({\r\n                    employee: '',\r\n                    device: '',\r\n                    title: '',\r\n                    detail: '',\r\n                    status: 0\r\n                });\r\n            })\r\n            .catch(error => {\r\n                setLoadingStatus(false);\r\n                setReportContent({\r\n                    employee: '',\r\n                    device: '',\r\n                    title: '',\r\n                    detail: '',\r\n                    status: 0\r\n                });\r\n                alert(error);\r\n            });\r\n    }\r\n\r\n    useEffect(()=>{\r\n        const deviceId = devices.find(device => device.deviceName === currentDevice.deviceName)._id;\r\n        setReportContent({...reportContent, device: deviceId});\r\n    },[currentDevice.deviceName])\r\n\r\n    useEffect(()=>{\r\n        console.log(reportContent.device);\r\n    },[reportContent.device])\r\n    return (\r\n        <div>\r\n            <div className=\"modal-body\">\r\n\r\n                <picture>\r\n                    <source srcSet=\"...\" type=\"image/svg+xml\" />\r\n                    <img srcSet=\"...\" class=\"img-fluid img-thumbnail\" alt=\"...\" />\r\n                </picture>\r\n\r\n                <div className=\"input-group flex-nowrap mb-2\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\">Device</span>\r\n                    </div>\r\n                    <select className=\"form-control\" name=\"device\" id=\"device\"\r\n                        value={currentDevice.deviceName}\r\n                        onChange={e =>\r\n                            {\r\n                                setCurrentDevice({ ...currentDevice, deviceName: e.target.value });\r\n\r\n                            }\r\n        \r\n                        }\r\n\r\n                    >\r\n                        {devicesOption}\r\n                    </select>\r\n                </div>\r\n                <div class=\"input-group flex-nowrap mb-2\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\">Title</span>\r\n                    </div>\r\n                    <input type=\"text\" class=\"form-control\" name=\"title\" id=\"title\"\r\n                        onChange={e => onChange(e)}\r\n                        value={reportContent.title}\r\n                    ></input>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label htmlFor=\"detail\">Description</label>\r\n                    <textarea class=\"form-control\" name=\"detail\" id=\"detail\" rows=\"4\"\r\n                        value={reportContent.detail}\r\n                        onChange={e => onChange(e)}\r\n                    ></textarea>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\"\r\n                    onClick={() => props.displayModal(false, 0)}\r\n                >\r\n                    Close\r\n                </button>\r\n                    &nbsp;\r\n                <button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\"\r\n                    disabled={!validation}\r\n                    onClick={onSave}\r\n                >\r\n                    {loadingStatus ? <i className=\"fa fa-circle-o-notch fa-spin\"></i> : ''}\r\n                    &nbsp;\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { AddNewReportForm } from './AddNewReportForm';\r\n\r\nexport const ReportModal = ({reportModal, displayModal}) => {\r\n    const { isModalDisplayed, modalOption } = reportModal;\r\n   \r\n\r\n    const onCloseModalCheckly = (e) => {\r\n        const mouseX = e.clientX;\r\n        const mouseY = e.clientY;\r\n        const modal = document.getElementById(\"taskModalContent\");\r\n        const modalBoundary = modal.getBoundingClientRect();\r\n        if(mouseX === 0 || mouseY === 0);\r\n        else\r\n        if (mouseX < modalBoundary.left || mouseX > modalBoundary.right ||\r\n            mouseY < modalBoundary.top || mouseY > modalBoundary.bottom) {\r\n            \r\n            displayModal(false, 0);\r\n        }\r\n\r\n    }\r\n    const OptionnedContent = () =>{\r\n        if(modalOption === 0) return <AddNewReportForm displayModal={displayModal}/>;\r\n        return '';\r\n    }\r\n\r\n    \r\n    return (\r\n        <div className=\"modal fade show\"\r\n            style=\r\n            {{\r\n                display:  'block'\r\n            }}\r\n            id=\"taskModal\"\r\n            tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"taskModalTitle\" aria-hidden=\"true\"\r\n            onClick={(e) => { onCloseModalCheckly(e) }}\r\n\r\n        >\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n                <div className=\"modal-content\" id=\"taskModalContent\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\" id=\"taskModalTitle\">{modalOption===0?'Add New Report':'Analyze Report'}</h5>\r\n                        <button type=\"button\" className=\"close\" data-   dismiss=\"modal\" aria-label=\"Close\"\r\n                            onClick={()=>displayModal(false, 0)}\r\n                        >\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    {OptionnedContent()}\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectDeviceById } from '../devices/devicesSlice';\r\n\r\nimport { selectReportById } from './reportsSlice';\r\n\r\n\r\nexport const ReportRow = ({report, setCurrentReport}) => {\r\n\r\n    const onClickOver = (e) => {\r\n        setCurrentReport(report._id);\r\n    }\r\n    const ReportStatus = (status) =>{\r\n        if(status === 0)\r\n        {return <span className=\"badge badge-pill badge-danger\">New</span>;}\r\n        if(status === 1)\r\n       { return <span className=\"badge badge-pill badge-primary\">Solving</span>;}\r\n        if(status === 2)\r\n       { return <span className=\"badge badge-pill badge-success\">Solved</span>;}\r\n        \r\n    }\r\n    return (\r\n        <tr onContextMenu={e => onClickOver(e)}>\r\n            <td>{report.deviceName}</td>\r\n            <td>{report.title}</td>\r\n            <td>{report.reportDate?report.reportDate.toString():''}</td>\r\n            <td>{ReportStatus(report.status)}</td>\r\n        </tr>\r\n    );\r\n}","import React, { useState } from 'react';\r\n\r\nexport const ReportsFilters = ({ updateReportFilters, filters }) => {\r\n\r\n\r\n    const onChange = (e) => {\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        updateReportFilters(name, value);\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n            <td>\r\n                <input type=\"text\" className=\"form-control\"\r\n                    name=\"deviceNameFilter\" id=\"deviceNameFilter\"\r\n                    placeholder=\"searching device\"\r\n                    value={filters.deviceNameFilter}\r\n                    onChange={e => onChange(e)}\r\n                />\r\n            </td>\r\n\r\n            <td>\r\n                <input type=\"text\" className=\"form-control\"\r\n                    name=\"reportTitleFilter\" id=\"reportTitleFilter\"\r\n                    placeholder=\"searching title\"\r\n                    value={filters.reportTitleFilter}\r\n                    onChange={e => onChange(e)}\r\n                />\r\n            </td>\r\n\r\n            <td>\r\n                <input type=\"text\" className=\"form-control\"\r\n                    name=\"reportDateFilter\" id=\"reportDateFilter\"\r\n                    placeholder=\"searching date\"\r\n                    value={filters.reportDateFilter}\r\n                    onChange={e => onChange(e)}\r\n                />\r\n            </td>\r\n\r\n            <td>\r\n                <select className=\"form-control\" name=\"reportStatusFilter\" id=\"reportStatusFilter\"\r\n                    value={filters.reportStatusFilter}\r\n                    onChange={e => onChange(e)} >\r\n                    <option value={-1}>all</option>\r\n                    <option value={0}>new</option>\r\n                    <option value={1}>solving</option>\r\n                    <option value={2}>solved</option>\r\n                </select>\r\n            </td>\r\n        </tr>\r\n    );\r\n} ","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { checkReportStatus, deleteReport, fetchReports, modalDisplayUpdapted, toolbarDisplayUpdated } from './reportsSlice';\r\nexport const ReportsToolkitMenu = ({displayToolbar, displayModal,currentReportId, toolbar}) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { top, left, isDisplay } = toolbar;\r\n\r\n    const onAddNewReport = () => {\r\n        displayToolbar(false);\r\n        displayModal(true, 0);\r\n    }\r\n    \r\n    const onDeleteReport = () =>{\r\n        checkReportStatus(currentReportId)\r\n        .then(status =>{\r\n            \r\n            if(status === 0){\r\n                dispatch(deleteReport(currentReportId));\r\n                \r\n            }\r\n            else {\r\n                alert('cannot delete Report');\r\n            }\r\n        })\r\n        .catch(error => alert(error));\r\n        displayToolbar(false);\r\n        \r\n    }\r\n    return (\r\n        <span className=\"menu-toolbar\" style={{ top: top, left: left, display:'block' }}>\r\n            <button type=\"button\" className=\"btn btn-primary\"\r\n                onClick={onAddNewReport}\r\n            >\r\n                <i className=\"fa fa-plus reg-icon\" aria-hidden=\"true\"></i>\r\n            </button>\r\n            &nbsp;\r\n            \r\n            <button type=\"button\" class=\"btn btn-danger\" onClick={onDeleteReport}>\r\n                <i class=\"fa fa-trash reg-icon\" aria-hidden=\"true\"></i>    \r\n            </button>\r\n                       \r\n        </span>\r\n    );\r\n}","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { client } from '../../api/client';\r\n\r\n\r\nexport const fetchUser = createAsyncThunk('user/fetchUser', async (id)=>{\r\n    const response = await client.get(`api/employees/${id}`);\r\n    \r\n    return response.employee;\r\n});\r\nexport const updateUser = createAsyncThunk('user/updateUser', async (employee) =>{\r\n    const response = await client.put(`api/employees/${employee._id}`, {employee: employee});\r\n    return response.employee;\r\n});\r\nexport const checkMail = async (email) => {\r\n    const response = await client.get(`api/employees/email/check?email=${email}`);\r\n    return response.error;\r\n};\r\nconst initialState = {\r\n   user:{},\r\n   status: 'idle',\r\n   error: null,\r\n};\r\n\r\nconst userSlice = createSlice({\r\n    name:'user',\r\n    initialState,\r\n    reducers:{\r\n        userUpdated : (state, action) =>{\r\n            state = action.payload;\r\n            return state;\r\n        }\r\n\r\n    },\r\n    extraReducers:{\r\n        [fetchUser.fulfilled]:(state, action)=>{\r\n            state.user = action.payload;\r\n            state.status = 'succeeded';\r\n        },\r\n        [fetchUser.pending] :(state, action) =>{\r\n            state.status = 'loading';\r\n        },\r\n        [fetchUser.rejected] :(state, action) =>{\r\n            state.status = 'failed';\r\n        },\r\n        [updateUser.fulfilled]:(state, action)=>{\r\n            state.user = action.payload;\r\n        }\r\n    }\r\n});\r\n\r\nexport const selectUser = state => state.user.user;\r\nexport default userSlice.reducer;","\r\nimport React, { useState } from 'react';\r\n    \r\nexport const TableHeading = ({ title, sortName, setSortOrder, sortOrder }) => {\r\n    const [sorterDisplayer, setSorterDisplayer] = useState(false);\r\n    const onSetSortOder = () => {\r\n        setSortOrder(sortName, sortOrder < 1 ? sortOrder + 1 : -1);\r\n    }\r\n\r\n    return (\r\n        <th\r\n            onMouseOver={e => setSorterDisplayer(true)}\r\n            onMouseOut={e => setSorterDisplayer(false)}\r\n            onClick={onSetSortOder}       \r\n        >\r\n            <span style={{float:'left'}}>\r\n            {title}\r\n            </span>\r\n            \r\n            {sorterDisplayer\r\n                ? <span className=\"sorter\" style={{float:\"right\", color: 'darksalmon'}} >\r\n                    {sortOrder === -1\r\n                        ? <i className=\"fa fa-sort-desc\" ></i>\r\n                        : (\r\n                            sortOrder === 1\r\n                                ? <i className=\"fa fa-sort-asc\"></i>\r\n                                : <i class=\"fa fa-random\" aria-hidden=\"true\"></i>\r\n                        )\r\n                    }\r\n                </span> : ''}\r\n        </th>\r\n\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ReportModal } from './ReportModal';\r\nimport { ReportRow } from './ReportRow';\r\nimport { ReportsFilters } from './ReportsFilters';\r\nimport { ReportsToolkitMenu } from './ReportsToolkitMenu';\r\nimport { fetchReportsByEmployeeId, selectAllReports, selectReportIds } from './reportsSlice';\r\nimport { fetchDevices, getDevicesByEmployeeId, selectAllDevices } from '../devices/devicesSlice';\r\nimport { fetchUser } from '../user/userSlice';\r\nimport { TableHeading } from '../../unities/TableHeading';\r\n\r\nconst cookie = document.cookie.split(';')\r\n.map(cookie => cookie.split('='))\r\n.reduce((accumulator, [key, value])=>({...accumulator, [key.trim()]: decodeURIComponent(value)}),\r\n{});\r\n\r\n\r\nexport const ReportsPage = () => {\r\n    const devices = useSelector(selectAllDevices);\r\n    const reports = useSelector(selectAllReports);\r\n    const userStatus = useSelector(state => state.user.status);\r\n    const devicesStatus = useSelector(state => state.devices.status);\r\n    const reportStatus = useSelector(state => state.reports.status);\r\n    const error = useSelector(state => state.reports.error);\r\n    const dispatch = useDispatch();\r\n\r\n    const [filters, setFilters] = useState({\r\n        deviceNameFilter: '',\r\n        reportTitleFilter: '',\r\n        reportDateFilter: '',\r\n        reportStatusFilter: -1,\r\n    });\r\n\r\n    const [sorters, setSorters] = useState({\r\n        deviceNameSorter: 0,\r\n        reportTitleSorter: 0,\r\n        reportDateSorter: 0,\r\n        reportStatusSorter: 0,\r\n    });\r\n    const [toolbar, setToolbar] = useState({\r\n        top: 0,\r\n        left: 0,\r\n        isDisplay: false,\r\n        toolbarOption: 0,/// 0 : add new Report, 1 : analyze, 2: delete,\r\n    });\r\n    const [reportModal, setReportModal] = useState({\r\n        isModalDisplayed: false,\r\n        modalOption: 1, /// 0 : add new Report, 1 : analyze, 2: delete,\r\n        currentReportId: '',\r\n    });\r\n    const [content, setContent] = useState();\r\n    const [isUpdate, setUpdate] = useState(true);\r\n\r\n    let renderedReports;\r\n\r\n    useEffect(() => {\r\n        if (userStatus === 'idle') {\r\n            console.log(cookie.loadingToken);\r\n            dispatch(fetchUser(cookie.loadingToken));\r\n        }\r\n    }, [userStatus])\r\n    useEffect(() => {\r\n        if (devicesStatus === 'idle')\r\n            dispatch(getDevicesByEmployeeId(cookie.loadingToken));\r\n    }, [devicesStatus]);\r\n\r\n    useEffect(() => {\r\n\r\n        if (reportStatus === 'idle') {\r\n            dispatch(fetchReportsByEmployeeId(cookie.loadingToken));\r\n        }\r\n\r\n    }, [reportStatus]);\r\n\r\n    useEffect(() => {\r\n        setUpdate(true);\r\n    }, [reports])\r\n\r\n\r\n\r\n    if (userStatus === 'succeeded' && devicesStatus === 'succeeded' && reportStatus === 'succeeded') {\r\n        if (isUpdate) {\r\n            setContent(reports.map(report => ({\r\n                ...report,\r\n                deviceName: devices.find(device => device._id === report.device).deviceName,\r\n\r\n            })));\r\n            setUpdate(false);\r\n        }\r\n    } else if (userStatus === 'failed' || devicesStatus === 'failed' || reportStatus === 'failed') {\r\n        renderedReports = <div>{error}</div>\r\n    } else if (userStatus === 'loading' || devicesStatus === 'loading' || reportStatus === 'loading') {\r\n        renderedReports = <div>Loading</div>\r\n    }\r\n\r\n    var tempReports = Object.assign([], content);\r\n\r\n    // deviceNameFilter: '',\r\n    // reportTitleFilter: '',\r\n    // reportDateFilter: '',\r\n    // reportStatusFilter: -1,\r\n\r\n    if (filters.deviceNameFilter) {\r\n        tempReports = tempReports.filter((report) => {\r\n            return report.deviceName.toLowerCase().indexOf(filters.deviceNameFilter.toLowerCase()) !== -1;\r\n        });\r\n    }\r\n    if (filters.reportTitleFilter) {\r\n        tempReports = tempReports.filter(report =>\r\n            (report.title.toLowerCase().indexOf(filters.reportTitleFilter.toLowerCase()) !== -1)\r\n        );\r\n    }\r\n    if (filters.reportDateFilter) {\r\n        tempReports = tempReports.filter((report) => {\r\n            return report.reportDate.toLowerCase().indexOf(filters.reportDateFilter.toLowerCase()) !== -1;\r\n        });\r\n    }\r\n    if (parseInt(filters.reportStatusFilter) !== -1)\r\n        tempReports = tempReports.filter((report) =>\r\n            report.status === parseInt(filters.reportStatusFilter)\r\n        );\r\n\r\n    if (sorters.deviceNameSorter !== 0) {\r\n        tempReports = tempReports.sort((a, b) =>{\r\n            if(a.deviceName === b.deviceName) return 0;\r\n            return a.deviceName > b.deviceName ? sorters.deviceNameSorter : -sorters.deviceNameSorter\r\n        })\r\n    }\r\n\r\n    if (sorters.reportTitleSorter !== 0) {\r\n        tempReports = tempReports.sort((a, b) =>{\r\n            if(a.title === b.title) return 0;\r\n            return a.title > b.title ? sorters.reportTitleSorter : -sorters.reportTitleSorter});\r\n    }\r\n\r\n    if (sorters.reportDateSorter !== 0) {\r\n        tempReports = tempReports.sort((a, b) => { \r\n            if(a.reportDate.localeCompare(b.reportDate) === 0) return 0;\r\n            return a.reportDate.localeCompare(b.reportDate) > 0 ? sorters.reportDateSorter :-sorters.reportDateSorter ;\r\n        });\r\n    }\r\n\r\n    if(sorters.reportStatusSorter !== 0){\r\n        tempReports = tempReports.sort((a, b) => { \r\n            if(a.status === b.status) return 0;\r\n            return a.status > b.status ? sorters.reportStatusSorter :-sorters.reportStatusSorter ;\r\n        });\r\n    }\r\n\r\n\r\n    const onUpdateReportFilters = (name, value) => {\r\n        setFilters({\r\n            ...filters,\r\n            [name]: value\r\n        });\r\n    }\r\n    const onMouseMoveTbody = (e) => {\r\n        \r\n        if (toolbar.isDisplay === true) {\r\n\r\n            setToolbar({ ...toolbar, isDisplay: false });\r\n        }\r\n    }\r\n    const tbodyOnMouseLick = (e) => {\r\n        e.preventDefault();\r\n        setToolbar({ ...toolbar, isDisplay: true, top: e.clientY - 35, left: e.clientX });\r\n    }\r\n\r\n    const onSetCurrentReport = (reportId) => {\r\n        setReportModal({ ...reportModal, currentReportId: reportId });\r\n    }\r\n\r\n\r\n    renderedReports = tempReports.map(report => {\r\n        return (\r\n            <ReportRow\r\n                report={report}\r\n                key={report._id}\r\n                setCurrentReport={onSetCurrentReport}\r\n            />\r\n        );\r\n    });\r\n    const onDisplayToolbar = (isDisplay) => {\r\n        setToolbar({ ...toolbar, isDisplay: isDisplay });\r\n    }\r\n    const onDisplayModal = (isModalDisplayed, modalOption) => {\r\n\r\n        setReportModal({\r\n            ...reportModal,\r\n            isModalDisplayed: isModalDisplayed,\r\n            modalOption: modalOption, /// 0 : add new Report, 1 : analyze, 2: delete,\r\n\r\n        });\r\n    }\r\n    const onSetSorter = (name, value) => setSorters({\r\n        deviceNameSorter: 0,\r\n        reportTitleSorter: 0,\r\n        reportDateSorter: 0,\r\n        reportStatusSorter: 0,\r\n        [name]: value\r\n    });\r\n\r\n    useEffect(() => {\r\n        console.log(sorters);\r\n    })\r\n    return (\r\n        <div className={reportModal.isModalDisplayed ? \"modal-open container-fluid\" : \"container-fluid\"}\r\n        >\r\n            {toolbar.isDisplay ? <ReportsToolkitMenu toolbar={toolbar} displayToolbar={onDisplayToolbar}\r\n                displayModal={onDisplayModal} currentReportId={reportModal.currentReportId} /> : ''}\r\n            {reportModal.isModalDisplayed ? <ReportModal reportModal={reportModal} displayModal={onDisplayModal} /> : \"\"}\r\n            <h3 className=\"text-center\">Report Management</h3>\r\n            <div className=\"row justify-content-center\">\r\n\r\n                <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-11\">\r\n\r\n                    <table className='table table-bordered table-hover' >\r\n                        <thead className=\"thead-dark\">\r\n                            <tr>\r\n                                <TableHeading title='Device Name' sortName='deviceNameSorter'\r\n                                    sortOrder={sorters.deviceNameSorter} setSortOrder={onSetSorter}\r\n                                />\r\n                                <TableHeading title='Title' sortName='reportTitleSorter'\r\n                                    sortOrder={sorters.reportTitleSorter} setSortOrder={onSetSorter}\r\n                                />\r\n\r\n                                <TableHeading title='Report Date' sortName='reportDateSorter'\r\n                                    sortOrder={sorters.reportDateSorter} setSortOrder={onSetSorter}\r\n                                />\r\n                                <TableHeading title='Report Status' sortName='reportStatusSorter'\r\n                                    sortOrder={sorters.reportStatusSorter} setSortOrder={onSetSorter}\r\n                                />\r\n\r\n                            </tr>\r\n                            <ReportsFilters updateReportFilters={onUpdateReportFilters} filters={filters} />\r\n\r\n                        </thead>\r\n                        <tbody onMouseMove={e => onMouseMoveTbody(e)}\r\n                            onContextMenu={e => tbodyOnMouseLick(e)}\r\n                        >\r\n                            {renderedReports}\r\n                        </tbody>\r\n                    </table>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectUser, userUpdated, fetchUser, updateUser } from './userSlice';\r\nimport './style.css';\r\nimport { checkMail } from '../user/userSlice';\r\n\r\nconst cookie = document.cookie.split(';')\r\n  .map(cookie => cookie.split('='))\r\n  .reduce((accumulator, [key, value]) => ({ ...accumulator, [key.trim()]: decodeURIComponent(value) }),\r\n    {});\r\n\r\n\r\nexport const DisplayUserForm = (props) => {\r\n\r\n\r\n  const inititaluser = useSelector(selectUser);\r\n  const userStatus = useSelector(state => state.user.status);\r\n  const [isEmailUpdated, setIsEmailUpdated] = useState(-1);\r\n  const [user, setUser] = useState({\r\n    _id: '',\r\n    name: '',\r\n    address: '',\r\n    email: '',\r\n    phoneNumber: '',\r\n    birthDate: '',\r\n    position: ''\r\n  });\r\n\r\n  const [loadingStatus, setLoadingStatus] = useState(false);\r\n\r\n  const [inputStatus, setInputStatus] = useState({\r\n    nameInputStatus: true,\r\n    addressInputStatus: true,\r\n    phoneNumberInputStatus: true,\r\n    emailInputStatus: true,\r\n    birthDateInputState: true,\r\n  });\r\n  const [emailValidation, setEmailValidation] = useState(true);\r\n  const dispatch = useDispatch();\r\n\r\n  const onClickCancel = () => {\r\n    setUser(inititaluser);\r\n    onClockInputs();\r\n    setEmailValidation(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (userStatus === 'idle') {\r\n      dispatch((fetchUser(cookie.loadingToken)));\r\n\r\n    }\r\n    if (userStatus === 'succeeded') {\r\n      setUser(inititaluser);\r\n      setIsEmailUpdated(0);\r\n    }\r\n\r\n  }, [dispatch, inititaluser, userStatus]);\r\n\r\n  useEffect(() => {\r\n    if (user.email.localeCompare(inititaluser.email) !== 0 && isEmailUpdated === 0) {\r\n      setIsEmailUpdated(1);\r\n    }\r\n  }, [user.email])\r\n\r\n  const onSave = () => {\r\n    setLoadingStatus(true);\r\n    if (isEmailUpdated)\r\n      checkMail(user.email)\r\n        .then(error => {\r\n          if (error === 'invalid_email') {\r\n            setLoadingStatus(false);\r\n            setEmailValidation(false);\r\n            setIsEmailUpdated(0);\r\n            setUser({...user, email: inititaluser.email});\r\n          } else if (error === 'valid_email') {\r\n            dispatch(updateUser(user))\r\n              .then(() => {\r\n                setLoadingStatus(false);\r\n                setEmailValidation(true);\r\n                setIsEmailUpdated(0);\r\n              });\r\n          }\r\n        })\r\n        .catch(error => {\r\n          alert(error);\r\n          setEmailValidation(false);\r\n          setIsEmailUpdated(0);\r\n          setUser({...user, email: inititaluser.email});\r\n        });\r\n    else {\r\n      dispatch(updateUser(user))\r\n        .then(() => {\r\n          setLoadingStatus(false);\r\n        })\r\n        .catch(err=> alert(err));\r\n    }\r\n  \r\n  onClockInputs();\r\n}\r\nconst onClockInputs = () => {\r\n  setInputStatus({\r\n    nameInputStatus: true,\r\n    addressInputStatus: true,\r\n    phoneNumberInputStatus: true,\r\n    emailInputStatus: true,\r\n    birthDateInputState: true,\r\n  });\r\n}\r\nconst onChange = (e) => {\r\n  let name = e.target.name;\r\n  let value = e.target.value;\r\n  if(name=== 'birthDate'){\r\n    setUser({...user, birthDate: value.toLocaleString()})\r\n  }\r\n  setUser({ ...user, [name]: value });\r\n\r\n}\r\n\r\nreturn (\r\n  <div className=\"card\" >\r\n    <div className=\"card-header\">\r\n      Your usermation\r\n      </div>\r\n    <div className=\"card-body\">\r\n      <div className=\"input-group flex-nowrap mb-2\">\r\n        <div className=\"input-group-prepend\">\r\n          <span className=\"input-group-text\" id=\"addon-wrapping\">ID</span>\r\n        </div>\r\n        <input type=\"text\" className=\"form-control\" id='_id' name='_id' readOnly={true}\r\n\r\n          value={user._id} aria-label=\"ID\" />\r\n      </div>\r\n\r\n      <div className=\"input-group flex-nowrap mb-2\">\r\n        <div className=\"input-group-prepend\">\r\n          <span className=\"input-group-text\" >Name</span>\r\n        </div>\r\n        <input type=\"text\" className=\"form-control\"\r\n          aria-label=\"Name\" id=\"name\" name=\"name\"\r\n          readOnly={inputStatus.nameInputStatus}\r\n          onDoubleClick={() => { setInputStatus({ ...inputStatus, nameInputStatus: !inputStatus.nameInputStatus }) }}\r\n          value={user.name}\r\n          onChange={e => onChange(e)}\r\n        />\r\n        <div className=\"input-group-appennd\">\r\n          <i className=\"fa fa-pencil  input-group-text reg-icon\" aria-hidden=\"true\"\r\n            onClick={() => { setInputStatus({ ...inputStatus, nameInputStatus: !inputStatus.nameInputStatus }) }}\r\n          >\r\n          </i>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div className=\"input-group flex-nowrap mb-2\">\r\n        <div className=\"input-group-prepend\">\r\n          <label className=\"input-group-text\">Adress</label>\r\n        </div>\r\n        <input type=\"text\"\r\n          className=\"form-control \"\r\n          id=\"address\" name=\"address\" readOnly={inputStatus.addressInputStatus}\r\n          onDoubleClick={() => setInputStatus({ ...inputStatus, addressInputStatus: !inputStatus.addressInputStatus })}\r\n\r\n          value={user.address}\r\n          onChange={e => onChange(e)} />\r\n        <div className=\"input-group-appennd\">\r\n          <i className=\"fa fa-pencil input-group-text reg-icon\" aria-hidden=\"true\"\r\n            onClick={() => { setInputStatus({ ...inputStatus, addressInputStatus: !inputStatus.addressInputStatus }) }}\r\n          >\r\n          </i>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div className=\"input-group mb-2\">\r\n        <div className=\"input-group-prepend\">\r\n          <label className=\"input-group-text\">Phone</label>\r\n        </div>\r\n        <input type=\"text\"\r\n          className=\"form-control \"\r\n          id=\"phoneNumber\" name=\"phoneNumber\" readOnly={inputStatus.phoneNumberInputStatus}\r\n          onDoubleClick={() => setInputStatus({ ...inputStatus, phoneNumberInputStatus: !inputStatus.phoneNumberInputStatus })}\r\n\r\n\r\n          value={user.phoneNumber}\r\n          onChange={e => onChange(e)} />\r\n        <div className=\"input-group-append\">\r\n          <i className=\"fa fa-pencil input-group-text reg-icon\" aria-hidden=\"true\"\r\n            onClick={() => { setInputStatus({ ...inputStatus, phoneNumberInputStatus: !inputStatus.phoneNumberInputStatus }) }}\r\n          >\r\n          </i>\r\n        </div>\r\n\r\n      </div>\r\n      <div className=\"input-group mb-2\">\r\n        <div className=\"input-group-prepend\">\r\n          <label className=\"input-group-text\">Email</label>\r\n        </div>\r\n        <input type=\"text\"\r\n          className=\"form-control \"\r\n          id=\"email\" name=\"email\" readOnly={inputStatus.emailInputStatus}\r\n          onDoubleClick={() => setInputStatus({ ...inputStatus, emailInputStatus: !inputStatus.emailInputStatus })}\r\n\r\n\r\n          value={user.email}\r\n          onChange={e => onChange(e)} />\r\n        <div className=\"input-group-append\">\r\n          <i className=\"fa fa-pencil input-group-text reg-icon\" aria-hidden=\"true\"\r\n            onClick={() => setInputStatus({ ...inputStatus, emailInputStatus: !inputStatus.emailInputStatus })}\r\n          >\r\n          </i>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"input-group mb-2\">\r\n        <div className=\"input-group-prepend\">\r\n          <label className=\"input-group-text\">BirthDate:</label>\r\n        </div>\r\n        <input type=\"date\"\r\n          className=\"form-control \"\r\n          id=\"birthDate\" name=\"birthDate\" readOnly=\"readOnly\"\r\n          onDoubleClick={() => { setInputStatus({ ...inputStatus, birthDateInputState: !inputStatus.birthDateInputState }) }}\r\n          value={user.birthDate !== undefined ? user.birthDate.substring(0, user.birthDate.indexOf('T')) : ''}\r\n          onChange={e => onChange(e)}\r\n        />\r\n\r\n\r\n      </div>\r\n\r\n      <div className=\"input-group mb-2\">\r\n        <div className=\"input-group-prepend\">\r\n          <label className=\"input-group-text\">Position</label>\r\n        </div>\r\n        <input type=\"text\"\r\n          className=\"form-control \"\r\n          id=\"position\" name=\"position\" readOnly={true}\r\n          value={user.position}\r\n        />\r\n\r\n      </div>\r\n\r\n    </div>\r\n    <div className=\"card-footer text-muted\">\r\n\r\n      <button type=\"button\" className=\"btn btn-primary\" onClick={onSave} >\r\n        {loadingStatus ? <i className=\"fa fa-circle-o-notch fa-spin\"></i> : ''}&nbsp;Save\r\n        </button>\r\n        &nbsp;\r\n        <button type=\"button\" className=\"btn btn-warning\" onClick={onClickCancel}>Cancel</button>\r\n        &nbsp;{emailValidation ? '' : <i className=\"fa fa-exclamation-triangle\" style={{ color: \"red\" }}> Invalid Email</i>}\r\n    </div>\r\n  </div>\r\n);\r\n\r\n}\r\n","import React from 'react';\r\nimport { DisplayUserForm } from './DisplayUserForm';\r\nimport './style.css';\r\nexport const UserPage = () => {\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <h3 className=\"text-center\">Private Information</h3>\r\n            <div className=\"row   justify-content-center mt-50\" >\r\n                \r\n                <div className=\"col-xs-12 col-sm-10 col-md-8 col-lg-6\">\r\n                <DisplayUserForm/>\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport { NavBar } from './app/NavBar';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from 'react-router-dom';\r\n\r\nimport { ReportsPage } from './features/reports/ReportsPage';\r\nimport { UserPage } from './features/user/UserPage';\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <NavBar />\r\n      <div className=\"App \">\r\n        <Switch>\r\n          <Route exact path=\"/reporting\" />\r\n          <Route exact path=\"/reporting/user\" component={UserPage} />\r\n          <Route exact path=\"/reporting/reports\" component={ReportsPage}/>\r\n          <Redirect to=\"/reporting\" />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport userReducer from '../features/user/userSlice';\r\nimport reportsReducer from './../features/reports/reportsSlice';\r\nimport devicesReducer from './../features/devices/devicesSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n    reports: reportsReducer,\r\n    devices: devicesReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}