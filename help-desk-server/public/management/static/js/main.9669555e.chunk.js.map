{"version":3,"sources":["app/NavBar.js","features/employees/EmployeeRow.js","features/employees/EmployeesFilters.js","api/client.js","features/employees/employeesSlice.js","features/employees/AddNewEmpForm.js","features/employees/MoreDetailForm.js","features/employees/EmployeeModal.js","unities/TableHeading.js","features/employees/EmployeesToolkitMenu.js","features/devices/devicesSlice.js","features/employees/EmployeesPage.js","features/tasks/tasksSlice.js","features/reports/reportsSlice.js","features/tasks/TaskRow.js","features/tasks/ReassignForm.js","features/tasks/TaskModal.js","features/tasks/TaskToolkitMenu.js","features/tasks/TasksFilters.js","features/tasks/TasksPage.js","features/reports/AnalyzeReportForm.js","features/reports/AssignTechnicianForm.js","features/reports/CommitAndSaveForm.js","features/reports/EditReportForm.js","features/reports/ReportModal.js","features/reports/ReportRow.js","features/reports/ReportsFilters.js","features/reports/ReportsToolkitMenu.js","features/reports/ReportsPage.js","features/user/userSlice.js","features/user/DisplayUserForm.js","features/user/UserPage.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["host","document","location","NavBar","useState","currentPage","setCurrentPage","className","id","to","onClick","aria-hidden","fetch","method","window","replace","EmployeeRow","props","emp","onContextMenu","currentEmployeeIdUpdated","_id","name","phoneNumber","email","position","EmployeesFilters","filters","onChange","e","target","value","filtersUpdated","type","aria-describedby","placeholder","idFilter","nameFilter","phoneNumberFilter","positionFilter","toString","client","endpoint","a","body","customConfig","headers","config","JSON","stringify","response","status","assign","json","data","ok","Error","statusText","Promise","reject","message","get","post","delete","put","employeesAdapter","createEntityAdapter","selectId","fetchEmployees","createAsyncThunk","employees","addNewEmployee","initialEmployee","employee","updateEmployee","emloyee","checkMail","error","initialState","getInitialState","employeesSlice","createSlice","reducers","extraReducers","pending","state","action","fulfilled","upsertMany","payload","rejected","addOne","updateOne","changes","getSelectors","selectAllEmployees","selectAll","selectEmployeeById","selectById","selectEntities","AddNewEmpForm","closeModal","dispatch","useDispatch","nameValidation","setNameValidation","addressValidation","setAddressValidation","phoneValidation","setPhoneValidation","emailValidation","setEmailValidation","birthDateValidation","setBirthDateValidation","loadingStatus","setLoadingStatus","emailCheckStatus","setEmailCheckStatus","technique","setTechnique","initFormat","address","birthDate","currentData","setCurrentData","nameReg","addressReg","phoneReg","emailReg","useEffect","match","createWarningApearance","warningText","style","color","borderColor","datatoggle","title","data-dismiss","disabled","then","msg","catch","err","MoreDetailForm","currentEmployeeId","currentEmployee","useSelector","EmployeeModal","employeeModal","isEmployeeModalDisplayed","employeeModalStatus","onCloseModal","updateEmployeeModal","optionedContent","display","tabIndex","role","aria-labelledby","mouseX","clientX","mouseY","clientY","modalBoundary","getElementById","getBoundingClientRect","left","right","top","bottom","onCloseModalCheckly","aria-label","TableHeading","sortName","setSortOrder","sortOrder","sorterDisplayer","setSorterDisplayer","onMouseOver","onMouseOut","float","class","EmployeesToolkitMenu","displayToolbar","toolbar","isDisplay","require","deviceAdapter","device","fetchDevices","devices","devicesSlice","selectAllDevices","selectDeviceById","EmployeesPage","content","employeeStatus","addressFilter","emailFilter","setFilters","idSorter","nameSorter","addressSorter","emailSorter","phoneNumberSorter","positionSorter","employeesSorters","setEmployeesSorters","setToolbar","setEmployeeModal","tempEmployees","Object","filter","toLowerCase","indexOf","sort","b","onUpdateCurrentEmployee","empId","renderedEmployees","map","onUpdateModal","onMouseMove","preventDefault","tbodyOnMouseLick","tasksAdapter","task","fetchTasks","tasks","addNewTask","updateTask","tasksSlice","updateInternalTask","updatedIndex","ids","find","entities","selectAllTasks","selectTaskById","selectIds","actions","reportsAdapter","report","fetchReports","reports","deleteReport","addNewReport","checkReportStatus","updateReport","responese","reportsSlice","reducer","push","prepare","employeeId","deviceId","reportDetail","detail","substring","reportDate","Date","toLocaleString","reportStatus","removeOne","selectAllReports","selectReportById","TaskRow","setCurrentTaskId","data-toggle","data-target","technicianName","reportTitle","taskName","width","progress","aria-valuenow","aria-valuemin","aria-valuemax","ReassignForm","currentTaskId","taskModal","setTaskModal","techniciansOption","tech","techniqueOption","setTechniqueOption","technicians","setTechnicians","currentTask","currentTechnician","setCurrentTechncian","validation","setValidation","renderedTechnicians","required","readOnly","rows","technician","alert","TaskModal","TaskToolkitMenu","taskToolkit","setTaskToolkit","taskModalOption","TasksFilters","UpdateFilter","tasksFilters","technicianNameFilter","reportTitleFilter","taskNameFilter","statusFilter","TasksPage","renderedTask","taskStatus","employeesStatus","setContent","isUpdate","setUpdate","setTasksFilters","technicianNameSorter","reportTitleSorter","taskNameSorter","statusSorter","progressSorter","tasksSorter","setTasksSorter","height","tempRefTasks","length","toLocaleLowerCase","parseInt","AnalyzeReportForm","displayModal","onNext","setReport","currentReportId","setCurrentReportId","numberOfTasks","setNumberOfTasks","currentReport","currentDevice","severity","reportData","setReportData","renderedReporters","reporter","rep","renderedDevices","deviceName","renderedReports","undefined","min","max","step","AssignTechnicianForm","onPrevious","setTasks","setCurrentTask","assignedTasks","setAssignedTasks","assignStep","setAssignStep","option","renderedTasks","parseFloat","technicianId","CommitAndSaveForm","onSave","reportId","employeeName","EditReportForm","reportBody","setStep","forEach","ReportModal","modalOption","data-","dismiss","ReportRow","setCurrentReport","onClickOver","ReportsFilters","updateReportFilters","employeeNameFilter","deviceNameFilter","reportDateFilter","reportStatusFilter","ReportsToolkitMenu","ReportsPage","deviceStatus","employeeNameSorter","deviceNameSorter","reportDateSorter","reportStatusSorter","reportsSorters","setReportsSorters","console","log","toolbarOption","isModalDisplayed","reportModal","setReportModal","tempReports","localeCompare","onSetCurrentReport","onDisplayModal","fetchUser","updateUser","userSlice","user","userUpdated","selectUser","cookie","split","reduce","accumulator","key","trim","decodeURIComponent","DisplayUserForm","inititaluser","userStatus","isEmailUpdated","setIsEmailUpdated","setUser","nameInputStatus","addressInputStatus","phoneNumberInputStatus","emailInputStatus","birthDateInputState","inputStatus","setInputStatus","loadingToken","onClockInputs","onDoubleClick","UserPage","App","exact","path","component","configureStore","employeesReducer","userReducer","reportsReducer","devicesReducer","tasksReducer","Boolean","hostname","ReactDOM","render","StrictMode","store","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qUAGMA,EAAOC,SAASC,SAASF,KAClBG,EAAS,WAAO,IAAD,EACcC,mBAAS,GADvB,mBACjBC,EADiB,KACJC,EADI,KAOxB,OACI,qBAAKC,UAAU,UAAf,SACI,sBAAKC,GAAG,UAAR,UACI,qBAAKD,UAAU,mBAEf,qBAAIA,UAAU,2BAAd,UACI,oBAAIA,UAA2B,IAAhBF,EAAmB,SAAS,GAA3C,SACI,cAAC,IAAD,CAAMI,GAAG,mBAAmBC,QAAS,kBAAIJ,EAAe,IAAxD,SAA4D,mBAAGC,UAAU,sBAAsBI,cAAY,aAE/G,oBAAIJ,UAA2B,IAAhBF,EAAmB,SAAS,GAA3C,SACI,cAAC,IAAD,CAAMI,GAAG,mBAAmBC,QAAS,kBAAIJ,EAAe,IAAxD,SAA4D,mBAAGC,UAAU,gCAAgCI,cAAY,aAEzH,oBAAIJ,UAA2B,IAAhBF,EAAmB,SAAS,GAA3C,SACI,cAAC,IAAD,CAAMI,GAAG,oBAAoBC,QAAS,kBAAIJ,EAAe,IAAzD,SAA6D,mBAAGC,UAAU,uBAAuBI,cAAY,aAEjH,oBAAIJ,UAA2B,IAAhBF,EAAmB,SAAS,GAA3C,SACI,cAAC,IAAD,CAAMI,GAAG,wBAAwBC,QAAS,kBAAIJ,EAAe,IAA7D,SAAiE,mBAAGC,UAAU,uBAAuBI,cAAY,aAErH,oBAAIJ,UAA2B,IAAhBF,EAAmB,SAAS,GAA3C,SACI,cAAC,IAAD,CAAMI,GAAG,sBAAsBC,QAAS,kBAAIJ,EAAe,IAA3D,SAA+D,mBAAGC,UAAU,2BAA2BI,cAAY,aAEvH,6BACI,cAAC,IAAD,CAAMD,QA1BX,WACXE,MAAM,UAAD,OAAWZ,EAAX,WAAyB,CAACa,OAAQ,QACvCC,OAAOZ,SAASa,QAAhB,iBAAkCf,EAAlC,aAwBgB,SACI,mBAAGO,UAAU,0BAA0BI,cAAY,sB,6BC9BlEK,EAAc,SAACC,GAExB,IAAMC,EAAMD,EAAMC,IAIlB,OACI,qBAAkBC,cAJO,WACzBF,EAAMG,yBAAyBF,EAAIG,MAGnC,UAEI,6BAAKH,EAAIG,MACT,6BAAKH,EAAII,OAET,6BAAKJ,EAAIK,cACT,6BAAKL,EAAIM,QAET,6BAAKN,EAAIO,aARJP,EAAIG,MCVRK,EAAmB,SAACT,GAC7B,IAAMU,EAAUV,EAAMU,QAGhBC,EAAW,SAACC,GACd,IAAIP,EAAOO,EAAEC,OAAOR,KAChBS,EAAQF,EAAEC,OAAOC,MACrBd,EAAMe,eAAeV,EAAKS,IAG9B,OACI,+BACI,6BACI,uBAAOE,KAAK,OAAO1B,UAAU,eACzBe,KAAK,WAAWd,GAAG,WAAW0B,mBAAiB,SAC/CC,YAAY,eACZJ,MAASJ,EAAQS,SACjBR,SAAY,SAACC,GAAD,OAAMD,EAASC,QAGnC,6BACI,uBAAOI,KAAK,OAAO1B,UAAU,eACzBe,KAAK,aAAad,GAAG,aAAa0B,mBAAiB,SACnDC,YAAY,iBACZJ,MAASJ,EAAQU,WACjBT,SAAY,SAAAC,GAAC,OAAID,EAASC,QAKlC,6BACI,uBAAOI,KAAK,OAAO1B,UAAU,eACzBe,KAAK,oBAAoBd,GAAG,oBAAoB0B,mBAAiB,SACjEC,YAAY,kBACZJ,MAASJ,EAAQW,kBACjBV,SAAY,SAAAC,GAAC,OAAID,EAASC,QAGlC,6BACI,uBAAOI,KAAK,OAAO1B,UAAU,eACzBe,KAAK,cAAcd,GAAG,cAAc0B,mBAAiB,SACrDC,YAAY,kBACZJ,MAASJ,EAAQH,MACjBI,SAAY,SAAAC,GAAC,OAAID,EAASC,QAIlC,6BACI,yBAAQtB,UAAU,eAAee,KAAK,iBAAiBd,GAAG,iBAAiBuB,MAASJ,EAAQY,eAC5FX,SAAU,SAAAC,GAAC,OAAID,EAASC,IADxB,UAEI,wBAAQE,MAAM,MAAd,iBACA,wBAAQA,MAAM,aAAd,yBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,UAAd,8B,sCCtDd/B,EAAOC,SAASC,SAASF,KAAKwC,WAC7B,SAAeC,EAAtB,kC,4CAAO,WAAsBC,GAAtB,uCAAAC,EAAA,8FAA4D,GAA1BC,EAAlC,EAAkCA,KAASC,EAA3C,wBAEGC,EAAU,CAAE,eAAgB,oBAC5BC,EAHH,yBAIClC,OAAQ+B,EAAO,OAAS,OACrBC,GALJ,IAMCC,QAAQ,2BACDA,GACAD,EAAaC,WAIpBF,IACAG,EAAOH,KAAOI,KAAKC,UAAUL,IAb9B,kBAoBwB9B,OAAOF,MAAP,iBAAuBZ,EAAvB,YAA+B0C,GAAYK,GApBnE,UAqByB,OADlBG,EApBP,QAqBcC,OArBd,wBAuBKrC,OAAOZ,SAASkD,OAAOtC,OAAOZ,UAvBnC,4CA0BcgD,EAASG,OA1BvB,WA0BCC,EA1BD,QA2BKJ,EAASK,GA3Bd,0CA6BYD,GA7BZ,cA+BO,IAAIE,MAAMN,EAASO,YA/B1B,2DAiCQC,QAAQC,OAAO,KAAIC,QAAU,KAAIA,QAAUN,IAjCnD,2D,sBA0CPb,EAAOoB,IAAM,SAAUnB,GAA8B,IAApBG,EAAmB,uDAAJ,GAC5C,OAAOJ,EAAOC,EAAD,YAAC,eAAeG,GAAhB,IAA8BhC,OAAQ,UAGvD4B,EAAOqB,KAAO,SAAUpB,EAAUE,GAA0B,IAApBC,EAAmB,uDAAJ,GACnD,OAAOJ,EAAOC,EAAD,YAAC,eAAeG,GAAhB,IAA8BD,OAAM/B,OAAQ,WAG7D4B,EAAOsB,OAAS,SAAUrB,GAA8B,IAApBG,EAAmB,uDAAJ,GAC/C,OAAOJ,EAAOC,EAAD,YAAC,eAAeG,GAAhB,IAA8BhC,OAAQ,aAGvD4B,EAAOuB,IAAM,SAAUtB,EAAUE,GAA0B,IAApBC,EAAmB,uDAAJ,GAClD,OAAOJ,EAAOC,EAAD,YAAC,eAAeG,GAAhB,IAA8BD,OAAM/B,OAAQ,UCtD7D,I,QAAMoD,EAAmBC,8BAAoB,CACzCC,SAAU,SAAAjD,GAAG,OAAIA,EAAIG,OAEZ+C,EAAiBC,2BAAiB,2BAAD,sBAA6B,4BAAA1B,EAAA,sEAChDF,EAAOoB,IAAI,iBADqC,cACjEX,EADiE,yBAEhEA,EAASoB,WAFuD,4CAI9DC,EAAiBF,2BAAiB,2BAAD,uCAA6B,WAAOG,GAAP,eAAA7B,EAAA,sEAChDF,EAAOqB,KAAK,gBAAiB,CAAEW,SAAUD,IADO,cACjEtB,EADiE,yBAEhEA,EAASuB,UAFuD,2CAA7B,uDAIjCC,EAAiBL,2BAAiB,2BAAD,uCAA6B,WAAOI,EAAUpD,GAAjB,eAAAsB,EAAA,sEAChDF,EAAOuB,IAAP,wBAA4B3C,GAAO,CAAEoD,aADW,cACjEvB,EADiE,yBAEhEA,EAASyB,SAFuD,2CAA7B,yDAQjCC,GAJgBP,2BAAiB,2BAAD,uCAA6B,WAAOhD,GAAP,eAAAsB,EAAA,sEAC/CF,EAAOoB,IAAP,wBAA4BxC,IADmB,cAChE6B,EADgE,yBAE/DA,EAASyB,SAFsD,2CAA7B,uDAIvB,uCAAG,WAAOnD,GAAP,eAAAmB,EAAA,sEACEF,EAAOoB,IAAP,0CAA8CrC,IADhD,cACf0B,EADe,yBAEdA,EAAS2B,OAFK,2CAAH,uDAIhBC,EAAeb,EAAiBc,gBAAgB,CAClD5B,OAAQ,OACR0B,MAAO,OAGLG,EAAiBC,sBAAY,CAC/B3D,KAAM,YACNwD,eACAI,SAAU,GAGVC,eAAa,mBACRf,EAAegB,SAAU,SAACC,EAAOC,GAC9BD,EAAMlC,OAAS,aAFV,cAIRiB,EAAemB,WAAY,SAACF,EAAOC,GAChCD,EAAMlC,OAAS,YACfc,EAAiBuB,WAAWH,EAAOC,EAAOG,YANrC,cAQRrB,EAAesB,UAAW,SAACL,EAAOC,GAC/BD,EAAMlC,OAAS,SACfkC,EAAMR,MAAQS,EAAOT,MAAMjB,WAVtB,cAYRW,EAAegB,WAAY,SAACF,EAAOC,GAAR,OAAkBrB,EAAiB0B,OAAON,EAAOC,EAAOG,YAZ3E,cAaRf,EAAea,WAAW,SAACF,EAAOC,GAAR,OAAkBrB,EAAiB2B,UAAUP,EAAM,CAAChE,IAAIiE,EAAOG,QAAQpE,IAAKwE,QAAQP,EAAOG,aAb7G,K,EAuBbxB,EAAiB6B,cAAa,SAAAT,GAAK,OAAIA,EAAMf,aALlCyB,E,EAAXC,UACYC,E,EAAZC,WASWlB,G,EARXmB,eAQWnB,EAAf,SC5DaoB,G,MAAgB,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACtBC,EAAWC,cAD4B,EAEDnG,oBAAS,GAFR,mBAEtCoG,EAFsC,KAEtBC,EAFsB,OAGKrG,oBAAS,GAHd,mBAGtCsG,EAHsC,KAGnBC,EAHmB,OAICvG,oBAAS,GAJV,mBAItCwG,EAJsC,KAIrBC,EAJqB,OAKCzG,oBAAS,GALV,mBAKtC0G,EALsC,KAKrBC,EALqB,OAMS3G,oBAAS,GANlB,mBAMtC4G,EANsC,KAMjBC,EANiB,OAOH7G,oBAAS,GAPN,mBAOtC8G,EAPsC,KAOvBC,EAPuB,OAQG/G,oBAAS,GARZ,mBAQtCgH,EARsC,KAQpBC,EARoB,OASXjH,mBAAS,YATE,mBAStCkH,EATsC,KAS3BC,EAT2B,KAUvCC,EAAa,CACflG,KAAM,GACNmG,QAAS,GACTlG,YAAa,GACbC,MAAO,GACPkG,UAAW,GACXjG,SAAU,YAhB+B,EAkBPrB,mBAASoH,GAlBF,mBAkBtCG,EAlBsC,KAkBzBC,EAlByB,KAmBvCC,EAAU,YACVC,EAAa,WACbC,EAAW,MACXC,EAAW,gBA+BjBC,qBAAU,WA5BDN,EAAYrG,KAAK4G,MAAML,GAGxBpB,GAAkB,GAFlBA,GAAkB,GAIjBkB,EAAYF,QAAQS,MAAMJ,GAG3BnB,GAAqB,GAFrBA,GAAqB,GAIpBgB,EAAYpG,YAAY2G,MAAMH,GAG/BlB,GAAmB,GAFnBA,GAAmB,GAIlBc,EAAYnG,MAAM0G,MAAMF,GAGzBjB,GAAmB,GAFnBA,GAAmB,GAIlBY,EAAYD,UAGbT,GAAuB,GAFvBA,GAAuB,KAU3B,CAACU,IAIL,IAAM/F,EAAW,SAACC,GACd,IAAIP,EAAOO,EAAEC,OAAOR,KAChBS,EAAQF,EAAEC,OAAOC,MAErB6F,EAAe,2BACRD,GADO,kBAETrG,EAAOS,MAKVoG,EAAyB,SAACC,EAAajF,GACzC,OAAe,IAAXA,EAEI,mBAAG5C,UAAU,qDACT8H,MAAO,CAAEC,MAAO,OAAS3H,cAAY,SAKrC,mBAAGJ,UAAU,wCACjB8H,MAAO,CAAEC,MAAO,SAAW3H,cAAY,UAoCnD,OACI,gCACI,qBAAKJ,UAAU,aAAf,SACI,uBAAMC,GAAG,qBAAT,UACI,sBAAKD,UAAU,+BAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAMA,UAAU,mBAAhB,oBAGJ,uBAAO0B,KAAK,OAAOX,KAAK,OAAOd,GAAG,OAC9BD,UAAU,eAAeqB,SAAU,SAAAC,GAAC,OAAID,EAASC,IAAIE,MAAO4F,EAAYrG,KACxE+G,MAAO,CAAEE,YAAc/B,EAAyB,QAAR,SAG5C,qBAAKjG,UAAU,sBAAf,SACK4H,EAAuB,EAAiB3B,QAKjD,sBAAKjG,UAAU,+BAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAMA,UAAU,mBAAhB,uBAGJ,uBAAO0B,KAAK,OAAOX,KAAK,UAAUd,GAAG,UACjCgI,WAAW,UAAUC,MAAM,qBAC3BlI,UAAU,eAAeqB,SAAU,SAAAC,GAAC,OAAID,EAASC,IAAIE,MAAO4F,EAAYF,QACxEY,MAAO,CAAEE,YAAc7B,EAA4B,QAAR,SAE/C,qBAAKnG,UAAU,sBAAf,SACK4H,EAAuB,EAAIzB,QAIpC,sBAAKnG,UAAU,+BAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAMA,UAAU,mBAAhB,qBAGJ,uBAAO0B,KAAK,OAAOX,KAAK,cAAcd,GAAG,cAAcD,UAAU,eAC7DqB,SAAU,SAAAC,GAAC,OAAID,EAASC,IAAIE,MAAO4F,EAAYpG,YAC/C8G,MAAO,CAAEE,YAAc3B,EAA0B,QAAR,SAE7C,qBAAKrG,UAAU,sBAAf,SACK4H,EAAuB,EAAIvB,QAIpC,sBAAKrG,UAAU,+BAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAMA,UAAU,mBAAhB,qBAGJ,uBAAO0B,KAAK,OAAOX,KAAK,QAAQd,GAAG,QAAQD,UAAU,eACjDqB,SAAU,SAAAC,GAAC,OAAID,EAASC,IAAIE,MAAO4F,EAAYnG,MAC/C6G,MAAO,CAAEE,YAAezB,GAAoBM,EAA4B,QAAR,SAEpE,qBAAK7G,UAAU,sBAAf,SACK4H,EAAuB,EAAIrB,GAAmBM,QAIvD,sBAAK7G,UAAU,+BAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAMA,UAAU,mBAAhB,yBAGJ,uBAAO0B,KAAK,OAAOX,KAAK,YAAYd,GAAG,YAAYD,UAAU,eACzDqB,SAAU,SAAAC,GAAC,OAAID,EAASC,IAAIE,MAAO4F,EAAYD,UAC/CW,MAAO,CAAEE,YAAcvB,EAA8B,QAAR,SAEjD,qBAAKzG,UAAU,sBAAf,SACK4H,EAAuB,EAAInB,QAKpC,sBAAKzG,UAAU,+BAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAMA,UAAU,mBAAhB,wBAEJ,yBAAQA,UAAU,eAAee,KAAK,WAAWd,GAAG,WAChDoB,SAAU,SAAAC,GAAC,OAAID,EAASC,IAAIE,MAAO4F,EAAYlG,SADnD,UAGI,wBAAQM,MAAM,WAAd,sBACA,wBAAQA,MAAM,aAAd,8BAGkB,eAAzB4F,EAAYlG,SACT,sBAAKlB,UAAU,+BAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAMA,UAAU,mBAAhB,yBAEJ,yBAAQA,UAAU,eAAee,KAAK,YAAYd,GAAG,WACjDoB,SAAU,SAAAC,GAAC,OAAI0F,EAAa1F,EAAEC,OAAOC,QAAQA,MAAOuF,EADxD,UAGI,wBAAQvF,MAAM,WAAd,sBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,UAAd,2BAGN,QAId,sBAAKxB,UAAU,eAAf,UACI,wBACI0B,KAAK,SAAS1B,UAAU,oBAAoBmI,eAAa,QACzDhI,QAAS,WACL2F,KAHR,mBAQA,yBACIpE,KAAK,SAAS1B,UAAU,kBACxBoI,WAAYnC,GAAkBI,GAAmBI,GAAuBN,GAAqBI,GAC7FpG,QAAS,SAAAmB,GAAC,OAlJtBsF,GAAiB,QACjBvC,EAAU+C,EAAYnG,OACjBoH,MAAK,SAAAC,GAEU,gBAARA,GACAxB,GAAoB,GACpBf,EACI/B,EAC6B,eAAzBoD,EAAYlG,SAAZ,2BAA6CkG,GAA7C,IAA0DL,cAAcK,IAG3EiB,MAAK,SAAA1H,GACF0G,EAAeJ,GACfL,GAAiB,OAEV,kBAAR0B,IAEPxB,GAAoB,GACpBF,GAAiB,OAIxB2B,OAAM,SAAAC,GACH1B,GAAoB,GACpBF,GAAiB,OAuHjB,UAKKD,EAAgB,mBAAG3G,UAAU,iCAAsC,GALxE,sBCvOHyI,EAAiB,SAAC/H,GAC3B,IAAMgI,EAAoBhI,EAAMgI,kBAE1BC,GADUC,YAAYpD,GACJoD,aAAY,SAAA9D,GAAK,OAAIY,EAAmBZ,EAAO4D,OAMvE,OAAGC,EAEC,sBAAM1I,GAAG,iBAAT,SACI,sBAAKD,UAAU,+BAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAMA,UAAU,mBAAhB,oBAEJ,uBAAO0B,KAAK,OAAOX,KAAK,OAAOd,GAAG,OAC9BD,UAAU,eAAeqB,SAAU,SAAAC,KAAkBE,MAAOmH,EAAgB5H,YAKpF,ICpBC8H,EAAgB,SAACnI,GAAW,IAAD,EAEwCA,EAAMoI,cAA1EC,EAF4B,EAE5BA,yBAA0BC,EAFE,EAEFA,oBAAoBN,EAFlB,EAEkBA,kBAqBhDO,GAnBWjD,cAmBI,WACjBtF,EAAMwI,qBAAoB,EAAQ,KAuBhCC,EAnB0B,IAAxBH,EAEI,cAAC,EAAD,CAAelD,WAAYmD,IAGA,IAAxBD,EAEH,cAAC,EAAD,CAAgBlD,WAAYmD,EAAcP,kBAAmBA,IAIzD,GAahB,OACI,qBAAK1I,UAAW+I,EAA2B,kBAAoB,aAC3DjB,MACC,CACGsB,QAASL,EAA2B,QAAU,QAElD9I,GAAG,gBACHoJ,SAAS,KAAKC,KAAK,SAASC,kBAAgB,qBAAqBnJ,cAAY,OAC7ED,QAAS,SAACmB,IArDU,SAACA,GACzB,IAAMkI,EAASlI,EAAEmI,QACXC,EAASpI,EAAEqI,QAEXC,EADQlK,SAASmK,eAAe,wBACVC,wBACb,IAAXJ,GAA2B,IAAXF,GACXT,IACDS,EAASI,EAAcG,MAAQP,EAASI,EAAcI,OACtDN,EAASE,EAAcK,KAAOP,EAASE,EAAcM,SAErDxJ,EAAMwI,qBAAoB,EAAQ,GA2CpBiB,CAAoB7I,IAP1C,SAUI,qBAAKtB,UAAU,eAAesJ,KAAK,WAAnC,SACI,sBAAKtJ,UAAU,gBAAgBC,GAAG,uBAAlC,UACI,sBAAKD,UAAU,eAAf,UACI,oBAAIA,UAAU,cAAcC,GAAG,qBAA/B,SAC6B,IAAxB+I,EAA4B,mBAAqB,KAEtD,wBAAQtH,KAAK,SAAS1B,UAAU,QAAQmI,eAAa,QAAQiC,aAAW,QACpEjK,QACI,WACIO,EAAMwI,qBAAoB,EAAQ,IAH9C,SAQI,sBAAM9I,cAAY,OAAlB,uBAGP+I,UCpFRkB,EAAe,SAAC,GAAkD,IAAhDnC,EAA+C,EAA/CA,MAAOoC,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UAAgB,EAC5B3K,oBAAS,GADmB,mBACnE4K,EADmE,KAClDC,EADkD,KAM1E,OACI,qBACIC,YAAa,SAAArJ,GAAC,OAAIoJ,GAAmB,IACrCE,WAAY,SAAAtJ,GAAC,OAAIoJ,GAAmB,IACpCvK,QARc,WAClBoK,EAAaD,EAAUE,EAAY,EAAIA,EAAY,GAAK,IAIxD,UAKI,sBAAM1C,MAAO,CAAC+C,MAAM,QAApB,SACC3C,IAGAuC,EACK,sBAAMzK,UAAU,SAAS8H,MAAO,CAAC+C,MAAM,QAAS9C,MAAO,cAAvD,UACkB,IAAfyC,EACK,mBAAGxK,UAAU,oBAEG,IAAdwK,EACM,mBAAGxK,UAAU,mBACb,mBAAG8K,MAAM,eAAe1K,cAAY,WAG5C,OC1Bb2K,EAAuB,SAAC,GAAmD,IAAlDC,EAAiD,EAAjDA,eAAgB9B,EAAiC,EAAjCA,oBAAqB+B,EAAY,EAAZA,QAChEhB,EAAwBgB,EAAxBhB,IAAKF,EAAmBkB,EAAnBlB,KAAMmB,EAAaD,EAAbC,UAEDlF,cAajB,OACI,uBAAMhG,UAAU,eAAe8H,MAAO,CAACmC,MAAKF,OAAMX,SAAqB,IAAZ8B,EAAiB,QAAQ,QAApF,UACI,wBAAQxJ,KAAK,SAAS1B,UAAU,kBAC5BG,QAde,WACvB6K,GAAe,GACf9B,GAAoB,EAAO,IAWvB,SAGI,mBAAGlJ,UAAU,sBAAsBI,cAAY,WAJvD,OAMI,wBAAQsB,KAAK,SAAS1B,UAAU,kBAAhC,SACI,mBAAGA,UAAU,iCAAiCI,cAAY,WAPlE,OAUI,wBAAQsB,KAAK,SAAS1B,UAAU,kBAAkBG,QAhBhC,WAEtB6K,GAAe,GACf9B,GAAoB,EAAO,IAavB,SACI,mBAAGlJ,UAAU,6BAA6BI,cAAY,e,EC7BP+K,EAAQ,GAA/DzG,E,EAAAA,YAAaf,E,EAAAA,oBAAqBG,E,EAAAA,iBACpCsH,EAAgBzH,EAAoB,CACtCC,SAAU,SAAAyH,GAAM,OAAIA,EAAOvK,OAQjBwK,GALwBxH,EAAiB,uBAAD,uCAAyB,WAAOhD,GAAP,eAAAsB,EAAA,6DACrEO,EAAWT,EAAOoB,IAAP,wBAA4BxC,EAA5B,aAD0D,kBAEpE6B,EAAS4I,SAF2D,2CAAzB,uDAKzBzH,EAAiB,sBAAD,sBAAwB,4BAAA1B,EAAA,sEAC1CF,EAAOoB,IAAP,eAD0C,cAC3DX,EAD2D,yBAE1DA,EAAS4I,SAFiD,6CAW/DC,EAAe9G,EAAY,CAC7B3D,KAAM,UACNwD,aAPiB6G,EAAc5G,gBAAgB,CAC/C5B,OAAQ,OACR0B,MAAO,OAMPK,SAAU,GAGVC,eAAa,mBACR0G,EAAazG,SAAS,SAACC,EAAOC,GAC3BD,EAAMlC,OAAS,aAFV,cAIR0I,EAAanG,UAAU,SAACL,EAAOC,GAC5BD,EAAMlC,OAAS,YALV,cAOR0I,EAAatG,WAAW,SAACF,EAAOC,GAC7BD,EAAMlC,OAAS,YACfwI,EAAcnG,WAAWH,EAAOC,EAAOG,YATlC,K,GAgBbkG,EAAc7F,cAAa,SAAAT,GAAK,OAAIA,EAAMyG,WAF9BE,G,GAAZhG,UACYiG,G,GAAZ/F,WAEW6F,KAAf,QCjCaG,GAAgB,WACzB,IAcIC,EAdE7F,EAAWC,cACX6F,EAAiBjD,aAAY,SAAA9D,GAAK,OAAIA,EAAMf,UAAUnB,UACtD0B,EAAQsE,aAAY,SAAA9D,GAAK,OAAIA,EAAMf,UAAUO,SAE7CP,EAAY6E,YAAYpD,GAE9BkC,qBACI,WAC2B,SAAnBmE,GACA9F,EAASlC,OAEd,CAACgI,EAAgB9F,IAKD,YAAnB8F,EACAD,EACI,qBAAK5L,UAAU,iBAAiBsJ,KAAK,SAArC,SACI,sBAAMtJ,UAAU,UAAhB,0BAEkB,cAAnB6L,EACPD,EAAU7H,EACgB,WAAnB8H,IACPD,EAAU,8BAAMtH,KAzBW,MA4BDzE,mBAAS,CACnCgC,SAAU,GACVC,WAAY,GACZgK,cAAe,GACfC,YAAa,GACbhK,kBAAmB,GACnBC,eAAgB,QAlCW,mBA4BxBZ,EA5BwB,KA4Bf4K,EA5Be,OAoCiBnM,mBAAS,CACrDoM,SAAU,EACVC,WAAY,EACZC,cAAe,EACfC,YAAa,EACbC,kBAAmB,EACnBC,eAAgB,IA1CW,mBAoCxBC,EApCwB,KAoCNC,EApCM,OA4CD3M,mBAAS,CACnCoK,IAAK,EACLF,KAAM,EACNmB,WAAW,IA/CgB,mBA4CxBD,EA5CwB,KA4CfwB,EA5Ce,OAiDW5M,mBAAS,CAC/CkJ,0BAA0B,EAC1BL,kBAAmB,GACnBM,qBAAsB,IApDK,mBAiDxBF,EAjDwB,KAiDT4D,EAjDS,KAwDzBnC,EAAe,SAACxJ,EAAMS,GACxBgL,EAAoB,aAChBP,SAAU,EACVC,WAAY,EACZC,cAAe,EACfC,YAAa,EACbC,kBAAmB,EACnBC,eAAgB,GACfvL,EAAOS,KAIZmL,EAAgBC,OAAO/J,OAAO,GAAI+I,GAElCxK,EAAQS,WAAU8K,EAAgBA,EAAcE,QAAO,SAAAlM,GACvD,OAAqF,IAA9EA,EAAIG,IAAImB,WAAW6K,cAAcC,QAAQ3L,EAAQS,SAASiL,mBAGjE1L,EAAQU,aAAY6K,EAAgBA,EAAcE,QAAO,SAAAlM,GACzD,OAAwF,IAAjFA,EAAII,KAAKkB,WAAW6K,cAAcC,QAAQ3L,EAAQU,WAAWgL,mBAGpE1L,EAAQW,oBAAmB4K,EAAgBA,EAAcE,QAAO,SAAAlM,GAChE,OAAsG,IAA/FA,EAAIK,YAAYiB,WAAW6K,cAAcC,QAAQ3L,EAAQW,kBAAkB+K,mBAGlF1L,EAAQ2K,cAAaY,EAAgBA,EAAcE,QAAO,SAAAlM,GAC1D,OAA0F,IAAnFA,EAAIM,MAAMgB,WAAW6K,cAAcC,QAAQ3L,EAAQ2K,YAAYe,mBAI1EH,EAAgBA,EAAcE,QAAO,SAAAlM,GACjC,MAA+B,QAA3BS,EAAQY,eAAiCrB,EACd,aAA3BS,EAAQY,eAAuD,aAAjBrB,EAAIO,SACvB,YAA3BE,EAAQY,eAAsD,YAAjBrB,EAAIO,SAC7B,eAAjBP,EAAIO,YAGmB,IAA9BqL,EAAiBN,WACjBU,EAAgBA,EAAcK,MAAK,SAAC5K,EAAG6K,GACnC,OAAO7K,EAAEtB,IAAMmM,EAAEnM,IAAMyL,EAAiBN,UAAaM,EAAiBN,aAG1C,IAAhCM,EAAiBL,aACjBS,EAAgBA,EAAcK,MAAK,SAAC5K,EAAG6K,GACnC,OAAG7K,EAAErB,OAASkM,EAAElM,KAAa,EACtBqB,EAAErB,KAAOkM,EAAElM,KAAOwL,EAAiBL,YAAeK,EAAiBL,eAG3C,IAAnCK,EAAiBJ,gBACjBQ,EAAgBA,EAAcK,MAAK,SAAC5K,EAAG6K,GACnC,OAAG7K,EAAE8E,UAAY+F,EAAE/F,QAAgB,EAC5B9E,EAAE8E,QAAU+F,EAAE/F,QAAUqF,EAAiBJ,eAAkBI,EAAiBJ,kBAGtD,IAAjCI,EAAiBH,cACjBO,EAAgBA,EAAcK,MAAK,SAAC5K,EAAG6K,GACnC,OAAG7K,EAAEnB,QAAUgM,EAAEhM,MAAc,EACvBmB,EAAEnB,MAAQgM,EAAEhM,MAAQsL,EAAiBH,aAAgBG,EAAiBH,gBAG3C,IAAvCG,EAAiBF,oBACjBM,EAAgBA,EAAcK,MAAK,SAAC5K,EAAG6K,GACnC,OAAG7K,EAAEpB,cAAgBiM,EAAEjM,YAAoB,EACpCoB,EAAEpB,YAAciM,EAAEjM,YAAcuL,EAAiBF,mBAAsBE,EAAiBF,sBAG/D,IAApCE,EAAiBD,iBACjBK,EAAgBA,EAAcK,MAAK,SAAC5K,EAAG6K,GACnC,OAAG7K,EAAElB,WAAa+L,EAAE/L,SAAiB,EAC9BkB,EAAElB,SAAW+L,EAAE/L,SAAWqL,EAAiBD,gBAAmBC,EAAiBD,mBAG9F,IAAMY,EAA0B,SAACC,GAC7BT,EAAiB,2BACV5D,GADS,IAEZJ,kBAAmByE,MAGrBC,EAAoBT,EAAcU,KAAI,SAAA1M,GAAG,OACvC,cAAC,EAAD,CAAaA,IAAKA,EAAmBE,yBAA0BqM,GAAnCvM,EAAIG,QAuBlCwM,EAAgB,SAAClE,EAAUxG,GAE7B8J,EAAiB,2BACV5D,GADS,IAEZC,yBAA0BK,EAC1BJ,oBAAqBpG,MAU7B,OACI,sBAAK5C,UAAW8I,EAAcC,yBAA2B,6BAA+B,kBAAxF,UAGKkC,EAAQC,UAAU,cAAC,EAAD,CAAsBD,QAASA,EAC9CD,eA3Ba,SAACE,GACtBuB,EAAW,2BACJxB,GADG,IAENC,gBAwBsChC,oBAAqBoE,IACxD,GACFxE,EAAcC,yBAAyB,cAAC,EAAD,CAAeG,oBAAqBoE,EACxE5E,kBAAmBI,EAAcJ,kBACjCI,cAAeA,IAChB,GACH,oBAAI9I,UAAU,cAAd,kCACA,qBAAKA,UAAU,6BAAf,SAEI,qBAAKA,UAAU,0CAAf,SAEI,wBAAOA,UAAU,mCAAjB,UACI,wBAAOA,UAAU,aAAjB,UACI,+BACI,cAAC,EAAD,CACIkI,MAAM,KACNoC,SAAS,WACTE,UAAW+B,EAAiBN,SAC5B1B,aAAcA,IAElB,cAAC,EAAD,CACIrC,MAAM,OACNoC,SAAS,aACTE,UAAW+B,EAAiBL,WAC5B3B,aAAcA,IAElB,cAAC,EAAD,CACIrC,MAAM,eACNoC,SAAS,oBACTE,UAAW+B,EAAiBF,kBAC5B9B,aAAcA,IAElB,cAAC,EAAD,CACIrC,MAAM,QACNoC,SAAS,cACTE,UAAW+B,EAAiBH,YAC5B7B,aAAcA,IAElB,cAAC,EAAD,CACIrC,MAAM,WACNoC,SAAS,iBACTE,UAAW+B,EAAiBD,eAC5B/B,aAAcA,OAItB,cAAC,EAAD,CAAkBnJ,QAASA,EAASK,eAvDpC,SAACV,EAAMS,GAC3BwK,EAAW,2BAAI5K,GAAL,kBAAeL,EAAOS,WAwDhB,uBAAO+L,YAAa,SAAAjM,GAtFhC2J,EAAQC,WACRuB,EAAW,2BAAKxB,GAAN,IAAeC,WAAW,MAsFpBtK,cAAe,SAAAU,GAAC,OAlFf,SAACA,GACtBA,EAAEkM,iBACFf,EAAW,CAAE1C,KAAMzI,EAAEmI,QAASQ,IAAK3I,EAAEqI,QAAU,GAAIuB,WAAW,IAgFtBuC,CAAiBnM,IADzC,SAGKyC,EAAYqJ,EAAoBxB,eC/OvD8B,GAAe/J,8BACjB,CACIC,SAAU,SAAA+J,GAAI,OAAIA,EAAK7M,OAIlB8M,GAAa9J,2BAAiB,mBAAD,sBAAqB,4BAAA1B,EAAA,sEACpCF,EAAOoB,IAAI,aADyB,cACrDX,EADqD,yBAEpDA,EAASkL,OAF2C,4CAKlDC,GAAahK,2BAAiB,mBAAD,uCAAqB,WAAO6J,GAAP,eAAAvL,EAAA,sEACpCF,EAAOqB,KAAK,YAAa,CAAEoK,SADS,cACrDhL,EADqD,yBAEpDA,EAASgL,MAF2C,2CAArB,uDAK7BI,GAAajK,2BAAiB,mBAAD,uCAAqB,WAAO6J,GAAP,eAAAvL,EAAA,sEACpCF,EAAOuB,IAAP,oBAAwBkK,EAAK7M,KAAO,CAAE6M,SADF,cACrDhL,EADqD,yBAEpDA,EAASgL,MAF2C,2CAArB,uDAOpCpJ,GAAemJ,GAAalJ,gBAAgB,CAC9C5B,OAAQ,OACR0B,MAAO,OAEL0J,GAAatJ,sBAAY,CAC3B3D,KAAM,UACNwD,gBACAI,SAAU,CACNsJ,mBAAqB,SAACnJ,EAAOC,GACzB,IAAImJ,EAAepJ,EAAMqJ,IAAIC,MAAK,SAAAtN,GAAG,OAAIA,IAAQiE,EAAOG,QAAQpE,OAChEgE,EAAMuJ,SAASH,GAAgBnJ,EAAOG,UAG9CN,eAAa,mBACRgJ,GAAW5I,WAAY,SAACF,EAAOC,GAC5BD,EAAMlC,OAAS,YACf8K,GAAazI,WAAWH,EAAOC,EAAOG,YAHjC,cAKR0I,GAAW/I,SAAU,SAACC,EAAOC,GAC1BD,EAAMlC,OAAS,aANV,cAQRgL,GAAWzI,UAAW,SAACL,EAAOC,GAC3BD,EAAMlC,OAAS,YATV,cAWRkL,GAAW9I,WAAY,SAACF,EAAOC,GAAR,OAAmB2I,GAAatI,OAAON,EAAOC,EAAOG,YAXpE,cAYR6I,GAAW/I,WAAY,SAACF,EAAOC,GAAR,OAAmB2I,GAAarI,UAAUP,EAAO,CAAC7E,GAAI8E,EAAOG,QAAQpE,IAAIwE,QAAQP,EAAOG,aAZvG,K,GAoBbwI,GAAanI,cAAa,SAAAT,GAAK,OAAIA,EAAM+I,SAH9BS,G,GAAX7I,UAEY8I,I,GADZC,U,GACA7I,YAGWqI,IADsBA,GAAWS,QAAlCR,mBACCD,GAAf,SC3DMU,GAAiB/K,8BAAoB,CACvCC,SAAW,SAAA+K,GAAM,OAAIA,EAAO7N,OAInB8N,GAAe9K,2BAAiB,uBAAD,sBAAyB,4BAAA1B,EAAA,sEAC1CF,EAAOoB,IAAI,eAD+B,cAC3DX,EAD2D,yBAG1DA,EAASkM,SAHiD,4CAKxDC,GAAehL,2BAAiB,uBAAD,uCAAyB,WAAO7D,GAAP,eAAAmC,EAAA,sEAC1CF,EAAOsB,OAAP,sBAA6BvD,IADa,cAC3D0C,EAD2D,yBAE1DA,EAASgM,QAFiD,2CAAzB,uDAI/BI,GAAejL,2BAAiB,uBAAD,uCAAwB,WAAO6K,GAAP,eAAAvM,EAAA,sEACzCF,EAAOqB,KAAK,cAAc,CAACoL,WADc,cAC1DhM,EAD0D,yBAEzDA,EAASgM,QAFgD,2CAAxB,uDAI/BK,GAAiB,uCAAG,WAAO/O,GAAP,eAAAmC,EAAA,sEACNF,EAAOoB,IAAP,sBAA0BrD,EAA1B,YADM,cACvB0C,EADuB,yBAGtBA,EAASC,QAHa,2CAAH,sDAMjBqM,GAAenL,2BAAiB,uBAAD,uCAAyB,WAAO6K,GAAP,eAAAvM,EAAA,sEACzCF,EAAOuB,IAAP,sBAA0BkL,EAAO7N,KAAO,CAAC6N,WADA,cAC3DO,EAD2D,yBAE1DA,EAAUP,QAFgD,2CAAzB,uDAKtCpK,GAAemK,GAAelK,gBAAgB,CAChD5B,OAAS,OACT0B,MAAO,KACPlD,QAAQ,KAKN+N,GAAezK,sBAAY,CAC7B3D,KAAM,UACNwD,gBACAI,SAAU,CACNoK,aAAc,CACVK,QAAS,SAACtK,EAAOC,GACbD,EAAM+J,QAAQQ,KAAKtK,EAAOG,UAE9BoK,QAAS,SAACC,EAAYC,EAAUC,GAC5B,MAAO,CACHvK,QAAS,CACLqK,aACAC,WACAE,OAAQD,EAAaE,UAAU,EAAG,KAClCC,YAAY,IAAIC,MAAOC,iBACvBC,aAAc,OAMlCnL,eAAa,mBACRgK,GAAa/J,SAAS,SAACC,EAAQC,GAC5BD,EAAMlC,OAAS,aAFV,cAIRgM,GAAa5J,WAAY,SAACF,EAAQC,GAC/BD,EAAMlC,OAAS,YACf8L,GAAezJ,WAAWH,EAAOC,EAAOG,YANnC,cAQR0J,GAAazJ,UAAW,SAACL,EAAQC,GAC9BD,EAAMlC,OAAS,YATV,cAWRmM,GAAa/J,WAAW,SAACF,EAAOC,GAAR,OAAkB2J,GAAetJ,OAAON,EAAOC,EAAOG,YAXtE,cAYR4J,GAAa9J,WAAY,SAACF,EAAOC,GAAR,OAAiB2J,GAAesB,UAAUlL,EAAOC,EAAOG,QAAQpE,QAZjF,cAaRmO,GAAajK,WAAY,SAACF,EAAOC,GAAR,OAAmB2J,GAAerJ,UAAUP,EAAO,CAAC7E,GAAG8E,EAAOG,QAAQpE,IAAIwE,QAAQP,EAAOG,aAb1G,K,GAuBbwJ,GAAenJ,cAAa,SAAAT,GAAK,OAAIA,EAAM+J,WAJhCoB,G,GAAXxK,UAEYyK,I,GADZ1B,U,GACA7I,YAKWwJ,MAAf,QChFagB,GAAU,SAAC,GAA+B,IAA7BxC,EAA4B,EAA5BA,KAAMyC,EAAsB,EAAtBA,iBAM5B,OACI,qBAAKjQ,QAAS,SAAAmB,GAAO8O,EAAiBzC,EAAK7M,MACvCuP,cAAY,QAAQC,cAAY,gBAChCtQ,WAA6B,IAAjB2N,EAAK/K,OAAe,aAAa,GAFjD,UAKI,6BAAK+K,EAAK4C,iBACV,6BAAK5C,EAAK6C,cACV,6BAAK7C,EAAK8C,WAGV,8BACsB,IAAjB9C,EAAK/K,OACF,sBAAM5C,UAAU,gCAAhB,oBACmB,IAAhB2N,EAAK/K,OAAe,sBAAM5C,UAAU,iCAAhB,qBACF,IAAhB2N,EAAK/K,OAAe,sBAAM5C,UAAU,iCAAhB,oBAAiE,KAKlG,6BAEI,sBAAMA,UAAU,WAAhB,SACI,sBAAMA,UAAU,8CAA8CsJ,KAAK,cAC/DxB,MAAO,CAAE4I,MAAM,GAAD,OAAK/C,EAAKgD,SAAV,MAAyBC,gBAAejD,EAAKgD,SAAUE,gBAAc,IAAIC,gBAAc,MADzG,SAEKnD,EAAKgD,mBC9BjBI,GAAe,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,cAAeC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAE/CnL,EAAWC,cAEXmL,EADYvI,YAAYpD,GACMqH,QAAO,SAAAuE,GAAI,MAAsB,eAAlBA,EAAKlQ,YAJgB,EAM1BrB,mBAAS,OANiB,mBAMjEwR,EANiE,KAMhDC,EANgD,OAQlCzR,mBAASsR,GARyB,mBAQjEI,EARiE,KAQpDC,EARoD,KASlEC,EAAc7I,aAAY,SAAA9D,GAAK,OAAIyJ,GAAezJ,EAAOkM,MATS,EAUvBnR,mBAAS0R,EAAY,IAVE,mBAUjEG,EAViE,KAU9CC,EAV8C,OAcpC9R,oBAAS,GAd2B,mBAcjE+R,EAdiE,KAcrDC,EAdqD,OAe9BhS,oBAAS,GAfqB,mBAejE8G,EAfiE,KAelDC,EAfkD,KAiBlEkL,EAAsBP,EAAYlE,KAAI,SAAA+D,GAAI,OAC5C,wBAAQ5P,MAAO4P,EAAKrQ,KAApB,SAA0CqQ,EAAKrQ,MAAhBqQ,EAAKtQ,QAlBgC,EAqBpCjB,mBAAS,GArB2B,6BAwBxE6H,qBAAU,WACuB,KAAzB+J,EAAYhB,SAAiBoB,GAAc,GAC1CA,GAAc,KAEpB,CAACJ,IAEJ/J,qBAAU,WAEkB,QAApB2J,EACAG,EAAeL,GAEU,aAApBE,EACLG,EAAeL,EAAkBtE,QAAO,SAAAuE,GAAI,MAAuB,aAAnBA,EAAKrK,cAE5B,aAApBsK,EACLG,EAAeL,EAAkBtE,QAAO,SAAAuE,GAAI,MAAuB,aAAnBA,EAAKrK,cAE5B,YAApBsK,GACLG,EAAeL,EAAkBtE,QAAO,SAAAuE,GAAI,MAAuB,YAAnBA,EAAKrK,gBAE1D,CAACsK,IAmBJ,OACI,gCACI,sBAAKrR,UAAU,aAAf,UACI,sBAAKA,UAAU,+BAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAMA,UAAU,mBAAhB,0BAGJ,wBAAQe,KAAK,aAAad,GAAG,QAAQD,UAAU,eAAe+R,SAAS,WACnEvQ,MAAOkQ,EAAkB3Q,KAEzBM,SAAU,SAAAC,GAhBC,IAACE,IAiBeF,EAAEC,OAAOC,MAhBpDmQ,EAAoBR,EAAkB/C,MAAK,SAAAgD,GAAI,OAAIA,EAAKrQ,OAASS,OAYrD,SAOKsQ,OAGT,sBAAK9R,UAAU,+BAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAMA,UAAU,mBAAhB,yBAEJ,yBAAQA,UAAU,eAAee,KAAK,YAAYd,GAAG,WACjDuB,MAAO6P,EACPhQ,SAAU,SAACC,GACHA,EAAEC,OAAOC,QAAU6P,GACnBC,EAAmBhQ,EAAEC,OAAOC,QAJxC,UAOI,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,UAAd,2BAKR,sBAAKxB,UAAU,+BAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAMA,UAAU,mBAAhB,yBAGJ,uBAAOwB,MAAOiQ,EAAYhB,SAAU/O,KAAK,OAAOsQ,SAAS,WACrDhS,UAAU,oBAKlB,sBAAKA,UAAU,+BAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAMA,UAAU,mBAAhB,sBAGJ,0BAAU0B,KAAK,OAAOX,KAAK,aAAad,GAAG,QACvCD,UAAU,eAAe+R,SAAS,WAClCE,KAAM,EACNzQ,MAAOiQ,EAAY/B,OACnBsC,SAAS,mBAOrB,sBAAKhS,UAAU,eAAf,UACI,wBAAQ0B,KAAK,SAAS1B,UAAU,oBAAoBmI,eAAa,QAC7DhI,QAAS,kBAAM+Q,EAAa,2BAAKD,GAAN,IAAiB/F,WAAW,MAD3D,mBADJ,OAQI,yBAAQxJ,KAAK,SACT1B,UAAU,kBACVmI,eAAa,QACbhI,QA3FC,WACbyG,GAAiB,GACjBb,EAASgI,GAAW,2BAAI0D,GAAL,IAAkBS,WAAYR,EAAkB5Q,IAAK8B,OAAQ,MAC/EyF,MAAK,WAAKzB,GAAiB,MAC3B2B,OAAM,SAAAC,GAAO5B,GAAiB,GAAQuL,MAAM3J,OAwFjCJ,UAAWwJ,EAJf,6BAWQjL,EAAgB,mBAAG3G,UAAU,iCAC3B,mBAAGA,UAAU,uBAAuBI,cAAY,mBCtJ7DgS,GAAY,SAAC,GAAgD,IAA9CnB,EAA6C,EAA7CA,UAAWC,EAAkC,EAAlCA,aAAcF,EAAoB,EAApBA,cAgBjD,OACI,qBAAKhR,UAAU,kBACX8H,MACC,CACGsB,QAAS,SAGbnJ,GAAG,YACHoJ,SAAS,KAAKC,KAAK,SAASC,kBAAgB,iBAAiBnJ,cAAY,OACzED,QAAS,SAACmB,IAtBU,SAACA,GACzB,IAAMkI,EAASlI,EAAEmI,QACXC,EAASpI,EAAEqI,QAEXC,EADQlK,SAASmK,eAAe,oBACVC,wBACd,IAAXN,GAA2B,IAAXE,IACfF,EAASI,EAAcG,MAAQP,EAASI,EAAcI,OACtDN,EAASE,EAAcK,KAAOP,EAASE,EAAcM,SACrDgH,EAAa,2BAAKD,GAAN,IAAiB/F,WAAW,KActBf,CAAoB7I,IAR1C,SAWI,qBAAKtB,UAAU,eAAesJ,KAAK,WAAnC,SACI,sBAAKtJ,UAAU,gBAAgBC,GAAG,mBAAlC,UACI,sBAAKD,UAAU,eAAf,UACI,oBAAIA,UAAU,cAAcC,GAAG,iBAA/B,yBACA,wBAAQyB,KAAK,SAAS1B,UAAU,QAAQmI,eAAa,QAAQiC,aAAW,QACpEjK,QAAS,WAAO+Q,EAAa,2BAAKD,GAAN,IAAiB/F,WAAW,MAD5D,SAGI,sBAAM9K,cAAY,OAAlB,uBAGR,cAAC,GAAD,CAAc6Q,UAAWA,EAAWC,aAAcA,EAAcF,cAAeA,YCtCtFqB,GAAkB,SAAC,GAA4E,IAA1EC,EAAyE,EAAzEA,YAAYtB,EAA6D,EAA7DA,cAAeuB,EAA8C,EAA9CA,eAAgBrB,EAA8B,EAA9BA,aAAcD,EAAgB,EAAhBA,UAOvF,OACI,uBAAMjR,UAAU,eAAe8H,MAAO,CAClCmC,IAAKqI,EAAYrI,IACjBF,KAAMuI,EAAYvI,KAAMX,QAASkJ,EAAYpH,UAAY,QAAU,QAFvE,UAIK8F,EAAc,wBAAQtP,KAAK,SAAS1B,UAAU,kBAC3CG,QAVW,WACnBoS,EAAe,2BAAID,GAAL,IAAkBpH,WAAW,KAC3CgG,EAAa,2BAAID,GAAL,IAAgB/F,WAAU,EAAMsH,gBAAkB,MAO3C,SAGX,mBAAGxS,UAAU,iCAAiCI,cAAY,WACpD,GARd,WCVKqS,GAAe,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,aAElCtR,EAAW,SAACC,GACd,IAAIP,EAAOO,EAAEC,OAAOR,KAChBS,EAAQF,EAAEC,OAAOC,MACrBkR,EAAa3R,EAAMS,IAEvB,OACI,+BACI,6BACI,uBAAOE,KAAK,OAAO1B,UAAU,eACzBe,KAAK,uBAAuBd,GAAG,uBAAuB0B,mBAAiB,SACvEC,YAAY,uBACZJ,MAASmR,EAAaC,qBACtBvR,SAAY,SAACC,GAAD,OAAMD,EAASC,QAGnC,6BACI,uBAAOI,KAAK,OAAO1B,UAAU,eACzBe,KAAK,oBAAoBd,GAAG,oBAAoB0B,mBAAiB,SACjEC,YAAY,kBACZJ,MAASmR,EAAaE,kBACtBxR,SAAY,SAAAC,GAAC,OAAID,EAASC,QAKlC,6BACI,uBAAOI,KAAK,OAAO1B,UAAU,eACzBe,KAAK,iBAAiBd,GAAG,iBAAiB0B,mBAAiB,SAC3DC,YAAY,iBACZJ,MAASmR,EAAaG,eACtBzR,SAAY,SAAAC,GAAC,OAAID,EAASC,QAIlC,6BAEI,yBAAQtB,UAAU,eAAee,KAAK,eAAed,GAAG,eACpDuB,MAASmR,EAAaI,aACtB1R,SAAU,SAAAC,GAAC,OAAID,EAASC,IAF5B,UAGI,wBAAQE,OAAS,EAAjB,iBACA,wBAAQA,MAAO,EAAf,qBACA,wBAAQA,MAAO,EAAf,oBACA,wBAAQA,OAAQ,EAAhB,yBAGR,2BCvCCwR,GAAY,WACrB,IAuCIC,EAvCElN,EAAWC,cACX6I,EAAUjG,YAAYqH,IACtBlM,EAAY6E,YAAYpD,GACxBqI,EAAQjF,YAAY0F,IACpB4E,EAAatK,aAAY,SAAA9D,GAAK,OAAIA,EAAM+I,MAAMjL,UAC9CmN,EAAenH,aAAY,SAAA9D,GAAK,OAAIA,EAAM+J,QAAQjM,UAClDuQ,EAAkBvK,aAAY,SAAA9D,GAAK,OAAIA,EAAMf,UAAUnB,UACvD0B,EAAQsE,aAAY,SAAA9D,GAAK,OAAIA,EAAM+I,MAAMvJ,SARpB,EASezE,mBAAS,IATxB,mBASpBmR,EAToB,KASLZ,EATK,OAUGvQ,qBAVH,mBAUpB+L,EAVoB,KAUXwH,EAVW,OAWGvT,oBAAS,GAXZ,mBAWpBwT,EAXoB,KAWVC,EAXU,OAaazT,mBAAS,CAC7C+S,qBAAsB,GACtBC,kBAAmB,GACnBC,eAAgB,GAChBC,cAAe,IAjBQ,mBAapBJ,EAboB,KAaNY,EAbM,OAoBW1T,mBAAS,CAC3C2T,qBAAsB,EACtBC,kBAAmB,EACnBC,eAAgB,EAChBC,aAAc,EACdC,eAAgB,IAzBO,mBAoBpBC,EApBoB,KAoBPC,EApBO,OA6BOjU,mBAAS,CACvCqL,WAAW,EACXsH,gBAAiB,IA/BM,mBA6BpBvB,EA7BoB,KA6BTC,EA7BS,OAkCWrR,mBAAS,CAC3CoK,IAAK,EACLF,KAAM,EACNmB,WAAW,IArCY,mBAkCpBoH,EAlCoB,KAkCPC,EAlCO,KA2C3B7K,qBAAU,WACkB,SAApByL,GACApN,EAASlC,OAEd,CAACkC,EAAUoN,IAEdzL,qBAAU,WACe,SAAjBqI,GACAhK,EAAS6I,QAEd,CAAC7I,EAAUgK,IAEdrI,qBAAU,WACa,SAAfwL,GACAnN,EAAS6H,QAEd,CAAC7H,EAAUmN,IAGdxL,qBAAU,WACN4L,GAAU,KACX,CAACzF,IAIqB,cAApBsF,GAAoD,cAAjBpD,GAA+C,cAAfmD,EAChEG,IACAD,EAAWvF,EAAMR,KAAI,SAAAM,GACjB,OAAO,2BACAA,GADP,IAEI4C,eAAgBxM,EAAUqK,MAAK,SAAAzN,GAAG,OAAIA,EAAIG,MAAQ6M,EAAKuE,cAAYnR,KACnEyP,YAAa3B,EAAQT,MAAK,SAAAO,GAAM,OAAIA,EAAO7N,MAAQ6M,EAAKgB,UAAQzG,YAIxEoL,GAAU,IAGa,WAApBH,GAAiD,WAAjBpD,GAA4C,WAAfmD,EACpED,EAAe,6BAAK3O,IACO,YAApB6O,GAAkD,YAAjBpD,GAA6C,YAAfmD,IACtED,EACI,oBAAIjT,UAAU,8BAA8B8H,MAAO,CAAE4I,MAAO,IAAKqD,OAAQ,QAMjF,IAAIC,EAAepH,OAAO/J,OAAO,GAAI+I,GACjCoI,GAAgBA,EAAaC,OAAS,IAClCtB,EAAaC,uBACboB,EAAeA,EAAanH,QAAO,SAAAc,GAC/B,OAA6G,IAAtGA,EAAK4C,eAAezD,cAAcC,QAAQ4F,EAAaC,qBAAqBsB,yBAIvFvB,EAAaE,oBACbmB,EAAeA,EAAanH,QAAO,SAAAc,GAC/B,OAAuG,IAAhGA,EAAK6C,YAAY1D,cAAcC,QAAQ4F,EAAaE,kBAAkBqB,yBAKjFvB,EAAaG,iBACbkB,EAAeA,EAAanH,QAAO,SAAAc,GAC/B,OAAiG,IAA1FA,EAAK8C,SAAS3D,cAAcC,QAAQ4F,EAAaG,eAAeoB,yBAK/EF,EAAeA,EAAanH,QAAO,SAAAc,GAC/B,OAA6C,IAAzCwG,SAASxB,EAAaI,cAA6BpF,EAChDA,EAAK/K,SAAWuR,SAASxB,EAAaI,iBAIR,IAArCc,EAAYL,uBACZQ,EAAeA,EAAahH,MAAK,SAAC5K,EAAG6K,GACjC,OAAG7K,EAAEmO,iBAAmBtD,EAAEsD,eAAuB,EAC1CnO,EAAEmO,eAAiBtD,EAAEsD,eAAiBsD,EAAYL,sBAAyBK,EAAYL,yBAGhE,IAAlCK,EAAYJ,oBACZO,EAAeA,EAAahH,MAAK,SAAC5K,EAAG6K,GACjC,OAAG7K,EAAEoO,cAAgBvD,EAAEuD,YAAoB,EACpCpO,EAAEoO,YAAcvD,EAAEuD,YAAcqD,EAAYJ,mBAAsBI,EAAYJ,sBAG1D,IAA/BI,EAAYH,iBACZM,EAAeA,EAAahH,MAAK,SAAC5K,EAAG6K,GACjC,OAAG7K,EAAEqO,WAAaxD,EAAEwD,SAAiB,EAC9BrO,EAAEqO,SAAWxD,EAAEwD,SAAWoD,EAAYH,gBAAmBG,EAAYH,mBAEnD,IAA7BG,EAAYF,eACZK,EAAeA,EAAahH,MAAK,SAAC5K,EAAG6K,GACjC,OAAG7K,EAAEQ,SAAWqK,EAAErK,OAAe,EAC1BR,EAAEQ,OAASqK,EAAErK,OAASiR,EAAYF,cAAgBE,EAAYF,iBAG1C,IAA/BE,EAAYD,iBACZI,EAAeA,EAAahH,MAAK,SAAC5K,EAAG6K,GACjC,OAAG7K,EAAEuO,WAAa1D,EAAE0D,SAAiB,EAC9BvO,EAAEuO,SAAW1D,EAAE0D,SAAWkD,EAAYD,gBAAiBC,EAAYD,mBAG9EI,IACAf,EAAee,EAAa3G,KAAI,SAAAM,GAAI,OAAI,cAAC,GAAD,CACpCA,KAAMA,EACNyC,iBAAkBA,GAFgCzC,EAAK7M,UAOnE,IAcMyJ,EAAe,SAACxJ,EAAMyJ,GACxBsJ,EAAe,aACXN,qBAAsB,EACtBC,kBAAmB,EACnBC,eAAgB,EAChBC,aAAc,EACdC,eAAgB,GACb7S,EAAOyJ,KAIlB,OACI,sBAAKxK,UAAWiR,EAAU/F,UAAY,6BAA+B,kBAArE,UAIQ+F,EAAU/F,UAAY,cAAC,GAAD,CAAWgG,aAAcA,EAC3CD,UAAWA,EAAWD,cAAeA,IACnC,GAINsB,EAAYpH,UAAY,cAAC,GAAD,CAAiBoH,YAAaA,EAClDC,eAAgBA,EAAgBrB,aAAcA,EAAcF,cAAeA,IACzE,GAIV,oBAAIhR,UAAU,cAAd,8BACA,qBAAKA,UAAU,6BAAf,SAEI,qBAAKA,UAAU,0CAAf,SAEI,wBAAOA,UAAU,mCAAjB,UACI,wBAAOA,UAAU,aAAjB,UACI,+BACI,cAAC,EAAD,CACIkI,MAAM,aACNoC,SAAS,uBACTC,aAAcA,EACdC,UAAWqJ,EAAYL,uBAG3B,cAAC,EAAD,CACItL,MAAM,SACNoC,SAAS,oBACTC,aAAcA,EACdC,UAAWqJ,EAAYJ,oBAG3B,cAAC,EAAD,CACIvL,MAAM,OACNoC,SAAS,iBACTC,aAAcA,EACdC,UAAWqJ,EAAYH,iBAE3B,cAAC,EAAD,CACIxL,MAAM,cACNoC,SAAS,eACTC,aAAcA,EACdC,UAAWqJ,EAAYF,eAG3B,cAAC,EAAD,CACIzL,MAAM,gBACNoC,SAAS,iBACTC,aAAcA,EACdC,UAAWqJ,EAAYD,oBAG/B,cAAC,GAAD,CAAclB,aA1Ef,SAAC3R,EAAMS,GAC1B+R,EAAgB,2BAAKZ,GAAN,kBAAqB5R,EAAOS,MAyEqBmR,aAAcA,OAE9D,uBAAOpF,YAAa,SAAAjM,GArFhCgR,EAAYpH,WACZqH,EAAe,2BAAKD,GAAN,IAAmBpH,WAAW,MAqF5BtK,cAAe,SAAAU,GAAC,OAjFf,SAACA,GACtBA,EAAEkM,iBACF+E,EAAe,CAAExI,KAAMzI,EAAEmI,QAASQ,IAAK3I,EAAEqI,QAAU,GAAIuB,WAAW,IA+E1BuC,CAAiBnM,IADzC,SAGK2R,eC1PhBmB,I,MAAoB,SAAC,GAE8C,IAD5EC,EAC2E,EAD3EA,aAAcC,EAC6D,EAD7DA,OAAQC,EACqD,EADrDA,UACtBC,EAA2E,EAA3EA,gBAAiBC,EAA0D,EAA1DA,mBAAoBC,EAAsC,EAAtCA,cAAeC,EAAuB,EAAvBA,iBAE9C5Q,EAAY6E,YAAYpD,GACxB+F,EAAU3C,YAAY6C,IACtBoD,EAAUjG,YAAYqH,IAEtB2E,EAAgBhM,aAAY,SAAA9D,GAAK,OAAIoL,GAAiBpL,EAAO0P,GAA4BtE,GAAiBpL,EAAO0P,GAAnC3F,EAAQ,MAEtFlG,EAAkBC,aAAY,SAAA9D,GAAK,OAAIY,EAAmBZ,EAAO8P,EAAc1Q,aAC/E2Q,EAAgBjM,aAAY,SAAA9D,GAAK,OAAI4G,GAAiB5G,EAAO8P,EAAcvJ,WATN,EAWvCxL,mBAAS,2BAAK+U,GAAN,IAAqBE,SAAU,KAXA,mBAWpEC,EAXoE,KAWxDC,EAXwD,KAmBrEC,EAJkBlR,EAAU8I,QAC9B,SAAAqI,GAAQ,MAA0B,eAAtBA,EAAShU,UACd2N,EAAQT,MAAK,SAAAO,GAAM,OAAIA,EAAOzK,WAAagR,EAASpU,UAErBuM,KAAI,SAAA8H,GAAG,OAC7C,wBAAQ3T,MAAO2T,EAAIrU,IAAnB,SAAuCqU,EAAIpU,MAAdoU,EAAIrU,QAQ/BsU,EAJgB7J,EAAQsB,QAAO,SAAAxB,GAAM,OACvCA,EAAOnH,WAAa0Q,EAAc1Q,YAGAmJ,KAAI,SAAAhC,GAAM,OAC5C,wBAAQ7J,MAAO6J,EAAOvK,IAAtB,SAA6CuK,EAAOgK,YAApBhK,EAAOvK,QAUrCwU,EANgBzG,EAAQhC,QAAO,SAAA8B,GAAM,OACvCA,EAAOzK,WAAayE,EAAgB7H,KACjC6N,EAAOtD,SAAWwJ,EAAc/T,OAIDuM,KAAI,SAAAsB,GAAM,OAC5C,wBAAQnN,MAAOmN,EAAO7N,IAAtB,SAA6C6N,EAAOzG,OAApByG,EAAO7N,QAErCO,EAAW,SAACC,GACd,IAAMP,EAAOO,EAAEC,OAAOR,KAChBS,EAAQF,EAAEC,OAAOC,MACvB,GAAa,oBAATT,EAA4B,CAC5B,IAAM4N,EAASE,EAAQT,MAAK,SAAAO,GAAM,OAAIA,EAAOzK,WAAa1C,KAC1DiT,EAAmB9F,EAASA,EAAO7N,IAAM0T,GAE7C,GAAa,kBAATzT,EAA0B,CAC1B,IAAM4N,EAASE,EAAQT,MAAK,SAAAO,GAAM,OAAIA,EAAOtD,SAAW7J,KACxDiT,EAAmB9F,EAASA,EAAO7N,IAAM0T,GAG7C,GAAa,UAATzT,EAAkB,CAClB,IAAM4N,EAASE,EAAQT,MAAK,SAAAO,GAAM,OAAIA,EAAO7N,MAAQU,KACrDiT,EAAmB9F,EAASA,EAAO7N,IAAM0T,KAOjD,OACI,gCACI,sBAAKxU,UAAU,aAAf,UACI,sBAAKA,UAAU,+BAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAMA,UAAU,mBAAhB,6BAGJ,wBAAQe,KAAK,kBAAkBd,GAAG,QAC9BD,UAAU,eAAe+R,SAAS,WAClCvQ,MAAOmH,EAAgB7H,IACvBO,SAAU,SAAAC,GAAC,OAAID,EAASC,IAH5B,SAKK2T,IAGL,qBAAKjV,UAAU,2BAInB,sBAAKA,UAAU,+BAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAMA,UAAU,mBAAhB,sBAIJ,wBAAQe,KAAK,gBAAgBd,GAAG,QAC5BD,UAAU,eAAe+R,SAAS,WAClCvQ,MAAOqT,EAAc/T,IACrBO,SAAU,SAAAC,GAAC,OAAID,EAASC,IAH5B,SAKK8T,IAGL,qBAAKpV,UAAU,2BAInB,sBAAKA,UAAU,+BAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAMA,UAAU,mBAAhB,qBAGJ,wBAAQe,KAAK,QAAQd,GAAG,QAAQD,UAAU,eAAe+R,SAAS,WAC9DvQ,MAAOgT,EACPnT,SAAU,SAAAC,GAAC,OAAID,EAASC,IAF5B,SAIKgU,IAGL,qBAAKtV,UAAU,2BAGnB,sBAAKA,UAAU,+BAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAMA,UAAU,mBAAhB,2BAGJ,uBAAO0B,KAAK,OAAOX,KAAK,aAAad,GAAG,aAAaD,UAAU,eAC3DwB,WAAoC+T,IAA7BX,EAAchF,WAA2B,GAAKgF,EAAchF,WAAW3N,WAC9E+P,SAAS,gBAKjB,sBAAKhS,UAAU,+BAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAMA,UAAU,mBAAhB,sBAEJ,0BAAU0B,KAAK,OAAOX,KAAK,SAASd,GAAG,SAASD,UAAU,eACtDiS,KAAK,IACLzQ,MAAOoT,EAAclF,OACrBsC,SAAS,aAEb,qBAAKhS,UAAU,2BAInB,sBAAKA,UAAU,+BAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAMA,UAAU,mBAAhB,wBAGJ,yBAAQe,KAAK,WAAWf,UAAU,eAAe+R,SAAS,WACtDvQ,MAAOuT,EAAWD,SAClBzT,SAAU,SAAAC,GAAC,OAAI0T,EAAc,2BAAKD,GAAN,IAAkBD,SAAUxT,EAAEC,OAAOC,UAFrE,UAII,wBAAQA,MAAO,EAAf,uBACA,wBAAQA,MAAO,EAAf,qBACA,wBAAQA,MAAO,EAAf,4BAGJ,qBAAKxB,UAAU,2BAInB,sBAAKA,UAAU,+BAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAMA,UAAU,mBAAhB,2BAIJ,uBAAO0B,KAAK,SAASX,KAAK,eACtBf,UAAU,eAAewB,MAAOkT,EAChCrT,SAAU,SAACC,GAAD,OAAOqT,EAAiBrT,EAAEC,OAAOC,QAC3CgU,IAAK,EAAGC,IAAK,GAAIC,KAAM,EAAG3D,SAAS,WAAW7J,MAAM,KAIxD,qBAAKlI,UAAU,8BAKvB,sBAAKA,UAAU,eAAf,UACI,wBAAQ0B,KAAK,SAAS1B,UAAU,oBAAoBmI,eAAa,QAC7DhI,QAAS,kBAAMkU,GAAa,EAAO,IADvC,mBADJ,OAOI,yBAAQ3S,KAAK,SAAS1B,UAAU,kBAAkBmI,eAAa,QAC3DhI,QA9HG,WACfoU,EAAUQ,GACVT,KA2HQ,uBAIgB,mBAAGtU,UAAU,sBAAsBI,cAAY,oB,SC/LlEuV,GAAuB,SAAC,GAAmF,IAAjFtB,EAAgF,EAAhFA,aAAcuB,EAAkE,EAAlEA,WAAWC,EAAuD,EAAvDA,SAAUvB,EAA6C,EAA7CA,OAAQI,EAAqC,EAArCA,cAAeF,EAAsB,EAAtBA,gBAGvFrD,EADYvI,YAAYpD,GACMqH,QAAO,SAAAuE,GAAI,MAAsB,eAAlBA,EAAKlQ,YAH2D,EAKrErB,mBAAS,OAL4D,mBAK5GwR,EAL4G,KAK3FC,EAL2F,OAM7EzR,mBAASsR,GANoE,mBAM5GI,EAN4G,KAM/FC,EAN+F,OAQlE3R,mBAAS0R,EAAY,IAR6C,mBAQ5GG,EAR4G,KAQzFC,EARyF,OAS7E9R,mBAClC,CACI8O,OAAQ6F,EACR/D,SAAU,GACVf,OAAQ,KAbmG,mBAS5G+B,EAT4G,KAS/FqE,EAT+F,OAiBzEjW,mBAAS,IAjBgE,mBAiB5GkW,EAjB4G,KAiB7FC,EAjB6F,OAkB/EnW,oBAAS,GAlBsE,mBAkB5G+R,EAlB4G,KAkBhGC,EAlBgG,KAoB7GC,EAAsBP,EAAYlE,KAAI,SAAA+D,GAAI,OAC5C,wBAAQ5P,MAAO4P,EAAKrQ,KAApB,SAA0CqQ,EAAKrQ,MAAhBqQ,EAAKtQ,QArB2E,EAwB/EjB,mBAAS,GAxBsE,mBAwB5GoW,EAxB4G,KAwBhGC,EAxBgG,KA2BnHxO,qBAAU,WACuB,KAAzB+J,EAAYhB,SAAiBoB,GAAc,GAC1CA,GAAc,KAEpB,CAACJ,IAEJ/J,qBAAU,WAGN,GAAwB,QAApB2J,EACAG,EAAeL,OAEd,CACD,IAAMgF,EAAUhF,EAAkBtE,QAAO,SAAAuE,GAAI,OAAIA,EAAKrK,YAAcsK,KACjE8E,GAAUA,EAAOlC,OAAS,EAEzBzC,EAAe2E,GAEf7E,EAAmB,UAI5B,CAACD,IAEJ3J,qBAAU,WACNiK,EAAoBJ,EAAY,MAClC,CAACA,IAEH,IA2BM6E,EAAgBL,EAAc1I,KAAI,SAAAM,GACpC,OACI,qBAAwB3N,UAAU,SAAlC,UACI,oBAAIA,UAAU,QAAd,SAAuB2N,EAAK4C,iBAC5B,oBAAIvQ,UAAU,QAAd,SAAuB2N,EAAK8C,WAC5B,oBAAIzQ,UAAU,QAAQC,GAAG,mBAAzB,SACI,mBAAGD,UAAU,uBAAwBI,cAAY,OAC7CD,QAAS,kBApBXqB,EAoB0BmM,EAAK8C,cAnBzCwF,EAAa,IACbD,EAAiBD,EAAclJ,QAAO,SAAAvL,GAAC,OAAIA,EAAEmP,WAAajP,MAE1D0U,EAAcD,EAAa,KAJlB,IAACzU,SAeDmM,EAAK8C,aAiBtB,OACI,gCACI,sBAAKzQ,UAAU,aAAf,UACI,sBAAKA,UAAU,+BAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAMA,UAAU,mBAAhB,0BAGJ,wBAAQe,KAAK,aAAad,GAAG,QAAQD,UAAU,eAAe+R,SAAS,WACnEvQ,MAAOkQ,EAAkB3Q,KAEzBM,SAAU,SAAAC,GAhBC,IAACE,IAiBeF,EAAEC,OAAOC,MAhBpDmQ,EAAoBR,EAAkB/C,MAAK,SAAAgD,GAAI,OAAIA,EAAKrQ,OAASS,OAYrD,SAOKsQ,OAGT,sBAAK9R,UAAU,+BAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAMA,UAAU,mBAAhB,yBAEJ,yBAAQA,UAAU,eAAee,KAAK,YAAYd,GAAG,WACjDuB,MAAO6P,EACPhQ,SAAU,SAACC,GACHA,EAAEC,OAAOC,QAAU6P,GACnBC,EAAmBhQ,EAAEC,OAAOC,QAJxC,UAOI,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,UAAd,2BAKR,sBAAKxB,UAAU,+BAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAMA,UAAU,mBAAhB,yBAGJ,uBAAO0B,KAAK,OAAOX,KAAK,WAAWd,GAAG,QAAQD,UAAU,eAAe+R,SAAS,WAC5EvQ,MAAOiQ,EAAYhB,SACnBpP,SAAU,SAAAC,GAAC,OAAIwU,EAAe,2BAAKrE,GAAN,IAAmBhB,SAAUnP,EAAEC,OAAOC,eAK3E,sBAAKxB,UAAU,+BAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAMA,UAAU,mBAAhB,sBAGJ,0BAAU0B,KAAK,OAAOX,KAAK,aAAad,GAAG,QACvCD,UAAU,eAAe+R,SAAS,WAClCE,KAAM,EACNzQ,MAAOiQ,EAAY/B,OACnBrO,SAAU,SAAAC,GAAC,OAAIwU,EAAe,2BAAKrE,GAAN,IAAmB/B,OAAQpO,EAAEC,OAAOC,eAKzD,IAAfyU,EAAmB,GAChB,wBAAOjW,UAAU,gDAAjB,UACI,gCACI,qBAAIA,UAAU,SAAd,UACI,oBAAIA,UAAU,QAAd,wBACA,oBAAIA,UAAU,QAAd,kBACA,oBAAIA,UAAU,eAItB,uBAAOA,UAAU,gBAAjB,SACKoW,OAIb,qBAAKpW,UAAU,WAAf,SACI,qBAAKA,UAAU,eAAesJ,KAAK,cAC/BxB,MAAO,CAAE4I,MAAM,GAAD,OAA8C,IAAzC2F,WAAWJ,EAAavB,GAA7B,MACd9D,gBAAwD,IAAzCyF,WAAWJ,EAAavB,GAAsB7D,gBAAc,IAAIC,gBAAc,aAOzG,sBAAK9Q,UAAU,eAAf,UACI,wBAAQ0B,KAAK,SAAS1B,UAAU,oBAAoBmI,eAAa,QAC7DhI,QAAS,kBAAMkU,GAAa,EAAO,IADvC,mBADJ,OAOS,yBAAQ3S,KAAK,SAAS1B,UAAU,kBAAkBmI,eAAa,QAChEhI,QAASyV,EADR,UAID,mBAAG5V,UAAU,qBAAqBI,cAAY,SAJ7C,oBAML,yBAAQsB,KAAK,SACT1B,UAAWiW,EAAavB,EAAgB,kBAAoB,kBAC5DvM,eAAa,QACbhI,QAAS8V,EAAavB,EAtJrB,WACTuB,EAAavB,IAEbsB,EAAiB,GAAD,oBAAKD,GAAL,aAAC,eAEVtE,GAFS,IAGZ6E,aAAc5E,EAAkB5Q,IAAKyP,eAAgBmB,EAAkB3Q,UAI3EmV,EAAcD,EAAa,KAYlB,WACbJ,EAASE,GACTzB,KA+HYlM,UAAWwJ,EAJf,UAMKqE,EAAavB,EAAgB,SAAW,OAN7C,OAQKuB,EAAavB,EAAgB,mBAAG1U,UAAU,uBAAuBI,cAAY,SACxE,mBAAGJ,UAAU,sBAAsBI,cAAY,mBCnN5DmW,GAAoB,SAAC,GAA0E,IAAxElC,EAAuE,EAAvEA,aAAcmC,EAAyD,EAAzDA,OAAQjH,EAAiD,EAAjDA,WAAYkH,EAAqC,EAArCA,SAAU5I,EAA2B,EAA3BA,MAAOlH,EAAoB,EAApBA,cAE7EgI,EAAS/F,aAAY,SAAA9D,GAAK,OAAIoL,GAAiBpL,EAAO2R,MAEtDC,EAAe9N,aAAY,SAAA9D,GAAK,OAAIY,EAAmBZ,EAAOyK,MAAaxO,KAE3EqV,EAAgBvI,EAAMR,KAAI,SAAAM,GAC5B,OACI,qBAAwB3N,UAAU,SAAlC,UACI,oBAAIA,UAAU,QAAd,SAAuB2N,EAAK4C,iBAC5B,oBAAIvQ,UAAU,QAAd,SAAuB2N,EAAK8C,aAFvB9C,EAAK8C,aAStB,OACI,gCACI,sBAAKzQ,UAAU,aAAf,UAEI,sBAAKA,UAAU,+BAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAMA,UAAU,mBAAhB,6BAGJ,uBAAOe,KAAK,kBAAkBd,GAAG,QAAQD,UAAU,eAAe+R,SAAS,WACvEC,SAAS,WACTxQ,MAAOkV,IAIX,qBAAK1W,UAAU,2BAKnB,sBAAKA,UAAU,+BAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAMA,UAAU,mBAAhB,4BAGJ,uBAAOe,KAAK,kBAAkBd,GAAG,QAAQD,UAAU,eAAe+R,SAAS,WACvEC,SAAS,WACTxQ,MAAOmN,EAAOzG,QAIlB,qBAAKlI,UAAU,2BAKnB,wBAAOA,UAAU,mCAAjB,UACI,gCACI,qBAAIA,UAAU,SAAd,UACI,oBAAIA,UAAU,QAAd,wBACA,oBAAIA,UAAU,QAAd,uBAGR,uBAAOA,UAAU,gBAAgB8H,MAAO,CAAEiM,OAAQ,QAAlD,SACKqC,UAIb,sBAAKpW,UAAU,eAAf,UACI,wBAAQ0B,KAAK,SAAS1B,UAAU,oBAAoBmI,eAAa,QAC7DhI,QAAS,kBAAMkU,GAAa,EAAO,IADvC,mBADJ,OAOI,yBAAQ3S,KAAK,SAAS1B,UAAU,kBAAkBmI,eAAa,QAC3DhI,QAASqW,EADb,UAGK7P,EAAgB,mBAAG3G,UAAU,iCAAsC,GAHxE,qBCnEH2W,GAAiB,SAAC,GAA0D,IAsCjFC,EAtCyBpC,EAAuD,EAAvDA,gBAAgBC,EAAuC,EAAvCA,mBAAoBJ,EAAmB,EAAnBA,aAAmB,EAE1CxU,mBAAS,GAFiC,mBAE7E6U,EAF6E,KAE9DC,EAF8D,OAG1C9U,oBAAS,GAHiC,mBAG7E8G,EAH6E,KAG9DC,EAH8D,OAI5D/G,mBAAS,GAJmD,mBAI7E6V,EAJ6E,KAIvEmB,EAJuE,OAK1DhX,qBAL0D,mBAK7EgO,EAL6E,KAKtEgI,EALsE,OAMxDhW,qBANwD,mBAM7E8O,EAN6E,KAMrE4F,EANqE,KAO9ExO,EAAWC,cAEXsO,EAAS,WACPoB,GAAQ,GACRmB,EAAQnB,EAAO,IAGjBE,EAAa,WACXF,GAAQ,GACRmB,EAAQnB,EAAO,IAuDvB,OA/Ba,IAATA,EACAkB,EAEI,cAAC,GAAD,CACIvC,aAAcA,EAAcC,OAAQA,EACpCsB,WAAYA,EAAYnB,mBAAoBA,EAC5CE,iBAAkBA,EAAkBD,cAAeA,EACnDF,gBAAiBA,EAAiBD,UAAWA,IAGrC,IAATmB,EACPkB,EAAa,cAAC,GAAD,CACTlC,cAAeA,EACfL,aAAcA,EACdC,OAAQA,EACRsB,WAAYA,EACZC,SAAUA,EACVrB,gBAAiBA,EACjB3G,MAAOA,IAIK,IAAT6H,IACPkB,EAAa,cAAC,GAAD,CACTrH,WAAYZ,EAAOzK,SAAUuS,SAAU9H,EAAO7N,IAAK+M,MAAOA,EAC1DwG,aAAcA,EAAcmC,OA/CrB,WAEX5P,GAAiB,GACjBb,EAASkJ,GAAa,2BAAKN,GAAN,IAAa7N,IAAI6N,EAAO7N,IAAK8B,OAAQ,MACrDyF,MAAK,WACFwF,EAAMiJ,SAAQ,SAAAnJ,GACV5H,EAAS+H,GAAW,CAChBa,OAAQhB,EAAKgB,OAAQ8B,SAAU9C,EAAK8C,SACpCyB,WAAYvE,EAAK2I,aAAc5G,OAAQ/B,EAAK+B,OAAQ9M,OAAQ,EAC5D+N,SAAU,QAGlB/J,GAAiB,GACjByN,GAAa,EAAO,GACpBtO,EAAS6I,SAEZrG,OAAM,SAAAjE,GAAK,OAAI6N,MAAM7N,OA+BsBqC,cAAeA,KAO/D,8BACKiQ,KC9EAG,GAAc,SAAC,GAAwE,IAAtEvC,EAAqE,EAArEA,gBAAiBwC,EAAoD,EAApDA,YAAa3C,EAAuC,EAAvCA,aAAcI,EAAyB,EAAzBA,mBA2BtE,OACI,qBAAKzU,UAAU,kBACX8H,MACC,CACGsB,QAAS,SAEbnJ,GAAG,YACHoJ,SAAS,KAAKC,KAAK,SAASC,kBAAgB,iBAAiBnJ,cAAY,OACzED,QAAS,SAACmB,IAjCU,SAACA,GACzB,IAAMkI,EAASlI,EAAEmI,QACXC,EAASpI,EAAEqI,QAEXC,EADQlK,SAASmK,eAAe,oBACVC,wBACb,IAAXN,GAA2B,IAAXE,IAEZF,EAASI,EAAcG,MAAQP,EAASI,EAAcI,OACtDN,EAASE,EAAcK,KAAOP,EAASE,EAAcM,SAErDmK,GAAa,EAAO,GAuBNlK,CAAoB7I,IAP1C,SAUI,qBAAKtB,UAAU,eAAesJ,KAAK,WAAnC,SACI,sBAAKtJ,UAAU,gBAAgBC,GAAG,mBAAlC,UACI,sBAAKD,UAAU,eAAf,UACI,oBAAIA,UAAU,cAAcC,GAAG,iBAA/B,SAAiE,IAAhB+W,EAAoB,iBAAmB,mBACxF,wBAAQtV,KAAK,SAAS1B,UAAU,QAAQiX,SAAA,EAAMC,QAAQ,QAAQ9M,aAAW,QACrEjK,QAAS,kBAAMkU,GAAa,EAAO,IADvC,SAGI,sBAAMjU,cAAY,OAAlB,uBA3BA,IAAhB4W,EACO,cAAC,GAAD,CACHxC,gBAAiBA,EAAiBH,aAAcA,EAChDI,mBAAoBA,IAErB,WCrBF0C,GAAY,SAAC,GAAkC,IAalCvU,EAbE+L,EAA+B,EAA/BA,OAAQyI,EAAuB,EAAvBA,iBAG1BV,EAAe9N,aAAY,SAAA9D,GAAK,OAClCY,EAAmBZ,EAAO6J,EAAOzK,UAAYwB,EAAmBZ,EAAO6J,EAAOzK,UAAY,CAAEnD,KAAM,OAAMA,KACtGsU,EAAazM,aAAY,SAAA9D,GAAK,OAChC4G,GAAiB5G,EAAO6J,EAAOtD,QAAUK,GAAiB5G,EAAO6J,EAAOtD,QAAU,CAAEgK,WAAY,OAAMA,WAa1G,OACI,qBAAIzU,cAAe,SAAAU,GAAC,OAZJ,SAACA,GACjBA,EAAEkM,iBACF4J,EAAiBzI,EAAO7N,KAUAuW,CAAY/V,IAApC,UACI,6BAAKoV,IACL,6BAAKrB,IACL,6BAAK1G,EAAOzG,QACZ,6BAAKyG,EAAOiB,WAAajB,EAAOiB,WAAW3N,WAAa,KACxD,8BAZcW,EAYI+L,EAAO/L,OAXd,IAAXA,EAAuB,sBAAM5C,UAAU,gCAAhB,iBACZ,IAAX4C,EAAuB,sBAAM5C,UAAU,iCAAhB,qBACZ,IAAX4C,EAAuB,sBAAM5C,UAAU,iCAAhB,yBAA3B,SCrBKsX,GAAiB,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,oBAAqBnW,EAAc,EAAdA,QAG5CC,EAAW,SAACC,GACd,IAAIP,EAAOO,EAAEC,OAAOR,KAChBS,EAAQF,EAAEC,OAAOC,MACrB+V,EAAoBxW,EAAMS,IAG9B,OACI,+BACI,6BACI,uBAAOE,KAAK,OAAO1B,UAAU,eACzBe,KAAK,qBAAqBd,GAAG,qBAC7B2B,YAAY,eACZJ,MAAOJ,EAAQoW,mBACfnW,SAAU,SAACC,GAAD,OAAOD,EAASC,QAGlC,6BACI,uBAAOI,KAAK,OAAO1B,UAAU,eACzBe,KAAK,mBAAmBd,GAAG,mBAC3B2B,YAAY,mBACZJ,MAAOJ,EAAQqW,iBACfpW,SAAU,SAAAC,GAAC,OAAID,EAASC,QAIhC,6BACI,uBAAOI,KAAK,OAAO1B,UAAU,eACzBe,KAAK,oBAAoBd,GAAG,oBAC5B2B,YAAY,kBACZJ,MAAOJ,EAAQyR,kBACfxR,SAAU,SAAAC,GAAC,OAAID,EAASC,QAIhC,6BACI,uBAAOI,KAAK,OAAO1B,UAAU,eACzBe,KAAK,mBAAmBd,GAAG,mBAC3B2B,YAAY,iBACZJ,MAAOJ,EAAQsW,iBACfrW,SAAU,SAAAC,GAAC,OAAID,EAASC,QAIhC,6BACI,yBAAQtB,UAAU,eAAee,KAAK,qBAAqBd,GAAG,qBAC1DuB,MAAOJ,EAAQuW,mBACftW,SAAU,SAAAC,GAAC,OAAID,EAASC,IAF5B,UAGI,wBAAQE,OAAQ,EAAhB,iBACA,wBAAQA,MAAO,EAAf,iBACA,wBAAQA,MAAO,EAAf,qBACA,wBAAQA,MAAO,EAAf,6BCpDPoW,GAAqB,SAAC,GAA6D,IAA5D5M,EAA2D,EAA3DA,eAAgBqJ,EAA2C,EAA3CA,aAAaG,EAA8B,EAA9BA,gBAAiBvJ,EAAa,EAAbA,QAExElF,EAAWC,cACTiE,EAAyBgB,EAAzBhB,IAAKF,EAAoBkB,EAApBlB,KAAMmB,EAAcD,EAAdC,UAuBnB,OACI,uBAAMlL,UAAU,eAAe8H,MAAO,CAAEmC,IAAKA,EAAKF,KAAMA,EAAMX,QAAS8B,EAAY,QAAU,QAA7F,UAEKsJ,EAAgB,wBAAQ9S,KAAK,SAAS1B,UAAU,kBAC7CG,QAxBS,WACjB6K,GAAe,GACfqJ,GAAa,EAAM,IAqBE,SAGb,mBAAGrU,UAAU,iCAAiCI,cAAY,WAEpD,GAPd,OAUKoU,EAAgB,wBAAQ9S,KAAK,SAAS1B,UAAU,iBAAiBG,QA3BnD,WACnB6O,GAAkBwF,GACjBnM,MAAK,SAAAzF,GAEY,IAAXA,EACCmD,EAAS+I,GAAa0F,IAItBrC,MAAM,2BAGb5J,OAAM,SAAAjE,GAAK,OAAI6N,MAAM7N,MACtB0G,GAAe,IAcM,SACb,mBAAGhL,UAAU,uBAAuBI,cAAY,WAC1C,OC/BTyX,GAAc,WAEvB,IASIvC,EATEvF,EAAenH,aAAY,SAAA9D,GAAK,OAAIA,EAAM+J,QAAQjM,UAClDkV,EAAelP,aAAY,SAAA9D,GAAK,OAAIA,EAAMyG,QAAQ3I,UAClDiJ,EAAiBjD,aAAY,SAAA9D,GAAK,OAAIA,EAAMf,UAAUnB,UACtDmB,EAAY6E,YAAYpD,GACxB+F,EAAU3C,YAAY6C,IACtBnH,EAAQsE,aAAY,SAAA9D,GAAK,OAAIA,EAAM+J,QAAQvK,SAC3CyB,EAAWC,cARY,EASCnG,qBATD,mBAStB+L,EATsB,KASbwH,EATa,OAUCvT,oBAAS,GAVV,mBAUtBwT,EAVsB,KAUZC,EAVY,KAY7B5L,qBAAU,WACe,SAAjBoQ,GACA/R,EAASuF,OAEd,CAACwM,EAAc/R,IAElB2B,qBAAU,WACiB,SAAnBmE,GAEA9F,EAASlC,OAEd,CAACkC,EAAU8F,IACdnE,qBAAU,WAEe,SAAjBqI,GAEAhK,EAAS6I,QAGd,CAAC7I,EAAUgK,IAEd,IAAMlB,EAAUjG,YAAYqH,IAjCC,EAmCCpQ,mBAAS,CACnC2X,mBAAoB,GACpBC,iBAAkB,GAClB5E,kBAAmB,GACnB6E,iBAAkB,GAClBC,oBAAqB,IAxCI,mBAmCtBvW,EAnCsB,KAmCb4K,EAnCa,OA2CenM,mBAAS,CACjDkY,mBAAoB,EACpBC,iBAAkB,EAClBvE,kBAAmB,EACnBwE,iBAAkB,EAClBC,mBAAoB,IAhDK,mBA2CtBC,EA3CsB,KA2CNC,EA3CM,KAoDvB7N,EAAe,SAACxJ,EAAMS,GACxB4W,EAAkB,aACdL,mBAAoB,EACpBC,iBAAkB,EAClBvE,kBAAmB,EACnBwE,iBAAkB,EAClBC,mBAAoB,GACnBnX,EAAOS,IAEZ6W,QAAQC,IAAIH,IA7Da,EA+DCtY,mBAAS,CACnCoK,IAAK,EACLF,KAAM,EACNmB,WAAW,EACXqN,cAAe,IAnEU,mBA+DtBtN,EA/DsB,KA+DbwB,EA/Da,OAqES5M,mBAAS,CAC3C2Y,kBAAkB,EAClBxB,YAAa,EACbxC,gBAAiB,KAxEQ,mBAqEtBiE,EArEsB,KAqETC,EArES,KA2E7BhR,qBAAU,WACN4L,GAAU,KACX,CAACzE,IAImB,cAAnBhD,GAAmD,cAAjBiM,GAAiD,cAAjB/H,EAC9DsD,IACAD,EAAWvE,EAAQxB,KAAI,SAAAsB,GAAM,kCACtBA,GADsB,IAEzB+H,aAAc3S,EAAUqK,MAAK,SAAAzN,GAAG,OAAIA,EAAIG,MAAQ6N,EAAOzK,YAAUnD,KACjEsU,WAAY9J,EAAQ6C,MAAK,SAAA/C,GAAM,OAAIA,EAAOvK,MAAQ6N,EAAOtD,UAAQgK,iBAErE/B,GAAU,IAGY,WAAnBzH,GAAgD,WAAjBiM,GAA8C,WAAjB/H,EACnEuF,EAAkB,8BAAMhR,IACE,YAAnBuH,GAAiD,YAAjBiM,GAA+C,YAAjB/H,IACrEuF,EAAkB,qBAAKtV,UAAU,iBAAiBsJ,KAAK,SAArC,SACd,sBAAMtJ,UAAU,UAAhB,2BAIR,IAAI2Y,EAAc/L,OAAO/J,OAAO,GAAI+I,GAGhC+M,EAAY1E,OAAS,IACjB7S,EAAQoW,qBACRmB,EAAcA,EAAY9L,QAAO,SAAC8B,GAC9B,OAAgG,IAAzFA,EAAO+H,aAAa5J,cAAcC,QAAQ3L,EAAQoW,mBAAmB1K,mBAIhF1L,EAAQqW,mBACRkB,EAAcA,EAAY9L,QAAO,SAAC8B,GAC9B,OAA4F,IAArFA,EAAO0G,WAAWvI,cAAcC,QAAQ3L,EAAQqW,iBAAiB3K,mBAG5E1L,EAAQyR,oBACR8F,EAAcA,EAAY9L,QAAO,SAAC8B,GAC9B,OAAwF,IAAjFA,EAAOzG,MAAM4E,cAAcC,QAAQ3L,EAAQyR,kBAAkB/F,mBAIxE1L,EAAQsW,mBACRiB,EAAcA,EAAY9L,QAAO,SAAC8B,GAC9B,OAAyF,IAAlFA,EAAOiB,WAAW3N,WAAW8K,QAAQ3L,EAAQsW,iBAAiB5K,oBAG/B,IAA1CqH,SAAS/S,EAAQuW,sBACjBgB,EAAcA,EAAY9L,QAAO,SAAC8B,GAE9B,OAAOA,EAAO/L,SAAWuR,SAAS/S,EAAQuW,wBAGR,IAAtCQ,EAAeJ,qBACfY,EAAcA,EAAY3L,MAAK,SAAC5K,EAAG6K,GAC/B,OAAI7K,EAAEsU,eAAiBzJ,EAAEyJ,aAAqB,EACvCtU,EAAEsU,aAAezJ,EAAEyJ,aAAeyB,EAAeJ,oBAAuBI,EAAeJ,uBAG9D,IAApCI,EAAeH,mBACfW,EAAcA,EAAY3L,MAAK,SAAC5K,EAAG6K,GAC/B,OAAI7K,EAAEiT,aAAepI,EAAEoI,WAAmB,EACnCjT,EAAEiT,WAAapI,EAAEoI,WAAa8C,EAAeH,kBAAqBG,EAAeH,qBAGvD,IAArCG,EAAe1E,oBACfkF,EAAcA,EAAY3L,MAAK,SAAC5K,EAAG6K,GAC/B,OAAI7K,EAAE8F,QAAU+E,EAAE/E,MAAc,EACzB9F,EAAE8F,MAAQ+E,EAAE/E,MAAQiQ,EAAe1E,mBAAsB0E,EAAe1E,sBAG/C,IAApC0E,EAAeF,mBACfU,EAAcA,EAAY3L,MAAK,SAAC5K,EAAG6K,GAC/B,OAAiD,IAA7C7K,EAAEwN,WAAWgJ,cAAc3L,EAAE2C,YAA0B,EACpDxN,EAAEwN,WAAWgJ,cAAc3L,EAAE2C,YAAc,EAAIuI,EAAeF,kBAAqBE,EAAeF,qBAGvE,IAAtCE,EAAeD,qBACfS,EAAcA,EAAY3L,MAAK,SAAC5K,EAAG6K,GAC/B,OAAI7K,EAAEQ,SAAWqK,EAAErK,OAAe,EAC3BR,EAAEQ,OAASqK,EAAErK,OAASuV,EAAeD,oBAAsBC,EAAeD,wBAQ7F,IAiBMW,EAAqB,SAACpC,GACxBiC,EAAe,2BAAKD,GAAN,IAAmBjE,gBAAiBiC,MAMhDqC,EAAiB,SAACN,EAAkBxB,GAEtC0B,EAAe,2BACRD,GADO,IAEVD,iBAAkBA,EAClBxB,YAAaA,MAerB,OAVI2B,EAAY1E,OAAS,IACrBqB,EAAkBqD,EAAYtL,KAAI,SAAAsB,GAAM,OACpC,cAAC,GAAD,CACIA,OAAQA,EAERyI,iBAAkByB,GADblK,EAAO7N,SAOpB,sBAAKd,UAAWyY,EAAYD,iBAAmB,6BAA+B,kBAA9E,UAGQvN,EAAQC,UACJ,cAAC,GAAD,CACID,QAASA,EACTD,eA9BK,SAACE,GACtBuB,EAAW,2BAAKxB,GAAN,IAAeC,UAAWA,MA6BcmJ,aAAcyE,EAChDtE,gBAAiBiE,EAAYjE,kBAE/B,GAGNiE,EAAYD,iBACR,cAAC,GAAD,CACIhE,gBAAiBiE,EAAYjE,gBAC7BH,aAAcyE,EACd9B,YAAayB,EAAYzB,YACzBvC,mBAAoBoE,IAEtB,GAEV,oBAAI7Y,UAAU,cAAd,+BACA,qBAAKA,UAAU,6BAAf,SAEI,qBAAKA,UAAU,0CAAf,SAEI,wBAAOA,UAAU,mCAAjB,UACI,wBAAOA,UAAU,aAAjB,UACI,+BACI,cAAC,EAAD,CAAckI,MAAM,gBAChBoC,SAAS,qBAAqBE,UAAW2N,EAAeJ,mBACxDxN,aAAcA,IAElB,cAAC,EAAD,CAAcrC,MAAM,cAChBoC,SAAS,mBAAmBE,UAAW2N,EAAeH,iBACtDzN,aAAcA,IAElB,cAAC,EAAD,CAAcrC,MAAM,QAChBoC,SAAS,oBAAoBE,UAAW2N,EAAe1E,kBACvDlJ,aAAcA,IAElB,cAAC,EAAD,CAAcrC,MAAM,cAChBoC,SAAS,mBAAmBE,UAAW2N,EAAeF,iBACtD1N,aAAcA,IAElB,cAAC,EAAD,CAAcrC,MAAM,cAChBoC,SAAS,qBAAqBE,UAAW2N,EAAeD,mBACxD3N,aAAcA,OAItB,cAAC,GAAD,CAAgBgN,oBAhGV,SAACxW,EAAMS,GACjCwK,EAAW,2BACJ5K,GADG,kBAELL,EAAOS,MA6FoEJ,QAASA,OAEzE,uBAAOmM,YAAa,SAAAjM,IA3FV,IAAtB2J,EAAQC,WAERuB,EAAW,2BAAKxB,GAAN,IAAeC,WAAW,MA0FpBtK,cAAe,SAAAU,GAAC,OAvFf,SAACA,GACtBA,EAAEkM,iBACFf,EAAW,2BAAKxB,GAAN,IAAeC,WAAW,EAAMjB,IAAK3I,EAAEqI,QAAU,GAAII,KAAMzI,EAAEmI,WAqF/BgE,CAAiBnM,IADzC,SAGKgU,eClRhByD,GAAYjV,2BAAiB,iBAAD,uCAAmB,WAAO7D,GAAP,eAAAmC,EAAA,sEACjCF,EAAOoB,IAAP,wBAA4BrD,IADK,cAClD0C,EADkD,yBAGjDA,EAASuB,UAHwC,2CAAnB,uDAK5B8U,GAAalV,2BAAiB,kBAAD,uCAAoB,WAAOI,GAAP,eAAA9B,EAAA,sEACnCF,EAAOuB,IAAP,wBAA4BS,EAASpD,KAAO,CAACoD,SAAUA,IADpB,cACpDvB,EADoD,yBAEnDA,EAASuB,UAF0C,2CAApB,uDAWpC+U,GAAYvU,sBAAY,CAC1B3D,KAAK,OACLwD,aARiB,CAClB2U,KAAK,GACLtW,OAAQ,OACR0B,MAAO,MAMNK,SAAS,CACLwU,YAAc,SAACrU,EAAOC,GAElB,OADQA,EAAOG,UAKvBN,eAAa,mBACRmU,GAAU/T,WAAW,SAACF,EAAOC,GAC1BD,EAAMoU,KAAOnU,EAAOG,QACpBJ,EAAMlC,OAAS,eAHV,cAKRmW,GAAUlU,SAAU,SAACC,EAAOC,GACzBD,EAAMlC,OAAS,aANV,cAQRmW,GAAU5T,UAAW,SAACL,EAAOC,GAC1BD,EAAMlC,OAAS,YATV,cAWRoW,GAAWhU,WAAW,SAACF,EAAOC,GAC3BD,EAAMoU,KAAOnU,EAAOG,WAZf,KAkBJkU,IADiBH,GAAUxK,QAA1B0K,YACY,SAAArU,GAAK,OAAIA,EAAMoU,KAAKA,OAC/BD,MAAf,QC3CMI,I,MAAS3Z,SAAS2Z,OAAOC,MAAM,KAClCjM,KAAI,SAAAgM,GAAM,OAAIA,EAAOC,MAAM,QAC3BC,QAAO,SAACC,EAAD,0BAAeC,EAAf,KAAoBjY,EAApB,wBAAC,eAAoCgY,GAArC,kBAAmDC,EAAIC,OAASC,mBAAmBnY,OACzF,KAGSoY,GAAkB,SAAClZ,GAG9B,IAAMmZ,EAAejR,YAAYwQ,IAC3BU,EAAalR,aAAY,SAAA9D,GAAK,OAAIA,EAAMoU,KAAKtW,UAJX,EAKI/C,oBAAU,GALd,mBAKjCka,EALiC,KAKjBC,EALiB,OAMhBna,mBAAS,CAC/BiB,IAAK,GACLC,KAAM,GACNmG,QAAS,GACTjG,MAAO,GACPD,YAAa,GACbmG,UAAW,GACXjG,SAAU,KAb4B,mBAMjCgY,EANiC,KAM3Be,EAN2B,OAgBEpa,oBAAS,GAhBX,mBAgBjC8G,EAhBiC,KAgBlBC,EAhBkB,OAkBF/G,mBAAS,CAC7Cqa,iBAAiB,EACjBC,oBAAoB,EACpBC,wBAAwB,EACxBC,kBAAkB,EAClBC,qBAAqB,IAvBiB,mBAkBjCC,EAlBiC,KAkBpBC,EAlBoB,OAyBM3a,oBAAS,GAzBf,mBAyBjC0G,EAzBiC,KAyBhBC,EAzBgB,KA0BlCT,EAAWC,cAQjB0B,qBAAU,WACW,SAAfoS,GACF/T,EAAUgT,GAAUM,GAAOoB,eAGV,cAAfX,IACFG,EAAQJ,GACRG,EAAkB,MAGnB,CAACjU,EAAU8T,EAAcC,IAE5BpS,qBAAU,WAC6C,IAAjDwR,EAAKjY,MAAM2X,cAAciB,EAAa5Y,QAAmC,IAAnB8Y,GACxDC,EAAkB,KAEnB,CAACd,EAAKjY,QAET,IAmCIyZ,EAAgB,WACpBF,EAAe,CACbN,iBAAiB,EACjBC,oBAAoB,EACpBC,wBAAwB,EACxBC,kBAAkB,EAClBC,qBAAqB,KAGnBjZ,EAAW,SAACC,GAChB,IAAIP,EAAOO,EAAEC,OAAOR,KAChBS,EAAQF,EAAEC,OAAOC,MACV,cAART,GACDkZ,EAAQ,2BAAIf,GAAL,IAAW/R,UAAW3F,EAAMsO,oBAErCmK,EAAQ,2BAAKf,GAAN,kBAAanY,EAAOS,MAI7B,OACE,sBAAKxB,UAAU,OAAf,UACE,qBAAKA,UAAU,cAAf,6BAGA,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,+BAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,sBAAMA,UAAU,mBAAmBC,GAAG,iBAAtC,kBAEF,uBAAOyB,KAAK,OAAO1B,UAAU,eAAeC,GAAG,MAAMc,KAAK,MAAMiR,UAAU,EAExExQ,MAAO0X,EAAKpY,IAAKsJ,aAAW,UAGhC,sBAAKpK,UAAU,+BAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,sBAAMA,UAAU,mBAAhB,oBAEF,uBAAO0B,KAAK,OAAO1B,UAAU,eAC3BoK,aAAW,OAAOnK,GAAG,OAAOc,KAAK,OACjCiR,SAAUuI,EAAYL,gBACtBS,cAAe,WAAQH,EAAe,2BAAKD,GAAN,IAAmBL,iBAAkBK,EAAYL,oBACtF1Y,MAAO0X,EAAKnY,KACZM,SAAU,SAAAC,GAAC,OAAID,EAASC,MAE1B,qBAAKtB,UAAU,sBAAf,SACE,mBAAGA,UAAU,0CAA0CI,cAAY,OACjED,QAAS,WAAQqa,EAAe,2BAAKD,GAAN,IAAmBL,iBAAkBK,EAAYL,2BAOtF,sBAAKla,UAAU,+BAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,uBAAOA,UAAU,mBAAjB,sBAEF,uBAAO0B,KAAK,OACV1B,UAAU,gBACVC,GAAG,UAAUc,KAAK,UAAUiR,SAAUuI,EAAYJ,mBAClDQ,cAAe,kBAAMH,EAAe,2BAAKD,GAAN,IAAmBJ,oBAAqBI,EAAYJ,uBAEvF3Y,MAAO0X,EAAKhS,QACZ7F,SAAU,SAAAC,GAAC,OAAID,EAASC,MAC1B,qBAAKtB,UAAU,sBAAf,SACE,mBAAGA,UAAU,yCAAyCI,cAAY,OAChED,QAAS,WAAQqa,EAAe,2BAAKD,GAAN,IAAmBJ,oBAAqBI,EAAYJ,8BAOzF,sBAAKna,UAAU,mBAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,uBAAOA,UAAU,mBAAjB,qBAEF,uBAAO0B,KAAK,OACV1B,UAAU,gBACVC,GAAG,cAAcc,KAAK,cAAciR,SAAUuI,EAAYH,uBAC1DO,cAAe,kBAAMH,EAAe,2BAAKD,GAAN,IAAmBH,wBAAyBG,EAAYH,2BAG3F5Y,MAAO0X,EAAKlY,YACZK,SAAU,SAAAC,GAAC,OAAID,EAASC,MAC1B,qBAAKtB,UAAU,qBAAf,SACE,mBAAGA,UAAU,yCAAyCI,cAAY,OAChED,QAAS,WAAQqa,EAAe,2BAAKD,GAAN,IAAmBH,wBAAyBG,EAAYH,kCAM7F,sBAAKpa,UAAU,mBAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,uBAAOA,UAAU,mBAAjB,qBAEF,uBAAO0B,KAAK,OACV1B,UAAU,gBACVC,GAAG,QAAQc,KAAK,QAAQiR,SAAUuI,EAAYF,iBAC9CM,cAAe,kBAAMH,EAAe,2BAAKD,GAAN,IAAmBF,kBAAmBE,EAAYF,qBAGrF7Y,MAAO0X,EAAKjY,MACZI,SAAU,SAAAC,GAAC,OAAID,EAASC,MAC1B,qBAAKtB,UAAU,qBAAf,SACE,mBAAGA,UAAU,yCAAyCI,cAAY,OAChED,QAAS,kBAAMqa,EAAe,2BAAKD,GAAN,IAAmBF,kBAAmBE,EAAYF,4BAMrF,sBAAKra,UAAU,mBAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,uBAAOA,UAAU,mBAAjB,0BAEF,uBAAO0B,KAAK,OACV1B,UAAU,gBACVC,GAAG,YAAYc,KAAK,YAAYiR,SAAS,WACzC2I,cAAe,WAAQH,EAAe,2BAAKD,GAAN,IAAmBD,qBAAsBC,EAAYD,wBAC1F9Y,WAA0B+T,IAAnB2D,EAAK/R,UAA0B+R,EAAK/R,UAAUwI,UAAU,EAAGuJ,EAAK/R,UAAU4F,QAAQ,MAAQ,GACjG1L,SAAU,SAAAC,GAAC,OAAID,EAASC,SAM5B,sBAAKtB,UAAU,mBAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,uBAAOA,UAAU,mBAAjB,wBAEF,uBAAO0B,KAAK,OACV1B,UAAU,gBACVC,GAAG,WAAWc,KAAK,WAAWiR,UAAU,EACxCxQ,MAAO0X,EAAKhY,iBAMlB,sBAAKlB,UAAU,yBAAf,UAEE,yBAAQ0B,KAAK,SAAS1B,UAAU,kBAAkBG,QAnLvC,WACbyG,GAAiB,GACbmT,EACF1V,EAAU6U,EAAKjY,OACZoH,MAAK,SAAA/D,GACU,kBAAVA,GACFsC,GAAiB,GACjBJ,GAAmB,GACnBwT,EAAkB,GAClBC,EAAQ,2BAAIf,GAAL,IAAWjY,MAAO4Y,EAAa5Y,UACnB,gBAAVqD,GACTyB,EAASiT,GAAWE,IACjB7Q,MAAK,WACJzB,GAAiB,GACjBJ,GAAmB,GACnBwT,EAAkB,SAIzBzR,OAAM,SAAAjE,GACL6N,MAAM7N,GACNkC,GAAmB,GACnBwT,EAAkB,GAClBC,EAAQ,2BAAIf,GAAL,IAAWjY,MAAO4Y,EAAa5Y,YAG1C8E,EAASiT,GAAWE,IACjB7Q,MAAK,WACJzB,GAAiB,MAElB2B,OAAM,SAAAC,GAAG,OAAG2J,MAAM3J,MAGzBkS,KAkJI,UACG/T,EAAgB,mBAAG3G,UAAU,iCAAsC,GADtE,cAFF,OAMI,wBAAQ0B,KAAK,SAAS1B,UAAU,kBAAkBG,QA/MlC,WACpB8Z,EAAQJ,GACRa,IACAlU,GAAmB,IA4Mf,oBANJ,OAOWD,EAAkB,GAAK,mBAAGvG,UAAU,6BAA6B8H,MAAO,CAAEC,MAAO,OAA1D,mCCrPzB6S,GAAW,WAEpB,OACI,sBAAK5a,UAAU,kBAAf,UACI,oBAAIA,UAAU,cAAd,iCACA,qBAAKA,UAAU,qCAAf,SAEI,qBAAKA,UAAU,wCAAf,SACA,cAAC,GAAD,YCwBD6a,OAnBf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,qBAAK7a,UAAU,OAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO8a,OAAK,EAACC,KAAK,gBAClB,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,mBAAmBC,UAAWJ,KAChD,cAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,wBAAwBC,UAAWrP,KACrD,cAAC,IAAD,CAAOmP,OAAK,EAACC,KAAK,oBAAoBC,UAAWhI,KACjD,cAAC,IAAD,CAAO8H,OAAK,EAACC,KAAK,sBAAsBC,UAAWnD,KACnD,cAAC,IAAD,CAAU3X,GAAG,yBCpBR+a,4BAAe,CAC5B7L,QAAS,CACPrL,UAAWmX,EACXhC,KAAMiC,GACNtM,QAASuM,GACT7P,QAAS8P,GACTxN,MAAQyN,MCDQC,QACW,cAA7Bhb,OAAOZ,SAAS6b,UAEe,UAA7Bjb,OAAOZ,SAAS6b,UAEhBjb,OAAOZ,SAAS6b,SAAS7T,MACvB,2DCVN8T,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUC,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJlc,SAASmK,eAAe,SDqHpB,kBAAmBgS,WACrBA,UAAUC,cAAcC,MAAM1T,MAAK,SAAA2T,GACjCA,EAAaC,kB","file":"static/js/main.9669555e.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './NavBar.css';\r\nimport {Link} from 'react-router-dom';\r\nconst host = document.location.host;\r\nexport const NavBar = () => {\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n\r\n    const logOut = () =>{\r\n        fetch(`http://${host}/logout`,{method: 'GET'});\r\n        window.location.replace(`http://${host}/logout`);\r\n    }\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <nav id=\"sidebar\">\r\n                <div className=\"sidebar-header\">\r\n                </div>\r\n                <ul className=\"list-unstyled components\">\r\n                    <li className={currentPage === 0? \"active\":''}>\r\n                        <Link to=\"/management/home\" onClick={()=>setCurrentPage(0)}><i className=\"fa fa-home reg-icon\" aria-hidden=\"true\"></i></Link> \r\n                    </li>\r\n                    <li className={currentPage === 1? \"active\":''}>\r\n                        <Link to=\"/management/user\" onClick={()=>setCurrentPage(1)}><i className=\"fa fa-address-card-o reg-icon\" aria-hidden=\"true\"></i></Link> \r\n                    </li>\r\n                    <li className={currentPage === 2? \"active\":''}>\r\n                        <Link to=\"/management/tasks\" onClick={()=>setCurrentPage(2)}><i className=\"fa fa-tasks reg-icon\" aria-hidden=\"true\"></i></Link>\r\n                    </li>\r\n                    <li className={currentPage === 3? \"active\":''}>\r\n                        <Link to=\"/management/employees\" onClick={()=>setCurrentPage(3)}><i className=\"fa fa-users reg-icon\" aria-hidden=\"true\"></i></Link>\r\n                    </li>\r\n                    <li className={currentPage === 4? \"active\":''}>\r\n                        <Link to=\"/management/reports\" onClick={()=>setCurrentPage(4)}><i className=\"fa fa-file-text reg-icon\" aria-hidden=\"true\"></i></Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link onClick={logOut}>\r\n                            <i className=\"fa fa-sign-out reg-icon\" aria-hidden=\"true\" ></i>\r\n                        </Link>\r\n                        \r\n                    </li>\r\n                </ul>\r\n\r\n            </nav>\r\n\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n\r\nexport const EmployeeRow = (props) => {\r\n\r\n    const emp = props.emp;\r\n    const onClickChooseThisRow = () =>{\r\n        props.currentEmployeeIdUpdated(emp._id);\r\n    }\r\n    return (\r\n        <tr key={emp._id} onContextMenu = {onClickChooseThisRow}>\r\n\r\n            <td>{emp._id}</td>\r\n            <td>{emp.name}</td>\r\n            \r\n            <td>{emp.phoneNumber}</td>\r\n            <td>{emp.email}</td>\r\n          \r\n            <td>{emp.position}</td>\r\n        </tr>\r\n\r\n    );\r\n}","import React, { useState } from 'react';\r\nexport const EmployeesFilters = (props) => {\r\n    const filters = props.filters;\r\n\r\n\r\n    const onChange = (e) =>{\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        props.filtersUpdated(name,value);\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n            <td>\r\n                <input type=\"text\" className=\"form-control\"\r\n                    name=\"idFilter\" id=\"idFilter\" aria-describedby=\"helpId\" \r\n                    placeholder=\"searching id\"\r\n                    value = {filters.idFilter}\r\n                    onChange = {(e)=> onChange(e)}\r\n                />\r\n            </td>\r\n            <td>\r\n                <input type=\"text\" className=\"form-control\"\r\n                    name=\"nameFilter\" id=\"nameFilter\" aria-describedby=\"helpId\"\r\n                    placeholder=\"searching name\"\r\n                    value = {filters.nameFilter}\r\n                    onChange = {e => onChange(e)}\r\n                    />\r\n            </td>\r\n           \r\n\r\n            <td>\r\n                <input type=\"text\" className=\"form-control\"\r\n                    name=\"phoneNumberFilter\" id=\"phoneNumberFilter\" aria-describedby=\"helpId\"\r\n                    placeholder=\"searching phone\" \r\n                    value = {filters.phoneNumberFilter}\r\n                    onChange = {e => onChange(e)}\r\n                    />\r\n            </td>\r\n            <td>\r\n                <input type=\"text\" className=\"form-control\"\r\n                    name=\"emailFilter\" id=\"emailFilter\" aria-describedby=\"helpId\" \r\n                    placeholder=\"searching email\" \r\n                    value = {filters.email}\r\n                    onChange = {e => onChange(e)}\r\n                    />\r\n            </td>\r\n          \r\n            <td>\r\n                <select className=\"form-control\" name=\"positionFilter\" id=\"positionFilter\" value = {filters.positionFilter} \r\n                onChange={e => onChange(e)} >\r\n                    <option value='all'>all</option>\r\n                    <option value='technician'>tenchnician</option>\r\n                    <option value='employee'>employee</option>\r\n                    <option value='manager'>manager</option>\r\n                </select>\r\n            </td>\r\n        </tr>\r\n    );\r\n}","const host = document.location.host.toString();\r\nexport async function client(endpoint, { body, ...customConfig } = {}) {\r\n    // authenticated requests\r\n    const headers = { 'Content-Type': 'application/json' };\r\n    const config = {\r\n        method: body ? 'POST' : 'GET',\r\n        ...customConfig,\r\n        headers: {\r\n            ...headers,\r\n            ...customConfig.headers\r\n        }\r\n    }\r\n\r\n    if (body) {\r\n        config.body = JSON.stringify(body);\r\n    }\r\n\r\n    \r\n    let data;\r\n   \r\n    try {\r\n        const response = await window.fetch(`http://${host}/${endpoint}`, config);\r\n        if (response.status === 401) {\r\n            logout();\r\n            window.location.assign(window.location);\r\n            return;\r\n        }\r\n        data = await response.json();\r\n        if (response.ok) {\r\n            \r\n            return data;\r\n        }\r\n        throw new Error(response.statusText);\r\n    } catch (err) {\r\n        return Promise.reject(err.message ? err.message : data)\r\n    }\r\n\r\n}\r\n\r\nfunction logout() {\r\n\r\n}\r\n\r\nclient.get = function (endpoint, customConfig = {}) {\r\n    return client(endpoint, { ...customConfig, method: 'GET' });\r\n}\r\n\r\nclient.post = function (endpoint, body, customConfig = {}) {\r\n    return client(endpoint, { ...customConfig, body, method: 'POST' })\r\n}\r\n\r\nclient.delete = function (endpoint, customConfig = {}) {\r\n    return client(endpoint, { ...customConfig, method: 'DELETE' })\r\n}\r\n\r\nclient.put = function (endpoint, body, customConfig = {}) {\r\n    return client(endpoint, { ...customConfig, body, method: 'PUT' })\r\n}\r\n\r\n\r\n","import { createAsyncThunk, createEntityAdapter, createSelector, createSlice, nanoid } from '@reduxjs/toolkit';\r\nimport { client } from '../../api/client';\r\nconst employeesAdapter = createEntityAdapter({\r\n    selectId: emp => emp._id\r\n});\r\nexport const fetchEmployees = createAsyncThunk('employees/fetchEmployees', async () => {\r\n    const response = await client.get('api/employees');\r\n    return response.employees;\r\n});\r\nexport const addNewEmployee = createAsyncThunk('employees/addNewEmployee', async (initialEmployee) => {\r\n    const response = await client.post('api/employees', { employee: initialEmployee });\r\n    return response.employee;\r\n});\r\nexport const updateEmployee = createAsyncThunk('employees/updateEmployee', async (employee, _id) => {\r\n    const response = await client.put(`api/employees/${_id}`, { employee });\r\n    return response.emloyee;\r\n});\r\nexport const getEmployeeId = createAsyncThunk('employees/updateEmployee', async (_id) => {\r\n    const response = await client.get(`api/employees/${_id}`);\r\n    return response.emloyee;\r\n});\r\nexport const checkMail = async (email) => {\r\n    const response = await client.get(`api/employees/email/check?email=${email}`);\r\n    return response.error;\r\n};\r\nconst initialState = employeesAdapter.getInitialState({\r\n    status: 'idle',\r\n    error: null,\r\n})\r\n\r\nconst employeesSlice = createSlice({\r\n    name: 'employees',\r\n    initialState,\r\n    reducers: {\r\n        \r\n    },\r\n    extraReducers: {\r\n        [fetchEmployees.pending]: (state, action) => {\r\n            state.status = 'loading';\r\n        },\r\n        [fetchEmployees.fulfilled]: (state, action) => {\r\n            state.status = 'succeeded';\r\n            employeesAdapter.upsertMany(state, action.payload);\r\n        },\r\n        [fetchEmployees.rejected]: (state, action) => {\r\n            state.status = 'failed';\r\n            state.error = action.error.message;\r\n        },\r\n        [addNewEmployee.fulfilled]: (state, action)=> employeesAdapter.addOne(state, action.payload),\r\n        [updateEmployee.fulfilled]:(state, action)=> employeesAdapter.updateOne(state,{_id:action.payload._id, changes:action.payload})\r\n    }\r\n});\r\n\r\nexport const {\r\n    selectAll: selectAllEmployees,\r\n    selectById: selectEmployeeById,\r\n    selectEntities: selectEmployees,\r\n    \r\n    \r\n} = employeesAdapter.getSelectors(state => state.employees);\r\n\r\nexport const selectEmloyeeName = (_id) =>{\r\n    return selectEmployeeById(employeesAdapter.getInitialState(),_id).name;\r\n}\r\nexport default employeesSlice.reducer;","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addNewEmployee, checkMail } from './employeesSlice';\r\nimport './employeesStyle.css';\r\nexport const AddNewEmpForm = ({ closeModal }) => {\r\n    const dispatch = useDispatch();\r\n    const [nameValidation, setNameValidation] = useState(false);\r\n    const [addressValidation, setAddressValidation] = useState(false);\r\n    const [phoneValidation, setPhoneValidation] = useState(false);\r\n    const [emailValidation, setEmailValidation] = useState(false);\r\n    const [birthDateValidation, setBirthDateValidation] = useState(false);\r\n    const [loadingStatus, setLoadingStatus] = useState(false);\r\n    const [emailCheckStatus, setEmailCheckStatus] = useState(true);\r\n    const [technique, setTechnique] = useState('hardware');\r\n    const initFormat = {\r\n        name: '',\r\n        address: '',\r\n        phoneNumber: '',\r\n        email: '',\r\n        birthDate: '',\r\n        position: 'employee'\r\n    }\r\n    const [currentData, setCurrentData] = useState(initFormat);\r\n    const nameReg = /[A-Za-z]+/;\r\n    const addressReg = /\\w+[-/]*/;\r\n    const phoneReg = /\\d+/;\r\n    const emailReg = /^[\\D]\\w+@.+\\./;\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    const validate = () => {\r\n        if (!currentData.name.match(nameReg)) {\r\n            setNameValidation(false);\r\n        } else {\r\n            setNameValidation(true);\r\n        }\r\n        if (!currentData.address.match(addressReg)) {\r\n            setAddressValidation(false);\r\n        } else {\r\n            setAddressValidation(true);\r\n        }\r\n        if (!currentData.phoneNumber.match(phoneReg)) {\r\n            setPhoneValidation(false)\r\n        } else {\r\n            setPhoneValidation(true);\r\n        }\r\n        if (!currentData.email.match(emailReg)) {\r\n            setEmailValidation(false);\r\n        } else {\r\n            setEmailValidation(true);\r\n        }\r\n        if (!currentData.birthDate) {\r\n            setBirthDateValidation(false);\r\n        } else {\r\n            setBirthDateValidation(true);\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        validate();\r\n    },\r\n        [currentData]\r\n    );\r\n\r\n\r\n    const onChange = (e) => {\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n\r\n        setCurrentData({\r\n            ...currentData,\r\n            [name]: value\r\n        });\r\n\r\n    };\r\n\r\n    const createWarningApearance = (warningText, status) => {\r\n        if (status === false)\r\n            return (\r\n                <i className=\"fa fa-exclamation-circle input-group-text reg-icon\"\r\n                    style={{ color: \"red\" }} aria-hidden=\"true\"\r\n                >\r\n                </i>\r\n            );\r\n        else {\r\n            return (<i className=\"fa fa-check input-group-text reg-icon\"\r\n                style={{ color: \"green\" }} aria-hidden=\"true\"\r\n            >\r\n            </i>)\r\n        }\r\n    }\r\n\r\n\r\n    const onSave = (e) => {\r\n        setLoadingStatus(true);\r\n        checkMail(currentData.email)\r\n            .then(msg => {\r\n\r\n                if (msg === 'valid_email') {\r\n                    setEmailCheckStatus(true);\r\n                    dispatch(\r\n                        addNewEmployee(\r\n                            currentData.position === 'technician' ? { ...currentData, technique } : currentData\r\n                        )\r\n                    )\r\n                        .then(emp => {\r\n                            setCurrentData(initFormat);\r\n                            setLoadingStatus(false);\r\n                        });\r\n                } else if (msg === 'invalid_email') {\r\n\r\n                    setEmailCheckStatus(false);\r\n                    setLoadingStatus(false);\r\n                }\r\n\r\n            })\r\n            .catch(err => {\r\n                setEmailCheckStatus(false);\r\n                setLoadingStatus(false);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"modal-body\">\r\n                <form id=\"empModalAddContent\">\r\n                    <div className='input-group flex-nowrap mb-2' >\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\">Name</span>\r\n                        </div>\r\n\r\n                        <input type=\"text\" name=\"name\" id=\"name\"\r\n                            className=\"form-control\" onChange={e => onChange(e)} value={currentData.name}\r\n                            style={{ borderColor: !nameValidation ? 'red' : 'green' }}\r\n\r\n                        />\r\n                        <div className=\"input-group-append \">\r\n                            {createWarningApearance('chua nhap ten', nameValidation)}\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                    <div className='input-group flex-nowrap mb-2'>\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\">Address</span>\r\n                        </div>\r\n\r\n                        <input type=\"text\" name=\"address\" id=\"address\"\r\n                            datatoggle=\"tooltip\" title=\"Some tooltip text!\"\r\n                            className=\"form-control\" onChange={e => onChange(e)} value={currentData.address}\r\n                            style={{ borderColor: !addressValidation ? 'red' : 'green' }}\r\n                        />\r\n                        <div className=\"input-group-append \">\r\n                            {createWarningApearance('', addressValidation)}\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className='input-group flex-nowrap mb-2'>\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\">Phone</span>\r\n                        </div>\r\n\r\n                        <input type=\"text\" name=\"phoneNumber\" id=\"phoneNumber\" className=\"form-control\"\r\n                            onChange={e => onChange(e)} value={currentData.phoneNumber}\r\n                            style={{ borderColor: !phoneValidation ? 'red' : 'green' }}\r\n                        />\r\n                        <div className=\"input-group-append \">\r\n                            {createWarningApearance('', phoneValidation)}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='input-group flex-nowrap mb-2'>\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\">Email</span>\r\n                        </div>\r\n\r\n                        <input type=\"text\" name=\"email\" id=\"email\" className=\"form-control\"\r\n                            onChange={e => onChange(e)} value={currentData.email}\r\n                            style={{ borderColor: (!emailValidation || !emailCheckStatus) ? 'red' : 'green' }}\r\n                        />\r\n                        <div className=\"input-group-append \">\r\n                            {createWarningApearance('', emailValidation && emailCheckStatus)}\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className='input-group flex-nowrap mb-2'>\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\">BirthDate</span>\r\n                        </div>\r\n\r\n                        <input type=\"date\" name=\"birthDate\" id=\"birthDate\" className=\"form-control\"\r\n                            onChange={e => onChange(e)} value={currentData.birthDate}\r\n                            style={{ borderColor: !birthDateValidation ? 'red' : 'green' }}\r\n                        />\r\n                        <div className=\"input-group-append \">\r\n                            {createWarningApearance('', birthDateValidation)}\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"input-group flex-nowrap mb-2\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\">Position</span>\r\n                        </div>\r\n                        <select className=\"form-control\" name=\"position\" id=\"position\"\r\n                            onChange={e => onChange(e)} value={currentData.position}\r\n                        >\r\n                            <option value=\"employee\">Employee</option>\r\n                            <option value=\"technician\">Technician</option>\r\n                        </select>\r\n                    </div>\r\n                    {currentData.position === 'technician' ?\r\n                        <div className=\"input-group flex-nowrap mb-2\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\">Technique</span>\r\n                            </div>\r\n                            <select className=\"form-control\" name=\"technique\" id=\"position\"\r\n                                onChange={e => setTechnique(e.target.value)} value={technique}\r\n                            >\r\n                                <option value=\"hardware\">Hardware</option>\r\n                                <option value=\"software\">Software</option>\r\n                                <option value=\"network\">Network</option>\r\n                            </select>\r\n                        </div>\r\n                        : ''}\r\n                </form>\r\n\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n                <button\r\n                    type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\"\r\n                    onClick={() => {\r\n                        closeModal();\r\n                    }}\r\n                >\r\n                    Close\r\n            </button>\r\n                <button\r\n                    type=\"button\" className=\"btn btn-primary\"\r\n                    disabled={!(nameValidation && phoneValidation && birthDateValidation && addressValidation && emailValidation)}\r\n                    onClick={e => onSave(e)}\r\n                >\r\n                    {loadingStatus ? <i className=\"fa fa-circle-o-notch fa-spin\"></i> : ''}\r\n                    &nbsp;Save\r\n            </button>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}","import { current } from '@reduxjs/toolkit';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectAllEmployees, selectEmployeeById } from './employeesSlice';\r\n\r\nexport const MoreDetailForm = (props) =>{\r\n    const currentEmployeeId = props.currentEmployeeId;\r\n    const allEmps = useSelector(selectAllEmployees);\r\n    const currentEmployee = useSelector(state => selectEmployeeById(state, currentEmployeeId));\r\n   \r\n    const onChange = (e) =>{\r\n\r\n    }\r\n    \r\n    if(currentEmployee)\r\n    return(\r\n        <form id=\"moreDetailForm\">\r\n            <div className='input-group flex-nowrap mb-2' >\r\n                <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\">Name</span>\r\n                </div>\r\n                <input type=\"text\" name=\"name\" id=\"name\"\r\n                    className=\"form-control\" onChange={e => onChange(e)} value={currentEmployee.name}\r\n                />\r\n            </div>\r\n        </form>\r\n    );\r\n    return ('');\r\n}","\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AddNewEmpForm } from './AddNewEmpForm';\r\nimport { addNewEmp } from './employeesSlice';\r\nimport { MoreDetailForm } from './MoreDetailForm';\r\n\r\nexport const EmployeeModal = (props) => {\r\n\r\n    const { isEmployeeModalDisplayed, employeeModalStatus,currentEmployeeId } = props.employeeModal;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const onCloseModalCheckly = (e) => {\r\n        const mouseX = e.clientX;\r\n        const mouseY = e.clientY;\r\n        const modal = document.getElementById(\"employeeModalContent\");\r\n        const modalBoundary = modal.getBoundingClientRect();\r\n        if (mouseY === 0 && mouseX === 0);\r\n        else if (isEmployeeModalDisplayed)\r\n            if (mouseX < modalBoundary.left || mouseX > modalBoundary.right ||\r\n                mouseY < modalBoundary.top || mouseY > modalBoundary.bottom) {\r\n                \r\n                props.updateEmployeeModal(false , 0);\r\n\r\n            }\r\n\r\n    }\r\n\r\n    const onCloseModal = () =>{\r\n        props.updateEmployeeModal(false , 0);\r\n    }\r\n\r\n    const loadOptionContent = () => {\r\n        if (employeeModalStatus === 0) {\r\n            return (\r\n                <AddNewEmpForm closeModal={onCloseModal}/>\r\n            );\r\n\r\n        } else if (employeeModalStatus === 1) {\r\n            return (\r\n                <MoreDetailForm closeModal={onCloseModal} currentEmployeeId={currentEmployeeId}/>\r\n            );\r\n        }\r\n        else if (employeeModalStatus === 2) {\r\n            return ('');\r\n        }\r\n        return ('');\r\n    }\r\n\r\n\r\n\r\n\r\n    const optionedContent = loadOptionContent();\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={isEmployeeModalDisplayed ? \"modal fade show\" : \"modal fade\"}\r\n            style=\r\n            {{\r\n                display: isEmployeeModalDisplayed ? 'block' : 'none',\r\n            }}\r\n            id=\"employeeModal\"\r\n            tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"employeeModalTitle\" aria-hidden=\"true\"\r\n            onClick={(e) => { onCloseModalCheckly(e) }}\r\n\r\n        >\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n                <div className=\"modal-content\" id=\"employeeModalContent\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\" id=\"employeeModalTitle\">\r\n                            {employeeModalStatus === 0 ? 'Add New Employee' : ''}\r\n                        </h5>\r\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"\r\n                            onClick={\r\n                                () => {\r\n                                    props.updateEmployeeModal(false , 0) ;\r\n\r\n                                }\r\n                            }\r\n                        >\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    {optionedContent}\r\n                   \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","\r\nimport React, { useState } from 'react';\r\n    \r\nexport const TableHeading = ({ title, sortName, setSortOrder, sortOrder }) => {\r\n    const [sorterDisplayer, setSorterDisplayer] = useState(false);\r\n    const onSetSortOder = () => {\r\n        setSortOrder(sortName, sortOrder < 1 ? sortOrder + 1 : -1);\r\n    }\r\n\r\n    return (\r\n        <th\r\n            onMouseOver={e => setSorterDisplayer(true)}\r\n            onMouseOut={e => setSorterDisplayer(false)}\r\n            onClick={onSetSortOder}       \r\n        >\r\n            <span style={{float:'left'}}>\r\n            {title}\r\n            </span>\r\n            \r\n            {sorterDisplayer\r\n                ? <span className=\"sorter\" style={{float:\"right\", color: 'darksalmon'}} >\r\n                    {sortOrder === -1\r\n                        ? <i className=\"fa fa-sort-desc\" ></i>\r\n                        : (\r\n                            sortOrder === 1\r\n                                ? <i className=\"fa fa-sort-asc\"></i>\r\n                                : <i class=\"fa fa-random\" aria-hidden=\"true\"></i>\r\n                        )\r\n                    }\r\n                </span> : ''}\r\n        </th>\r\n\r\n    )\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './employeesStyle.css';\r\nexport const EmployeesToolkitMenu = ({displayToolbar, updateEmployeeModal, toolbar}) =>{\r\n    const {top, left, isDisplay} = toolbar;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onClickAddEmployee = () =>{\r\n        displayToolbar(false);\r\n        updateEmployeeModal(true , 0);\r\n        \r\n        \r\n    }\r\n    const onClickShowDetail = () =>{\r\n        \r\n        displayToolbar(false);\r\n        updateEmployeeModal(true , 1);        \r\n    }\r\n    return (\r\n        <span className=\"menu-toolbar\" style={{top, left, display: isDisplay===true?'block':'none'}}>\r\n            <button type=\"button\" className=\"btn btn-primary\"\r\n                onClick={onClickAddEmployee}\r\n            >\r\n                <i className=\"fa fa-plus reg-icon\" aria-hidden=\"true\"></i>\r\n            </button>&nbsp;\r\n            <button type=\"button\" className=\"btn btn-primary\">\r\n                <i className=\"fa fa-pencil-square-o reg-icon\" aria-hidden=\"true\"></i>\r\n            </button>\r\n            &nbsp;\r\n            <button type=\"button\" className=\"btn btn-primary\" onClick={onClickShowDetail}>\r\n                <i className=\"fa fa-info-circle reg-icon\" aria-hidden=\"true\"></i>\r\n            </button>\r\n        </span>\r\n    );\r\n}","import { client } from \"../../api/client\";\r\n\r\nconst { createSlice, createEntityAdapter, createAsyncThunk } = require(\"@reduxjs/toolkit\");\r\nconst deviceAdapter = createEntityAdapter({\r\n    selectId: device => device._id\r\n});\r\n\r\nexport const getDevicesByEmployeeId = createAsyncThunk('devices/fetchDevices' ,async (_id)=>{\r\n    const response = client.get(`api/employees/${_id}/devices`);\r\n    return response.devices;\r\n});\r\n\r\nexport const  fetchDevices = createAsyncThunk('devices/fetchDevise', async () =>{\r\n    const response = await client.get(`api/devices`);\r\n    return response.devices;\r\n})\r\n\r\n\r\nconst initialState = deviceAdapter.getInitialState({\r\n    status: 'idle',\r\n    error: null,\r\n});\r\n\r\nconst devicesSlice = createSlice({\r\n    name: 'devices',\r\n    initialState,\r\n    reducers: {\r\n\r\n    },\r\n    extraReducers:{\r\n        [fetchDevices.pending]:(state, action)=>{\r\n            state.status = 'loading';\r\n        },\r\n        [fetchDevices.rejected]:(state, action)=>{\r\n            state.status = 'failed';\r\n        },\r\n        [fetchDevices.fulfilled]:(state, action)=>{\r\n            state.status = 'succeeded';\r\n            deviceAdapter.upsertMany(state, action.payload);\r\n        }\r\n    }\r\n});\r\nexport const {\r\n    selectAll : selectAllDevices,\r\n    selectById: selectDeviceById,\r\n} = deviceAdapter.getSelectors(state => state.devices);\r\nexport default devicesSlice.reducer;","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { EmployeeRow } from './EmployeeRow';\r\nimport { EmployeesFilters } from './EmployeesFilters';\r\nimport { EmployeeModal } from './EmployeeModal';\r\nimport { TableHeading } from '../../unities/TableHeading';\r\nimport { EmployeesToolkitMenu } from './EmployeesToolkitMenu';\r\n\r\nimport { fetchEmployees, selectAllEmployees } from './employeesSlice';\r\nimport '../../App.css';\r\nimport { fetchDevices } from '../devices/devicesSlice';\r\nimport { TableFilter } from '../../unities/TableFilter';\r\n\r\nexport const EmployeesPage = () => {\r\n    const dispatch = useDispatch();\r\n    const employeeStatus = useSelector(state => state.employees.status);\r\n    const error = useSelector(state => state.employees.error);\r\n\r\n    const employees = useSelector(selectAllEmployees);\r\n\r\n    useEffect(\r\n        () => {\r\n            if (employeeStatus === 'idle') {\r\n                dispatch(fetchEmployees());\r\n            }\r\n        }, [employeeStatus, dispatch]\r\n    );\r\n\r\n    let content;\r\n\r\n    if (employeeStatus === 'loading') {\r\n        content = (\r\n            <div className=\"spinner-border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>);\r\n    } else if (employeeStatus === 'succeeded') {\r\n        content = employees;\r\n    } else if (employeeStatus === 'failed') {\r\n        content = <div>{error}</div>;\r\n    }\r\n\r\n    const [filters, setFilters] = useState({\r\n        idFilter: '',\r\n        nameFilter: '',\r\n        addressFilter: '',\r\n        emailFilter: '',\r\n        phoneNumberFilter: '',\r\n        positionFilter: 'all',\r\n    });\r\n    const [employeesSorters, setEmployeesSorters] = useState({\r\n        idSorter: 0,\r\n        nameSorter: 0,\r\n        addressSorter: 0,\r\n        emailSorter: 0,\r\n        phoneNumberSorter: 0,\r\n        positionSorter: 0,\r\n    });\r\n    const [toolbar, setToolbar] = useState({\r\n        top: 0,\r\n        left: 0,\r\n        isDisplay: false,\r\n    });\r\n    const [employeeModal, setEmployeeModal] = useState({\r\n        isEmployeeModalDisplayed: false,\r\n        currentEmployeeId: '',\r\n        employeeModalStatus: -1 // 0: add option, 1 : more infor, 2 other\r\n\r\n    });\r\n\r\n    const setSortOrder = (name, value) => {\r\n        setEmployeesSorters({\r\n            idSorter: 0,\r\n            nameSorter: 0,\r\n            addressSorter: 0,\r\n            emailSorter: 0,\r\n            phoneNumberSorter: 0,\r\n            positionSorter: 0,\r\n            [name]: value,\r\n        })\r\n    }\r\n\r\n    var tempEmployees = Object.assign([], content);\r\n\r\n    if (filters.idFilter) tempEmployees = tempEmployees.filter(emp => {\r\n        return emp._id.toString().toLowerCase().indexOf(filters.idFilter.toLowerCase()) !== -1;\r\n    }\r\n    );\r\n    if (filters.nameFilter) tempEmployees = tempEmployees.filter(emp => {\r\n        return emp.name.toString().toLowerCase().indexOf(filters.nameFilter.toLowerCase()) !== -1;\r\n    }\r\n    );\r\n    if (filters.phoneNumberFilter) tempEmployees = tempEmployees.filter(emp => {\r\n        return emp.phoneNumber.toString().toLowerCase().indexOf(filters.phoneNumberFilter.toLowerCase()) !== -1;\r\n    }\r\n    );\r\n    if (filters.emailFilter) tempEmployees = tempEmployees.filter(emp => {\r\n        return emp.email.toString().toLowerCase().indexOf(filters.emailFilter.toLowerCase()) !== -1;\r\n    }\r\n    );\r\n\r\n    tempEmployees = tempEmployees.filter(emp => {\r\n        if (filters.positionFilter === \"all\") return emp;\r\n        if (filters.positionFilter === \"employee\") return emp.position === \"employee\";\r\n        if (filters.positionFilter === \"manager\") return emp.position === \"manager\";\r\n        return emp.position === \"technician\";\r\n    });\r\n\r\n    if (employeesSorters.idSorter !== 0)\r\n        tempEmployees = tempEmployees.sort((a, b) => {\r\n            return a._id > b._id ? employeesSorters.idSorter : - employeesSorters.idSorter;\r\n        });\r\n\r\n    if (employeesSorters.nameSorter !== 0)\r\n        tempEmployees = tempEmployees.sort((a, b) => {\r\n            if(a.name === b.name) return 0;\r\n            return a.name > b.name ? employeesSorters.nameSorter : - employeesSorters.nameSorter;\r\n        });\r\n\r\n    if (employeesSorters.addressSorter !== 0)\r\n        tempEmployees = tempEmployees.sort((a, b) => {\r\n            if(a.address === b.address) return 0;\r\n            return a.address > b.address ? employeesSorters.addressSorter : - employeesSorters.addressSorter;\r\n        });\r\n\r\n    if (employeesSorters.emailSorter !== 0)\r\n        tempEmployees = tempEmployees.sort((a, b) => {\r\n            if(a.email === b.email) return 0;\r\n            return  a.email > b.email ? employeesSorters.emailSorter : - employeesSorters.emailSorter\r\n        });\r\n\r\n    if (employeesSorters.phoneNumberSorter !== 0)\r\n        tempEmployees = tempEmployees.sort((a, b) => {\r\n            if(a.phoneNumber === b.phoneNumber) return 0;\r\n            return a.phoneNumber > b.phoneNumber ? employeesSorters.phoneNumberSorter : - employeesSorters.phoneNumberSorter;\r\n        });\r\n\r\n    if (employeesSorters.positionSorter !== 0)\r\n        tempEmployees = tempEmployees.sort((a, b) => {\r\n            if(a.position === b.position) return 0;\r\n            return a.position > b.position ? employeesSorters.positionSorter : - employeesSorters.positionSorter\r\n        });\r\n\r\n    const onUpdateCurrentEmployee = (empId) => {\r\n        setEmployeeModal({\r\n            ...employeeModal,\r\n            currentEmployeeId: empId\r\n        })\r\n    }\r\n    const renderedEmployees = tempEmployees.map(emp => \r\n            <EmployeeRow emp={emp} key={emp._id} currentEmployeeIdUpdated={onUpdateCurrentEmployee} />\r\n\r\n    );\r\n\r\n    const onMouseMoveTbody = (e) => {\r\n        if (toolbar.isDisplay) {\r\n            setToolbar({ ...toolbar, isDisplay: false });\r\n\r\n        }\r\n    }\r\n    const tbodyOnMouseLick = (e) => {\r\n        e.preventDefault();\r\n        setToolbar({ left: e.clientX, top: e.clientY - 35, isDisplay: true });\r\n    }\r\n\r\n    \r\n    const onDisplayToolbar = (isDisplay) => {\r\n        setToolbar({\r\n            ...toolbar,\r\n            isDisplay\r\n        });\r\n    }\r\n\r\n    const onUpdateModal = (display , status ) => {\r\n\r\n        setEmployeeModal({\r\n            ...employeeModal,\r\n            isEmployeeModalDisplayed: display,\r\n            employeeModalStatus: status,\r\n        });\r\n\r\n\r\n    }\r\n\r\n    const onUpdateFilters = (name, value) =>{\r\n        setFilters({...filters, [name]: value});\r\n    }\r\n\r\n    return (\r\n        <div className={employeeModal.isEmployeeModalDisplayed ? \"modal-open container-fluid\" : \"container-fluid\"}\r\n        >\r\n\r\n            {toolbar.isDisplay?<EmployeesToolkitMenu toolbar={toolbar}\r\n                displayToolbar={onDisplayToolbar} updateEmployeeModal={onUpdateModal}\r\n            />:''}\r\n            {employeeModal.isEmployeeModalDisplayed?<EmployeeModal updateEmployeeModal={onUpdateModal}\r\n                currentEmployeeId={employeeModal.currentEmployeeId}\r\n                employeeModal={employeeModal} \r\n            />:''}\r\n            <h3 className=\"text-center\">Employees Management</h3>\r\n            <div className=\"row justify-content-center\">\r\n\r\n                <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-11\">\r\n\r\n                    <table className='table table-bordered table-hover' >\r\n                        <thead className=\"thead-dark\">\r\n                            <tr>\r\n                                <TableHeading\r\n                                    title=\"ID\"\r\n                                    sortName=\"idSorter\"\r\n                                    sortOrder={employeesSorters.idSorter}\r\n                                    setSortOrder={setSortOrder}\r\n                                />\r\n                                <TableHeading\r\n                                    title=\"Name\"\r\n                                    sortName=\"nameSorter\"\r\n                                    sortOrder={employeesSorters.nameSorter}\r\n                                    setSortOrder={setSortOrder}\r\n                                />\r\n                                <TableHeading\r\n                                    title=\"Phone Number\"\r\n                                    sortName=\"phoneNumberSorter\"\r\n                                    sortOrder={employeesSorters.phoneNumberSorter}\r\n                                    setSortOrder={setSortOrder}\r\n                                />\r\n                                <TableHeading\r\n                                    title=\"Email\"\r\n                                    sortName=\"emailSorter\"\r\n                                    sortOrder={employeesSorters.emailSorter}\r\n                                    setSortOrder={setSortOrder}\r\n                                />\r\n                                <TableHeading\r\n                                    title=\"Position\"\r\n                                    sortName=\"positionSorter\"\r\n                                    sortOrder={employeesSorters.positionSorter}\r\n                                    setSortOrder={setSortOrder}\r\n                                />\r\n                            </tr>\r\n                          \r\n                            <EmployeesFilters filters={filters} filtersUpdated={onUpdateFilters} />\r\n                        </thead>\r\n                        <tbody onMouseMove={e => onMouseMoveTbody(e)}\r\n                            onContextMenu={e => tbodyOnMouseLick(e)}\r\n                        >\r\n                            {employees ? renderedEmployees : content}\r\n                        </tbody>\r\n                    </table>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import { createAsyncThunk, createEntityAdapter, createSlice } from '@reduxjs/toolkit';\r\nimport { client } from '../../api/client';\r\n\r\n\r\nconst tasksAdapter = createEntityAdapter(\r\n    {\r\n        selectId: task => task._id,\r\n    }\r\n);\r\n\r\nexport const fetchTasks = createAsyncThunk('tasks/fetchTasks', async () => {\r\n    const response = await client.get('api/tasks');\r\n    return response.tasks;\r\n});\r\n\r\nexport const addNewTask = createAsyncThunk('tasks/addNewTask', async (task) => {\r\n    const response = await client.post('api/tasks', { task });\r\n    return response.task;\r\n});\r\n\r\nexport const updateTask = createAsyncThunk('tasks/updateTask', async (task) => {\r\n    const response = await client.put(`api/tasks/${task._id}`, { task });\r\n    return response.task;\r\n});\r\n\r\n\r\n\r\nconst initialState = tasksAdapter.getInitialState({\r\n    status: 'idle',\r\n    error: null\r\n});\r\nconst tasksSlice = createSlice({\r\n    name: 'reports',\r\n    initialState,\r\n    reducers: {\r\n        updateInternalTask : (state, action) =>{\r\n            let updatedIndex = state.ids.find(_id => _id === action.payload._id);\r\n            state.entities[updatedIndex] = action.payload;\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [fetchTasks.fulfilled]: (state, action) => {\r\n            state.status = 'succeeded';\r\n            tasksAdapter.upsertMany(state, action.payload);\r\n        },\r\n        [fetchTasks.pending]: (state, action) => {\r\n            state.status = 'loading';\r\n        },\r\n        [fetchTasks.rejected]: (state, action) => {\r\n            state.status = 'failed';\r\n        },\r\n        [addNewTask.fulfilled]: (state, action) => tasksAdapter.addOne(state, action.payload),\r\n        [updateTask.fulfilled]: (state, action) => tasksAdapter.updateOne(state, {id: action.payload._id,changes:action.payload}),\r\n\r\n    }\r\n});\r\nexport const {\r\n    selectAll: selectAllTasks,\r\n    selectIds: selectAllTaskIds,\r\n    selectById: selectTaskById,\r\n} = tasksAdapter.getSelectors(state => state.tasks);\r\nexport const {updateInternalTask,} = tasksSlice.actions;\r\nexport default tasksSlice.reducer;","import { createAsyncThunk, createEntityAdapter, createSlice } from '@reduxjs/toolkit';\r\nimport {client} from '../../api/client';\r\n\r\nconst reportsAdapter = createEntityAdapter({\r\n    selectId : report => report._id,\r\n\r\n});\r\n\r\nexport const fetchReports = createAsyncThunk('reports/fetchReports', async () =>{\r\n    const response = await client.get('api/reports');\r\n    \r\n    return response.reports;\r\n});\r\nexport const deleteReport = createAsyncThunk('reports/deleteReport', async (id)=>{\r\n    const response = await client.delete(`api/reports/${id}`);\r\n    return response.report;\r\n});\r\nexport const addNewReport = createAsyncThunk('reports/addNewReport',async (report)=>{\r\n    const response = await client.post('api/reports',{report});\r\n    return response.report;\r\n})\r\nexport const checkReportStatus = async (id)=>{\r\n    const response = await client.get(`api/reports/${id}/status`);\r\n  \r\n    return response.status;\r\n};\r\n\r\nexport const updateReport = createAsyncThunk('reports/updateReport', async (report) =>{\r\n    const responese = await client.put(`api/reports/${report._id}`, {report});\r\n    return responese.report;\r\n})\r\n\r\nconst initialState = reportsAdapter.getInitialState({\r\n    status : 'idle',\r\n    error: null,\r\n    filters:{\r\n\r\n    }\r\n});\r\n\r\nconst reportsSlice = createSlice({\r\n    name: 'reports',\r\n    initialState,\r\n    reducers: {\r\n        addNewReport: {\r\n            reducer: (state, action) => {\r\n                state.reports.push(action.payload);\r\n            },\r\n            prepare: (employeeId, deviceId, reportDetail) => {\r\n                return {\r\n                    payload: {\r\n                        employeeId,\r\n                        deviceId,\r\n                        detail: reportDetail.substring(0, 100),\r\n                        reportDate: new Date().toLocaleString(),\r\n                        reportStatus: 0,\r\n                    }\r\n                }\r\n            },\r\n        }\r\n    },\r\n    extraReducers:{\r\n        [fetchReports.pending]:(state , action)=>{\r\n            state.status = 'loading';\r\n        },\r\n        [fetchReports.fulfilled] :(state , action)=>{\r\n            state.status = 'succeeded';\r\n            reportsAdapter.upsertMany(state, action.payload);\r\n        },\r\n        [fetchReports.rejected] :(state , action)=>{\r\n            state.status = 'failed';\r\n        },\r\n        [addNewReport.fulfilled]:(state, action)=> reportsAdapter.addOne(state, action.payload),\r\n        [deleteReport.fulfilled]: (state, action)=>reportsAdapter.removeOne(state, action.payload._id),\r\n        [updateReport.fulfilled]: (state, action) => reportsAdapter.updateOne(state, {id:action.payload._id,changes:action.payload}),\r\n     \r\n    }\r\n});\r\n\r\nexport const {\r\n    selectAll: selectAllReports,\r\n    selectIds: selectReportIds,\r\n    selectById: selectReportById,\r\n    \r\n} = reportsAdapter.getSelectors(state => state.reports);\r\n\r\n\r\nexport default reportsSlice.reducer;","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectEmployeeById } from '../employees/employeesSlice';\r\nimport { selectReportById } from '../reports/reportsSlice';\r\nimport { selectTaskById } from './tasksSlice';\r\n\r\n\r\nexport const TaskRow = ({ task, setCurrentTaskId}) => {\r\n   \r\n  \r\n  \r\n   \r\n\r\n    return (\r\n        <tr  onClick={e => { setCurrentTaskId(task._id) }} \r\n            data-toggle=\"modal\" data-target=\"#exampleModal\"\r\n            className ={task.status === -1 ?'bg-warning':''}\r\n        >\r\n            \r\n            <td>{task.technicianName}</td>\r\n            <td>{task.reportTitle}</td>\r\n            <td>{task.taskName}</td>\r\n\r\n            \r\n            <td>\r\n                {task.status === -1 ?\r\n                    <span className=\"badge badge-fill badge-danger\">Denied</span>\r\n                    : (task.status === 0 ? <span className=\"badge badge-fill badge-primary\">Solving</span> :\r\n                        (task.status === 1 ? <span className=\"badge badge-fill badge-success\">Finish</span> : ''))\r\n\r\n                }\r\n\r\n            </td>\r\n            <td>\r\n\r\n                <span className=\"progress\">\r\n                    <span className=\"progress-bar progress-bar-striped bg-danger\" role=\"progressbar\"\r\n                        style={{ width: `${task.progress}%` }} aria-valuenow={task.progress} aria-valuemin=\"0\" aria-valuemax=\"100\">\r\n                        {task.progress}\r\n                    </span>\r\n                </span>\r\n            </td>\r\n        </tr>);\r\n}","\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectAllEmployees, selectEmployeeById } from '../employees/employeesSlice';\r\nimport { selectAllReports } from '../reports/reportsSlice';\r\nimport { fetchTasks, selectAllTasks, selectTaskById, updateTask } from './tasksSlice';\r\n\r\n\r\nexport const ReassignForm = ({ currentTaskId, taskModal, setTaskModal }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const employees = useSelector(selectAllEmployees);\r\n    const techniciansOption = employees.filter(tech => tech.position === 'technician');\r\n\r\n    const [techniqueOption, setTechniqueOption] = useState('all');\r\n\r\n    const [technicians, setTechnicians] = useState(techniciansOption);\r\n    const currentTask = useSelector(state => selectTaskById(state, currentTaskId));\r\n    const [currentTechnician, setCurrentTechncian] = useState(technicians[1]);\r\n\r\n    \r\n\r\n    const [validation, setValidation] = useState(false);\r\n    const [loadingStatus, setLoadingStatus] = useState(false);\r\n\r\n    const renderedTechnicians = technicians.map(tech =>\r\n        <option value={tech.name} key={tech._id}>{tech.name}</option>);\r\n\r\n\r\n    const [assignStep, setAssignStep] = useState(0);\r\n\r\n\r\n    useEffect(() => {\r\n        if (currentTask.taskName === '') setValidation(false);\r\n        else setValidation(true);\r\n\r\n    }, [currentTask])\r\n\r\n    useEffect(() => {\r\n\r\n        if (techniqueOption === 'all') {\r\n            setTechnicians(techniciansOption);\r\n        }\r\n        else if (techniqueOption === 'hardware') {\r\n            setTechnicians(techniciansOption.filter(tech => tech.technique === 'hardware'));\r\n        }\r\n        else if (techniqueOption === 'software') {\r\n            setTechnicians(techniciansOption.filter(tech => tech.technique === 'software'));\r\n        }\r\n        else if (techniqueOption === 'network') {\r\n            setTechnicians(techniciansOption.filter(tech => tech.technique === 'network'));\r\n        }\r\n    }, [techniqueOption]);\r\n\r\n\r\n    const onAssign = () => {\r\n        setLoadingStatus(true);\r\n        dispatch(updateTask({...currentTask, technician: currentTechnician._id, status: 0}))\r\n        .then(()=>{setLoadingStatus(false)})\r\n        .catch(err =>{setLoadingStatus(false); alert(err)});\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const onSetCurrentTechnician = (value) => {\r\n        setCurrentTechncian(techniciansOption.find(tech => tech.name === value));\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"modal-body\">\r\n                <div className='input-group flex-nowrap mb-2'>\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\">Technician</span>\r\n                    </div>\r\n\r\n                    <select name=\"technician\" id=\"input\" className=\"form-control\" required=\"required\"\r\n                        value={currentTechnician.name}\r\n\r\n                        onChange={e => {\r\n                            onSetCurrentTechnician(e.target.value);\r\n                        }}\r\n                    >\r\n                        {renderedTechnicians}\r\n                    </select>\r\n                </div>\r\n                <div className=\"input-group flex-nowrap mb-2\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\">Technique</span>\r\n                    </div>\r\n                    <select className=\"form-control\" name=\"technique\" id=\"position\"\r\n                        value={techniqueOption}\r\n                        onChange={(e) => {\r\n                            if (e.target.value !== techniqueOption)\r\n                                setTechniqueOption(e.target.value)\r\n                        }}\r\n                    >\r\n                        <option value=\"all\">All</option>\r\n                        <option value=\"hardware\">Hardware</option>\r\n                        <option value=\"software\">Software</option>\r\n                        <option value=\"network\">Network</option>\r\n\r\n\r\n                    </select>\r\n                </div>\r\n                <div className=\"input-group flex=nowrap mb-2\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\">Task Name</span>\r\n                    </div>\r\n\r\n                    <input value={currentTask.taskName} type=\"text\" readOnly=\"readOnly\"\r\n                        className=\"form-control\"\r\n                    />\r\n\r\n\r\n                </div>\r\n                <div className=\"input-group flex=nowrap mb-2\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\">Detail</span>\r\n                    </div>\r\n\r\n                    <textarea type=\"text\" name=\"taskDetail\" id=\"input\"\r\n                        className=\"form-control\" required=\"required\"\r\n                        rows={4}\r\n                        value={currentTask.detail}\r\n                        readOnly='ReadOnly'\r\n                    />\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\"\r\n                    onClick={() => setTaskModal({ ...taskModal, isDisplay: false })}\r\n                >\r\n                    Close\r\n                 </button>\r\n                &nbsp;\r\n\r\n                <button type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    data-dismiss=\"modal\"\r\n                    onClick={onAssign}\r\n                    disabled={!validation}\r\n                >\r\n\r\n                    &nbsp;\r\n                    Assgin\r\n                    &nbsp;\r\n                   {\r\n                        loadingStatus ? <i className=\"fa fa-circle-o-notch fa-spin\"></i>\r\n                        : <i className=\"fa fa-check-square-o\" aria-hidden=\"true\"></i>\r\n                    }\r\n\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}","import React from 'react';\r\n\r\nimport { ReassignForm } from './ReassignForm';\r\n\r\n\r\nexport const TaskModal = ({ taskModal, setTaskModal, currentTaskId }) => {\r\n   \r\n\r\n    const onCloseModalCheckly = (e) => {\r\n        const mouseX = e.clientX;\r\n        const mouseY = e.clientY;\r\n        const modal = document.getElementById(\"taskModalContent\");\r\n        const modalBoundary = modal.getBoundingClientRect();\r\n        if(mouseX !== 0 && mouseY !== 0)\r\n        if (mouseX < modalBoundary.left || mouseX > modalBoundary.right ||\r\n            mouseY < modalBoundary.top || mouseY > modalBoundary.bottom) {\r\n            setTaskModal({ ...taskModal, isDisplay: false })\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"modal fade show\" \r\n            style=\r\n            {{\r\n                display: 'block' \r\n\r\n            }}\r\n            id=\"taskModal\"\r\n            tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"taskModalTitle\" aria-hidden=\"true\"\r\n            onClick={(e) => { onCloseModalCheckly(e) }}\r\n\r\n        >\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n                <div className=\"modal-content\" id=\"taskModalContent\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\" id=\"taskModalTitle\">Modal title</h5>\r\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"\r\n                            onClick={() => {setTaskModal({ ...taskModal, isDisplay: false })}}\r\n                        >\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <ReassignForm taskModal={taskModal} setTaskModal={setTaskModal} currentTaskId={currentTaskId}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { current } from '@reduxjs/toolkit';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n\r\nexport const TaskToolkitMenu = ({ taskToolkit,currentTaskId, setTaskToolkit, setTaskModal, taskModal }) => {\r\n\r\n\r\n    const showTaskDetail = () => {\r\n        setTaskToolkit({...taskToolkit, isDisplay: false});\r\n        setTaskModal({...taskModal, isDisplay:true, taskModalOption:  1});\r\n    }\r\n    return (\r\n        <span className=\"menu-toolbar\" style={{\r\n            top: taskToolkit.top,\r\n            left: taskToolkit.left, display: taskToolkit.isDisplay ? \"block\" : \"none\"\r\n        }}>\r\n            {currentTaskId?<button type=\"button\" className=\"btn btn-primary\"\r\n                onClick={showTaskDetail}\r\n            >\r\n                <i className=\"fa fa-pencil-square-o reg-icon\" aria-hidden=\"true\"></i>\r\n            </button>:''}&nbsp;\r\n\r\n           \r\n            \r\n        </span>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nexport const TasksFilters = ({UpdateFilter, tasksFilters}) => {\r\n \r\n    const onChange = (e) =>{\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        UpdateFilter(name, value);\r\n    }\r\n    return (\r\n        <tr>\r\n            <td>\r\n                <input type=\"text\" className=\"form-control\"\r\n                    name=\"technicianNameFilter\" id=\"technicianNameFilter\" aria-describedby=\"helpId\" \r\n                    placeholder=\"searching technician\"\r\n                    value = {tasksFilters.technicianNameFilter}\r\n                    onChange = {(e)=> onChange(e)}\r\n                />\r\n            </td>\r\n            <td>\r\n                <input type=\"text\" className=\"form-control\"\r\n                    name=\"reportTitleFilter\" id=\"reportTitleFilter\" aria-describedby=\"helpId\"\r\n                    placeholder=\"searching title\"\r\n                    value = {tasksFilters.reportTitleFilter}\r\n                    onChange = {e => onChange(e)}\r\n                    />\r\n            </td>\r\n           \r\n\r\n            <td>\r\n                <input type=\"text\" className=\"form-control\"\r\n                    name=\"taskNameFilter\" id=\"taskNameFilter\" aria-describedby=\"helpId\"\r\n                    placeholder=\"searching task\" \r\n                    value = {tasksFilters.taskNameFilter}\r\n                    onChange = {e => onChange(e)}\r\n                    />\r\n            </td>\r\n           \r\n            <td>\r\n\r\n                <select className=\"form-control\" name=\"statusFilter\" id=\"statusFilter\" \r\n                    value = {tasksFilters.statusFilter} \r\n                    onChange={e => onChange(e)} >\r\n                    <option value= {-2}>all</option>\r\n                    <option value={0}>solving</option>\r\n                    <option value={1}>finish</option>\r\n                    <option value={-1}>denied</option>\r\n                </select>\r\n            </td>\r\n            <td></td>\r\n           \r\n        </tr>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchTasks, selectAllTasks } from './tasksSlice';\r\nimport { TaskRow } from './TaskRow';\r\nimport { fetchEmployees, selectAllEmployees } from '../employees/employeesSlice';\r\nimport { fetchReports, selectAllReports } from '../reports/reportsSlice';\r\nimport { TaskModal } from './TaskModal';\r\nimport { TaskToolkitMenu } from './TaskToolkitMenu';\r\nimport { selectAllDevices } from '../devices/devicesSlice';\r\nimport { TasksFilters } from './TasksFilters';\r\nimport { TableHeading } from '../../unities/TableHeading';\r\nexport const TasksPage = () => {\r\n    const dispatch = useDispatch();\r\n    const reports = useSelector(selectAllReports);\r\n    const employees = useSelector(selectAllEmployees);\r\n    const tasks = useSelector(selectAllTasks);\r\n    const taskStatus = useSelector(state => state.tasks.status);\r\n    const reportStatus = useSelector(state => state.reports.status);\r\n    const employeesStatus = useSelector(state => state.employees.status);\r\n    const error = useSelector(state => state.tasks.error);\r\n    const [currentTaskId, setCurrentTaskId] = useState('');\r\n    const [content, setContent] = useState();\r\n    const [isUpdate, setUpdate] = useState(false);\r\n\r\n    const [tasksFilters, setTasksFilters] = useState({\r\n        technicianNameFilter: '',\r\n        reportTitleFilter: '',\r\n        taskNameFilter: '',\r\n        statusFilter: -2,\r\n    })\r\n\r\n    const [tasksSorter, setTasksSorter] = useState({\r\n        technicianNameSorter: 0, // -1 decrease 1 increase\r\n        reportTitleSorter: 0,\r\n        taskNameSorter: 0,\r\n        statusSorter: 0,\r\n        progressSorter: 0,\r\n    })\r\n\r\n\r\n    const [taskModal, setTaskModal] = useState({\r\n        isDisplay: false,\r\n        taskModalOption: 0 // 1 : more detail, -1: delete\r\n    });\r\n\r\n    const [taskToolkit, setTaskToolkit] = useState({\r\n        top: 0,\r\n        left: 0,\r\n        isDisplay: false,\r\n    });\r\n\r\n    let renderedTask;\r\n\r\n\r\n    useEffect(() => {\r\n        if (employeesStatus === 'idle') {\r\n            dispatch(fetchEmployees());\r\n        }\r\n    }, [dispatch, employeesStatus]);\r\n\r\n    useEffect(() => {\r\n        if (reportStatus === 'idle') {\r\n            dispatch(fetchReports());\r\n        }\r\n    }, [dispatch, reportStatus]);\r\n\r\n    useEffect(() => {\r\n        if (taskStatus === 'idle') {\r\n            dispatch(fetchTasks());\r\n        }\r\n    }, [dispatch, taskStatus]);\r\n\r\n\r\n    useEffect(() => {\r\n        setUpdate(true);\r\n    }, [tasks])\r\n\r\n\r\n\r\n    if ((employeesStatus === 'succeeded' && reportStatus === 'succeeded' && taskStatus === 'succeeded')) {\r\n        if (isUpdate) {\r\n            setContent(tasks.map(task => {\r\n                return {\r\n                    ...task,\r\n                    technicianName: employees.find(emp => emp._id === task.technician).name,\r\n                    reportTitle: reports.find(report => report._id === task.report).title,\r\n                }\r\n            })\r\n            );\r\n            setUpdate(false);\r\n        }\r\n\r\n    } else if (employeesStatus === 'failed' || reportStatus === 'failed' || taskStatus === 'failed') {\r\n        renderedTask = <tr>{error}</tr>\r\n    } else if (employeesStatus === 'loading' || reportStatus === 'loading' || taskStatus === 'loading') {\r\n        renderedTask = (\r\n            <tr className=\"spinner-border text-primary\" style={{ width: 100, height: 100 }}></tr>\r\n        );\r\n    }\r\n\r\n\r\n\r\n    let tempRefTasks = Object.assign([], content);\r\n    if (tempRefTasks && tempRefTasks.length > 0) {\r\n        if (tasksFilters.technicianNameFilter) {\r\n            tempRefTasks = tempRefTasks.filter(task => {\r\n                return task.technicianName.toLowerCase().indexOf(tasksFilters.technicianNameFilter.toLocaleLowerCase()) !== -1;\r\n            })\r\n        }\r\n\r\n        if (tasksFilters.reportTitleFilter) {\r\n            tempRefTasks = tempRefTasks.filter(task => {\r\n                return task.reportTitle.toLowerCase().indexOf(tasksFilters.reportTitleFilter.toLocaleLowerCase()) !== -1\r\n\r\n            })\r\n        }\r\n\r\n        if (tasksFilters.taskNameFilter) {\r\n            tempRefTasks = tempRefTasks.filter(task => {\r\n                return task.taskName.toLowerCase().indexOf(tasksFilters.taskNameFilter.toLocaleLowerCase()) !== -1\r\n\r\n            })\r\n        }\r\n\r\n        tempRefTasks = tempRefTasks.filter(task => {\r\n            if (parseInt(tasksFilters.statusFilter) === -2) return task;\r\n            return task.status === parseInt(tasksFilters.statusFilter);\r\n        })\r\n\r\n\r\n        if (tasksSorter.technicianNameSorter !== 0)\r\n            tempRefTasks = tempRefTasks.sort((a, b) => {\r\n                if(a.technicianName === b.technicianName) return 0;\r\n                return a.technicianName > b.technicianName ? tasksSorter.technicianNameSorter : - tasksSorter.technicianNameSorter\r\n            });\r\n\r\n        if (tasksSorter.reportTitleSorter !== 0)\r\n            tempRefTasks = tempRefTasks.sort((a, b) => {\r\n                if(a.reportTitle === b.reportTitle) return 0;\r\n                return a.reportTitle > b.reportTitle ? tasksSorter.reportTitleSorter : - tasksSorter.reportTitleSorter;\r\n            });\r\n\r\n        if (tasksSorter.taskNameSorter !== 0)\r\n            tempRefTasks = tempRefTasks.sort((a, b) => {\r\n                if(a.taskName === b.taskName) return 0;\r\n                return a.taskName > b.taskName ? tasksSorter.taskNameSorter : - tasksSorter.taskNameSorter;\r\n            });\r\n        if (tasksSorter.statusSorter !== 0)\r\n            tempRefTasks = tempRefTasks.sort((a, b) => {\r\n                if(a.status === b.status) return 0;\r\n                return a.status > b.status ? tasksSorter.statusSorter : -tasksSorter.statusSorter;\r\n            });\r\n\r\n        if (tasksSorter.progressSorter !== 0)\r\n            tempRefTasks = tempRefTasks.sort((a, b) => {\r\n                if(a.progress === b.progress) return 0;\r\n                return a.progress > b.progress ? tasksSorter.progressSorter: -tasksSorter.progressSorter;\r\n            });\r\n\r\n        if (tempRefTasks)\r\n            renderedTask = tempRefTasks.map(task => <TaskRow key={task._id}\r\n                task={task}\r\n                setCurrentTaskId={setCurrentTaskId}\r\n            />)\r\n    }\r\n\r\n\r\n    const onMouseMoveTbody = (e) => {\r\n        if (taskToolkit.isDisplay) {\r\n            setTaskToolkit({ ...taskToolkit, isDisplay: false });\r\n\r\n        }\r\n    }\r\n    const tbodyOnMouseLick = (e) => {\r\n        e.preventDefault();\r\n        setTaskToolkit({ left: e.clientX, top: e.clientY - 35, isDisplay: true });\r\n    }\r\n    const onUpdateFilter = (name, value) => {\r\n        setTasksFilters({ ...tasksFilters, [name]: value });\r\n    }\r\n\r\n    const setSortOrder = (name, sortOrder) => {\r\n        setTasksSorter({\r\n            technicianNameSorter: 0, // -1 decrease 1 increase\r\n            reportTitleSorter: 0,\r\n            taskNameSorter: 0,\r\n            statusSorter: 0,\r\n            progressSorter: 0\r\n            , [name]: sortOrder\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className={taskModal.isDisplay ? \"modal-open container-fluid\" : \"container-fluid\"}\r\n\r\n        >\r\n            {\r\n                taskModal.isDisplay ? <TaskModal setTaskModal={setTaskModal}\r\n                    taskModal={taskModal} currentTaskId={currentTaskId} />\r\n                    : ''\r\n            }\r\n\r\n            {\r\n                taskToolkit.isDisplay ? <TaskToolkitMenu taskToolkit={taskToolkit}\r\n                    setTaskToolkit={setTaskToolkit} setTaskModal={setTaskModal} currentTaskId={currentTaskId} />\r\n                    : ''\r\n            }\r\n\r\n\r\n            <h3 className=\"text-center\">Tasks Management</h3>\r\n            <div className=\"row justify-content-center\">\r\n\r\n                <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-11\">\r\n\r\n                    <table className='table table-bordered table-hover' >\r\n                        <thead className=\"thead-dark\">\r\n                            <tr>\r\n                                <TableHeading\r\n                                    title=\"Technician\"\r\n                                    sortName=\"technicianNameSorter\"\r\n                                    setSortOrder={setSortOrder}\r\n                                    sortOrder={tasksSorter.technicianNameSorter}\r\n                                />\r\n\r\n                                <TableHeading\r\n                                    title=\"Report\"\r\n                                    sortName=\"reportTitleSorter\"\r\n                                    setSortOrder={setSortOrder}\r\n                                    sortOrder={tasksSorter.reportTitleSorter}\r\n                                />\r\n\r\n                                <TableHeading\r\n                                    title=\"Task\"\r\n                                    sortName=\"taskNameSorter\"\r\n                                    setSortOrder={setSortOrder}\r\n                                    sortOrder={tasksSorter.taskNameSorter}\r\n                                />\r\n                                <TableHeading\r\n                                    title=\"Task Status\"\r\n                                    sortName=\"statusSorter\"\r\n                                    setSortOrder={setSortOrder}\r\n                                    sortOrder={tasksSorter.statusSorter}\r\n                                />\r\n\r\n                                <TableHeading\r\n                                    title=\"Task Progress\"\r\n                                    sortName=\"progressSorter\"\r\n                                    setSortOrder={setSortOrder}\r\n                                    sortOrder={tasksSorter.progressSorter}\r\n                                />\r\n                            </tr>\r\n                            <TasksFilters UpdateFilter={onUpdateFilter} tasksFilters={tasksFilters} />\r\n                        </thead>\r\n                        <tbody onMouseMove={e => onMouseMoveTbody(e)}\r\n                            onContextMenu={e => tbodyOnMouseLick(e)}\r\n                        >\r\n                            {renderedTask}\r\n                        </tbody>\r\n                    </table>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectAllDevices, selectDeviceById } from '../devices/devicesSlice';\r\nimport { selectAllEmployees, selectEmployeeById } from '../employees/employeesSlice';\r\nimport { selectAllReports, selectReportById } from './reportsSlice';\r\n\r\nexport const AnalyzeReportForm = ({\r\n    displayModal, onNext, setReport,\r\n    currentReportId, setCurrentReportId, numberOfTasks, setNumberOfTasks }) => {\r\n\r\n    const employees = useSelector(selectAllEmployees);\r\n    const devices = useSelector(selectAllDevices);\r\n    const reports = useSelector(selectAllReports);\r\n    \r\n    const currentReport = useSelector(state =>!selectReportById(state, currentReportId)?reports[0]:selectReportById(state, currentReportId));\r\n    \r\n    const currentEmployee = useSelector(state => selectEmployeeById(state, currentReport.employee));\r\n    const currentDevice = useSelector(state => selectDeviceById(state, currentReport.device));\r\n\r\n    const [reportData, setReportData] = useState({ ...currentReport, severity: 3 });// report\r\n\r\n\r\n\r\n    const reportersOption = employees.filter(\r\n        reporter => reporter.position !== 'technician'\r\n            && reports.find(report => report.employee === reporter._id));\r\n\r\n    const renderedReporters = reportersOption.map(rep =>\r\n        <option value={rep._id} key={rep._id}>{rep.name}</option>\r\n\r\n    );\r\n\r\n    const devicesOption = devices.filter(device =>\r\n        device.employee === currentReport.employee\r\n    );\r\n\r\n    const renderedDevices = devicesOption.map(device =>\r\n        <option value={device._id} key={device._id}>{device.deviceName}</option>\r\n    );\r\n\r\n\r\n    const reportsOption = reports.filter(report =>\r\n        report.employee === currentEmployee._id\r\n        && report.device === currentDevice._id\r\n\r\n    );\r\n\r\n    const renderedReports = reportsOption.map(report =>\r\n        <option value={report._id} key={report._id}>{report.title}</option>);\r\n\r\n    const onChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        if (name === \"currentEmployee\") {\r\n            const report = reports.find(report => report.employee === value);\r\n            setCurrentReportId(report ? report._id : currentReportId);\r\n        }\r\n        if (name === 'currentDevice') {\r\n            const report = reports.find(report => report.device === value);\r\n            setCurrentReportId(report ? report._id : currentReportId);\r\n        }\r\n\r\n        if (name === 'title') {\r\n            const report = reports.find(report => report._id === value);\r\n            setCurrentReportId(report ? report._id : currentReportId);\r\n        }\r\n    }\r\n    const onNextForm = () => {\r\n        setReport(reportData);\r\n        onNext();\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"modal-body\">\r\n                <div className='input-group flex-nowrap mb-2'>\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\">Employee Name</span>\r\n                    </div>\r\n\r\n                    <select name=\"currentEmployee\" id=\"input\"\r\n                        className=\"form-control\" required=\"required\"\r\n                        value={currentEmployee._id}\r\n                        onChange={e => onChange(e)}\r\n                    >\r\n                        {renderedReporters}\r\n                    </select>\r\n\r\n                    <div className=\"input-group-append \">\r\n\r\n                    </div>\r\n                </div>\r\n                <div className='input-group flex-nowrap mb-2'>\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\">Device</span>\r\n                    </div>\r\n\r\n\r\n                    <select name=\"currentDevice\" id=\"input\"\r\n                        className=\"form-control\" required=\"required\"\r\n                        value={currentDevice._id}\r\n                        onChange={e => onChange(e)}\r\n                    >\r\n                        {renderedDevices}\r\n                    </select>\r\n\r\n                    <div className=\"input-group-append \">\r\n\r\n                    </div>\r\n                </div>\r\n                <div className='input-group flex-nowrap mb-2'>\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\">title</span>\r\n                    </div>\r\n\r\n                    <select name=\"title\" id=\"input\" className=\"form-control\" required=\"required\"\r\n                        value={currentReportId}\r\n                        onChange={e => onChange(e)}\r\n                    >\r\n                        {renderedReports}\r\n                    </select>\r\n\r\n                    <div className=\"input-group-append \">\r\n                    </div>\r\n                </div>\r\n                <div className='input-group flex-nowrap mb-2'>\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\">Report Date</span>\r\n                    </div>\r\n\r\n                    <input type=\"text\" name=\"reportDate\" id=\"reportDate\" className=\"form-control\"\r\n                        value={currentReport.reportDate === undefined ? '' : currentReport.reportDate.toString()}\r\n                        readOnly=\"readOnly\"\r\n                    />\r\n\r\n                </div>\r\n\r\n                <div className='input-group flex-nowrap mb-2'>\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\">detail</span>\r\n                    </div>\r\n                    <textarea type=\"text\" name=\"detail\" id=\"detail\" className=\"form-control\"\r\n                        rows='4'\r\n                        value={currentReport.detail}\r\n                        readOnly=\"readOnly\"\r\n                    />\r\n                    <div className=\"input-group-append \">\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='input-group flex-nowrap mb-2'>\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\">Severity</span>\r\n                    </div>\r\n\r\n                    <select name=\"severity\" className=\"form-control\" required=\"required\"\r\n                        value={reportData.severity}\r\n                        onChange={e => setReportData({ ...reportData, severity: e.target.value })}\r\n                    >\r\n                        <option value={1}>Emergency</option>\r\n                        <option value={2}>Serious</option>\r\n                        <option value={3}>not Serious</option>\r\n                    </select>\r\n\r\n                    <div className=\"input-group-append \">\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='input-group flex-nowrap mb-2'>\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\">Numof Tasks</span>\r\n                    </div>\r\n\r\n\r\n                    <input type=\"number\" name=\"numberOfTask\"\r\n                        className=\"form-control\" value={numberOfTasks}\r\n                        onChange={(e) => setNumberOfTasks(e.target.value)}\r\n                        min={1} max={10} step={1} required=\"required\" title=\"\"\r\n                    />\r\n\r\n\r\n                    <div className=\"input-group-append \">\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\"\r\n                    onClick={() => displayModal(false, 0)}\r\n                >\r\n                    Close\r\n              </button>\r\n                  &nbsp;\r\n                <button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\"\r\n                    onClick={onNextForm}\r\n                >\r\n\r\n                    Next &nbsp; <i className=\"fa fa-chevron-right\" aria-hidden=\"true\"></i>\r\n                </button>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectAllEmployees } from '../employees/employeesSlice';\r\nimport './reportsStyle.css';\r\n\r\nexport const AssignTechnicianForm = ({ displayModal, onPrevious,setTasks ,onNext, numberOfTasks, currentReportId }) => {\r\n\r\n    const employees = useSelector(selectAllEmployees);\r\n    const techniciansOption = employees.filter(tech => tech.position === 'technician');\r\n\r\n    const [techniqueOption, setTechniqueOption] = useState('all');\r\n    const [technicians, setTechnicians] = useState(techniciansOption);\r\n\r\n    const [currentTechnician, setCurrentTechncian] = useState(technicians[0]);\r\n    const [currentTask, setCurrentTask] = useState(\r\n        {\r\n            report: currentReportId,\r\n            taskName: '',\r\n            detail: '',\r\n        }\r\n    );\r\n  \r\n    const [assignedTasks, setAssignedTasks] = useState([]);\r\n    const [validation, setValidation] = useState(false);\r\n\r\n    const renderedTechnicians = technicians.map(tech =>\r\n        <option value={tech.name} key={tech._id}>{tech.name}</option>);\r\n\r\n\r\n    const [assignStep, setAssignStep] = useState(0);\r\n\r\n\r\n    useEffect(() => {\r\n        if (currentTask.taskName === '') setValidation(false);\r\n        else setValidation(true);\r\n\r\n    }, [currentTask])\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        if (techniqueOption === 'all') {\r\n            setTechnicians(techniciansOption);\r\n        }\r\n        else {\r\n            const option =  techniciansOption.filter(tech => tech.technique === techniqueOption);\r\n            if(option && option.length > 0){\r\n                \r\n                setTechnicians(option);\r\n            }else{\r\n                setTechniqueOption('all');\r\n            }\r\n        }\r\n    \r\n    }, [techniqueOption]);\r\n\r\n    useEffect(()=>{\r\n        setCurrentTechncian(technicians[0]);\r\n    },[technicians])\r\n\r\n    const onAssign = () => {\r\n        if (assignStep < numberOfTasks) {\r\n\r\n            setAssignedTasks([...assignedTasks, \r\n                {\r\n                ...currentTask,\r\n                technicianId: currentTechnician._id, technicianName: currentTechnician.name,\r\n                }\r\n            ]\r\n            );\r\n            setAssignStep(assignStep + 1);\r\n        }\r\n    }\r\n\r\n    const onReduce = (value) => {\r\n        if (assignStep > 0) {\r\n            setAssignedTasks(assignedTasks.filter(e => e.taskName !== value));\r\n\r\n            setAssignStep(assignStep - 1);\r\n        }\r\n    }\r\n\r\n    const nextForm = () =>{\r\n        setTasks(assignedTasks);\r\n        onNext();\r\n    } \r\n\r\n    const renderedTasks = assignedTasks.map(task => {\r\n        return (\r\n            <tr key={task.taskName} className='d-flex'>\r\n                <td className='col-6'>{task.technicianName}</td>\r\n                <td className='col-5'>{task.taskName}</td>\r\n                <td className='col-1' id=\"remove-task-icon\">\r\n                    <i className=\"fa fa-times-circle-o\"  aria-hidden=\"true\"\r\n                        onClick={() => onReduce(task.taskName)}\r\n                    ></i>\r\n                </td>\r\n            </tr>);\r\n    }\r\n    );\r\n\r\n    const onSetCurrentTechnician = (value) => {\r\n        setCurrentTechncian(techniciansOption.find(tech => tech.name === value));\r\n        // setTechniqueOption(currentTechnician.technique);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"modal-body\">\r\n                <div className='input-group flex-nowrap mb-2'>\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\">Technician</span>\r\n                    </div>\r\n\r\n                    <select name=\"technician\" id=\"input\" className=\"form-control\" required=\"required\"\r\n                        value={currentTechnician.name}\r\n\r\n                        onChange={e => {\r\n                            onSetCurrentTechnician(e.target.value);\r\n                        }}\r\n                    >\r\n                        {renderedTechnicians}\r\n                    </select>\r\n                </div>\r\n                <div className=\"input-group flex-nowrap mb-2\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\">Technique</span>\r\n                    </div>\r\n                    <select className=\"form-control\" name=\"technique\" id=\"position\"\r\n                        value={techniqueOption}\r\n                        onChange={(e) => {\r\n                            if (e.target.value !== techniqueOption)\r\n                                setTechniqueOption(e.target.value)\r\n                        }}\r\n                    >\r\n                        <option value=\"all\">All</option>\r\n                        <option value=\"hardware\">Hardware</option>\r\n                        <option value=\"software\">Software</option>\r\n                        <option value=\"network\">Network</option>\r\n\r\n\r\n                    </select>\r\n                </div>\r\n                <div className=\"input-group flex=nowrap mb-2\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\">Task Name</span>\r\n                    </div>\r\n\r\n                    <input type=\"text\" name=\"taskName\" id=\"input\" className=\"form-control\" required=\"required\"\r\n                        value={currentTask.taskName}\r\n                        onChange={e => setCurrentTask({ ...currentTask, taskName: e.target.value })}\r\n                    />\r\n\r\n\r\n                </div>\r\n                <div className=\"input-group flex=nowrap mb-2\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\">Detail</span>\r\n                    </div>\r\n\r\n                    <textarea type=\"text\" name=\"taskDetail\" id=\"input\"\r\n                        className=\"form-control\" required=\"required\"\r\n                        rows={4}\r\n                        value={currentTask.detail}\r\n                        onChange={e => setCurrentTask({ ...currentTask, detail: e.target.value })}\r\n                    />\r\n\r\n\r\n                </div>\r\n                {assignStep === 0 ? '' :\r\n                    <table className=\"table table-bordered table-hover assign-table\">\r\n                        <thead>\r\n                            <tr className='d-flex'>\r\n                                <th className='col-6'>Technician</th>\r\n                                <th className='col-5'>Task</th>\r\n                                <th className='col-1'></th>\r\n\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"overflow-auto\">\r\n                            {renderedTasks}\r\n                        </tbody>\r\n                    </table>\r\n                }\r\n                <div className=\"progress\">\r\n                    <div className=\"progress-bar\" role=\"progressbar\"\r\n                        style={{ width: `${parseFloat(assignStep / numberOfTasks) * 100}%` }}\r\n                        aria-valuenow={parseFloat(assignStep / numberOfTasks) * 100} aria-valuemin=\"0\" aria-valuemax=\"100\">\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\"\r\n                    onClick={() => displayModal(false, 0)}\r\n                >\r\n                    Close\r\n                    </button>\r\n                        &nbsp;\r\n                     <button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\"\r\n                    onClick={onPrevious}\r\n                >\r\n\r\n                    <i className=\"fa fa-chevron-left\" aria-hidden=\"true\"></i> &nbsp; Previous\r\n                    </button>\r\n                <button type=\"button\" \r\n                    className={assignStep < numberOfTasks ? \"btn btn-warning\" : \"btn btn-primary\"} \r\n                    data-dismiss=\"modal\"\r\n                    onClick={assignStep < numberOfTasks ? onAssign : nextForm}\r\n                    disabled={!validation}\r\n                >\r\n                    {assignStep < numberOfTasks ? 'Assign' : 'Next'}\r\n                    &nbsp;\r\n                    {assignStep < numberOfTasks ? <i className=\"fa fa-check-square-o\" aria-hidden=\"true\"></i>\r\n                        : <i className=\"fa fa-chevron-right\" aria-hidden=\"true\"></i>}\r\n\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectEmployeeById } from '../employees/employeesSlice';\r\nimport { selectReportById } from './reportsSlice';\r\n\r\nexport const CommitAndSaveForm = ({ displayModal, onSave, employeeId, reportId, tasks, loadingStatus }) => {\r\n\r\n    const report = useSelector(state => selectReportById(state, reportId));\r\n    \r\n    const employeeName = useSelector(state => selectEmployeeById(state, employeeId)).name;\r\n\r\n    const renderedTasks = tasks.map(task => {\r\n        return (\r\n            <tr key={task.taskName} className='d-flex'>\r\n                <td className='col-6'>{task.technicianName}</td>\r\n                <td className='col-6'>{task.taskName}</td>\r\n\r\n            </tr>);\r\n    }\r\n    );\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"modal-body\">\r\n\r\n                <div className='input-group flex-nowrap mb-2'>\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\">Employee Name</span>\r\n                    </div>\r\n\r\n                    <input name=\"currentEmployee\" id=\"input\" className=\"form-control\" required=\"required\"\r\n                        readOnly=\"readOnly\"\r\n                        value={employeeName}\r\n                    >\r\n                    </input>\r\n\r\n                    <div className=\"input-group-append \">\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='input-group flex-nowrap mb-2'>\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\">Report Title</span>\r\n                    </div>\r\n\r\n                    <input name=\"currentEmployee\" id=\"input\" className=\"form-control\" required=\"required\"\r\n                        readOnly=\"readOnly\"\r\n                        value={report.title}\r\n                    >\r\n                    </input>\r\n\r\n                    <div className=\"input-group-append \">\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <table className=\"table table-bordered table-hover\" >\r\n                    <thead>\r\n                        <tr className='d-flex'>\r\n                            <th className='col-6'>Technician</th>\r\n                            <th className='col-6'>Task</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"overflow-auto\" style={{ height: 'auto' }}>\r\n                        {renderedTasks}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\"\r\n                    onClick={() => displayModal(false, 0)}\r\n                >\r\n                    Close\r\n              </button>\r\n                  &nbsp;\r\n                <button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\"\r\n                    onClick={onSave}\r\n                >\r\n                    {loadingStatus ? <i className=\"fa fa-circle-o-notch fa-spin\"></i> : \"\"}&nbsp;Save\r\n                </button>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectAllEmployees, selectEmployeeById, selectEmployees } from '../employees/employeesSlice';\r\nimport { selectAllDevices, selectDeviceById } from '../devices/devicesSlice';\r\nimport { fetchReports, selectAllReports, selectReport, selectReportById, updateReport } from './reportsSlice';\r\nimport './reportsStyle.css';\r\nimport { AnalyzeReportForm } from './AnalyzeReportForm';\r\nimport { AssignTechnicianForm } from './AssignTechnicianForm';\r\nimport { CommitAndSaveForm } from './CommitAndSaveForm';\r\nimport { addNewTask, selectAllTasks } from '../tasks/tasksSlice';\r\nexport const EditReportForm = ({ currentReportId,setCurrentReportId, displayModal }) => {\r\n    \r\n    const [numberOfTasks, setNumberOfTasks] = useState(1);\r\n    const [loadingStatus, setLoadingStatus] = useState(false);\r\n    const [step, setStep] = useState(0);\r\n    const [tasks, setTasks] = useState();\r\n    const [report, setReport] = useState();\r\n    const dispatch = useDispatch();\r\n\r\n    const onNext = () => {\r\n        if (step <= 2)\r\n            setStep(step + 1);\r\n    }\r\n\r\n    const onPrevious = () => {\r\n        if (step >= 1)\r\n            setStep(step - 1)\r\n    }\r\n    const onSave = () => {\r\n\r\n        setLoadingStatus(true);\r\n        dispatch(updateReport({ ...report,_id:report._id, status: 1 }))\r\n            .then(() => {\r\n                tasks.forEach(task => {\r\n                    dispatch(addNewTask({\r\n                        report: task.report, taskName: task.taskName,\r\n                        technician: task.technicianId, detail: task.detail, status: 0,\r\n                        progress: 0\r\n                    }));\r\n                })\r\n                setLoadingStatus(false);\r\n                displayModal(false, 0);\r\n                dispatch(fetchReports());\r\n            })\r\n            .catch(error => alert(error));\r\n\r\n    }\r\n\r\n    let reportBody;\r\n    \r\n    if (step === 0) {\r\n        reportBody = (\r\n\r\n            <AnalyzeReportForm\r\n                displayModal={displayModal} onNext={onNext}\r\n                onPrevious={onPrevious} setCurrentReportId={setCurrentReportId}\r\n                setNumberOfTasks={setNumberOfTasks} numberOfTasks={numberOfTasks}\r\n                currentReportId={currentReportId} setReport={setReport}\r\n            />\r\n        );\r\n    } else if (step === 1) {\r\n        reportBody = <AssignTechnicianForm\r\n            numberOfTasks={numberOfTasks}\r\n            displayModal={displayModal}\r\n            onNext={onNext}\r\n            onPrevious={onPrevious}\r\n            setTasks={setTasks}\r\n            currentReportId={currentReportId}\r\n            tasks={tasks}\r\n\r\n        />\r\n\r\n    } else if (step === 2) {\r\n        reportBody = <CommitAndSaveForm \r\n            employeeId={report.employee} reportId={report._id} tasks={tasks}\r\n            displayModal={displayModal} onSave={onSave} loadingStatus={loadingStatus}\r\n\r\n        />\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {reportBody}\r\n\r\n        </div>\r\n    );\r\n\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { EditReportForm } from './EditReportForm';\r\n\r\nexport const ReportModal = ({ currentReportId, modalOption, displayModal, setCurrentReportId }) => {\r\n\r\n    const onCloseModalCheckly = (e) => {\r\n        const mouseX = e.clientX;\r\n        const mouseY = e.clientY;\r\n        const modal = document.getElementById(\"taskModalContent\");\r\n        const modalBoundary = modal.getBoundingClientRect();\r\n        if (mouseX === 0 || mouseY === 0);\r\n        else\r\n            if (mouseX < modalBoundary.left || mouseX > modalBoundary.right ||\r\n                mouseY < modalBoundary.top || mouseY > modalBoundary.bottom) {\r\n\r\n                displayModal(false, 1);\r\n            }\r\n\r\n    }\r\n        \r\n    const OptionnedContent = () => {\r\n        if (modalOption === 1)\r\n            return <EditReportForm\r\n                currentReportId={currentReportId} displayModal={displayModal}\r\n                setCurrentReportId={setCurrentReportId}\r\n            />\r\n        return '';\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"modal fade show\"\r\n            style=\r\n            {{\r\n                display: 'block'\r\n            }}\r\n            id=\"taskModal\"\r\n            tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"taskModalTitle\" aria-hidden=\"true\"\r\n            onClick={(e) => { onCloseModalCheckly(e) }}\r\n\r\n        >\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n                <div className=\"modal-content\" id=\"taskModalContent\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\" id=\"taskModalTitle\">{modalOption === 0 ? 'Add New Report' : 'Analyze Report'}</h5>\r\n                        <button type=\"button\" className=\"close\" data- dismiss=\"modal\" aria-label=\"Close\"\r\n                            onClick={() => displayModal(false, 0)}\r\n                        >\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    {OptionnedContent()}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectDeviceById } from '../devices/devicesSlice';\r\nimport { selectEmployeeById } from '../employees/employeesSlice';\r\nimport { selectReportById } from './reportsSlice';\r\n\r\n\r\nexport const ReportRow = ({ report, setCurrentReport }) => {\r\n\r\n   \r\n    const employeeName = useSelector(state =>\r\n        selectEmployeeById(state, report.employee) ? selectEmployeeById(state, report.employee) : { name: '' }).name;\r\n    const deviceName = useSelector(state =>\r\n        selectDeviceById(state, report.device) ? selectDeviceById(state, report.device) : { deviceName: '' }).deviceName;\r\n\r\n    const onClickOver = (e) => {\r\n        e.preventDefault();\r\n        setCurrentReport(report._id);\r\n    }\r\n\r\n    const ReportStatus = (status) => {\r\n        if (status === 0) { return <span className=\"badge badge-pill badge-danger\">New</span>; }\r\n        if (status === 1) { return <span className=\"badge badge-pill badge-primary\">Solving</span>; }\r\n        if (status === 2) { return <span className=\"badge badge-pill badge-success\">Solved</span>; }\r\n\r\n    }\r\n    return (\r\n        <tr onContextMenu={e => onClickOver(e)}>\r\n            <td>{employeeName}</td>\r\n            <td>{deviceName}</td>\r\n            <td>{report.title}</td>\r\n            <td>{report.reportDate ? report.reportDate.toString() : ''}</td>\r\n            <td>{ReportStatus(report.status)}</td>\r\n        </tr>\r\n    );\r\n}","import React, { useState } from 'react';\r\n\r\nexport const ReportsFilters = ({ updateReportFilters, filters }) => {\r\n\r\n\r\n    const onChange = (e) => {\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        updateReportFilters(name, value);\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n            <td>\r\n                <input type=\"text\" className=\"form-control\"\r\n                    name=\"employeeNameFilter\" id=\"employeeNameFilter\"\r\n                    placeholder=\"searching id\"\r\n                    value={filters.employeeNameFilter}\r\n                    onChange={(e) => onChange(e)}\r\n                />\r\n            </td>\r\n            <td>\r\n                <input type=\"text\" className=\"form-control\"\r\n                    name=\"deviceNameFilter\" id=\"deviceNameFilter\"\r\n                    placeholder=\"searching device\"\r\n                    value={filters.deviceNameFilter}\r\n                    onChange={e => onChange(e)}\r\n                />\r\n            </td>\r\n\r\n            <td>\r\n                <input type=\"text\" className=\"form-control\"\r\n                    name=\"reportTitleFilter\" id=\"reportTitleFilter\"\r\n                    placeholder=\"searching title\"\r\n                    value={filters.reportTitleFilter}\r\n                    onChange={e => onChange(e)}\r\n                />\r\n            </td>\r\n\r\n            <td>\r\n                <input type=\"text\" className=\"form-control\"\r\n                    name=\"reportDateFilter\" id=\"reportDateFilter\"\r\n                    placeholder=\"searching date\"\r\n                    value={filters.reportDateFilter}\r\n                    onChange={e => onChange(e)}\r\n                />\r\n            </td>\r\n\r\n            <td>\r\n                <select className=\"form-control\" name=\"reportStatusFilter\" id=\"reportStatusFilter\"\r\n                    value={filters.reportStatusFilter}\r\n                    onChange={e => onChange(e)} >\r\n                    <option value={-1}>all</option>\r\n                    <option value={0}>new</option>\r\n                    <option value={1}>solving</option>\r\n                    <option value={2}>solved</option>\r\n                </select>\r\n            </td>\r\n        </tr>\r\n    );\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { checkReportStatus, deleteReport} from './reportsSlice';\r\nexport const ReportsToolkitMenu = ({displayToolbar, displayModal,currentReportId, toolbar}) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { top, left, isDisplay } = toolbar;\r\n\r\n    \r\n    const onEditReport = () => {\r\n        displayToolbar(false);\r\n        displayModal(true, 1);\r\n    }\r\n    const onDeleteReport = () =>{\r\n        checkReportStatus(currentReportId)\r\n        .then(status =>{\r\n            \r\n            if(status === 0){\r\n                dispatch(deleteReport(currentReportId));\r\n                \r\n            }\r\n            else {\r\n                alert('cannot delete Report');\r\n            }\r\n        })\r\n        .catch(error => alert(error));\r\n        displayToolbar(false);\r\n        \r\n    }\r\n    return (\r\n        <span className=\"menu-toolbar\" style={{ top: top, left: left, display: isDisplay ? 'block' : 'none' }}>\r\n            \r\n            {currentReportId?<button type=\"button\" className=\"btn btn-success\"\r\n                onClick={onEditReport}\r\n            >\r\n                <i className=\"fa fa-pencil-square-o reg-icon\" aria-hidden=\"true\">\r\n                </i>\r\n            </button>:''}\r\n            &nbsp;\r\n            \r\n            {currentReportId?<button type=\"button\" className=\"btn btn-danger\" onClick={onDeleteReport}>\r\n                <i className=\"fa fa-trash reg-icon\" aria-hidden=\"true\"></i>    \r\n            </button>:''}\r\n                       \r\n        </span>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ReportModal } from './ReportModal';\r\nimport { ReportRow } from './ReportRow';\r\nimport { ReportsFilters } from './ReportsFilters';\r\nimport { ReportsToolkitMenu } from './ReportsToolkitMenu';\r\nimport { fetchReports, selectAllReports, selectReportIds } from './reportsSlice';\r\nimport { fetchDevices, selectAllDevices } from '../devices/devicesSlice';\r\nimport { fetchEmployees, selectAllEmployees } from '../employees/employeesSlice';\r\nimport { TableHeading } from '../../unities/TableHeading';\r\n\r\nexport const ReportsPage = () => {\r\n\r\n    const reportStatus = useSelector(state => state.reports.status);\r\n    const deviceStatus = useSelector(state => state.devices.status);\r\n    const employeeStatus = useSelector(state => state.employees.status);\r\n    const employees = useSelector(selectAllEmployees);\r\n    const devices = useSelector(selectAllDevices);\r\n    const error = useSelector(state => state.reports.error);\r\n    const dispatch = useDispatch();\r\n    const [content, setContent] = useState();\r\n    const [isUpdate, setUpdate] = useState(false);\r\n    let renderedReports;\r\n    useEffect(() => {\r\n        if (deviceStatus === 'idle') {\r\n            dispatch(fetchDevices());\r\n        }\r\n    }, [deviceStatus, dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (employeeStatus === 'idle') {\r\n\r\n            dispatch(fetchEmployees());\r\n        }\r\n    }, [dispatch, employeeStatus])\r\n    useEffect(() => {\r\n\r\n        if (reportStatus === 'idle') {\r\n\r\n            dispatch(fetchReports());\r\n        }\r\n\r\n    }, [dispatch, reportStatus]);\r\n\r\n    const reports = useSelector(selectAllReports);\r\n\r\n    const [filters, setFilters] = useState({\r\n        employeeNameFilter: '',\r\n        deviceNameFilter: '',\r\n        reportTitleFilter: '',\r\n        reportDateFilter: '',\r\n        reportStatusFilter: -1,\r\n    });\r\n\r\n    const [reportsSorters, setReportsSorters] = useState({\r\n        employeeNameSorter: 0,\r\n        deviceNameSorter: 0,\r\n        reportTitleSorter: 0,\r\n        reportDateSorter: 0,\r\n        reportStatusSorter: 0,\r\n\r\n    });\r\n\r\n    const setSortOrder = (name, value) => {\r\n        setReportsSorters({\r\n            employeeNameSorter: 0,\r\n            deviceNameSorter: 0,\r\n            reportTitleSorter: 0,\r\n            reportDateSorter: 0,\r\n            reportStatusSorter: 0,\r\n            [name]: value\r\n        });\r\n        console.log(reportsSorters);\r\n    }\r\n    const [toolbar, setToolbar] = useState({\r\n        top: 0,\r\n        left: 0,\r\n        isDisplay: false,\r\n        toolbarOption: 0,/// 0 : add new Report, 1 : analyze, 2: delete,\r\n    });\r\n    const [reportModal, setReportModal] = useState({\r\n        isModalDisplayed: false,\r\n        modalOption: 1, /// 0 : add new Report, 1 : analyze, 2: delete,\r\n        currentReportId: '',\r\n    });\r\n\r\n    useEffect(() => {\r\n        setUpdate(true);\r\n    }, [reports])\r\n\r\n\r\n\r\n    if (employeeStatus === 'succeeded' && deviceStatus === 'succeeded' && reportStatus === 'succeeded') {\r\n        if (isUpdate) {\r\n            setContent(reports.map(report => ({\r\n                ...report,\r\n                employeeName: employees.find(emp => emp._id === report.employee).name,\r\n                deviceName: devices.find(device => device._id === report.device).deviceName,\r\n            })));\r\n            setUpdate(false);\r\n        }\r\n\r\n    } else if (employeeStatus === 'failed' || deviceStatus === 'failed' || reportStatus === 'failed') {\r\n        renderedReports = <div>{error}</div>\r\n    } else if (employeeStatus === 'loading' || deviceStatus === 'loading' || reportStatus === 'loading') {\r\n        renderedReports = <div className=\"spinner-border\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </div>\r\n    }\r\n\r\n    var tempReports = Object.assign([], content);\r\n\r\n\r\n    if (tempReports.length > 0) {\r\n        if (filters.employeeNameFilter) {\r\n            tempReports = tempReports.filter((report) => {\r\n                return report.employeeName.toLowerCase().indexOf(filters.employeeNameFilter.toLowerCase()) !== -1;\r\n            });\r\n        }\r\n\r\n        if (filters.deviceNameFilter) {\r\n            tempReports = tempReports.filter((report) => {\r\n                return report.deviceName.toLowerCase().indexOf(filters.deviceNameFilter.toLowerCase()) !== -1;\r\n            });\r\n        }\r\n        if (filters.reportTitleFilter) {\r\n            tempReports = tempReports.filter((report) => {\r\n                return report.title.toLowerCase().indexOf(filters.reportTitleFilter.toLowerCase()) !== -1;\r\n            });\r\n        }\r\n\r\n        if (filters.reportDateFilter) {\r\n            tempReports = tempReports.filter((report) => {\r\n                return report.reportDate.toString().indexOf(filters.reportDateFilter.toLowerCase()) !== -1;\r\n            });\r\n        }\r\n        if (parseInt(filters.reportStatusFilter) !== -1)\r\n            tempReports = tempReports.filter((report) => {\r\n\r\n                return report.status === parseInt(filters.reportStatusFilter);\r\n            });\r\n\r\n        if (reportsSorters.employeeNameSorter !== 0)\r\n            tempReports = tempReports.sort((a, b) => {\r\n                if (a.employeeName === b.employeeName) return 0;\r\n                return a.employeeName > b.employeeName ? reportsSorters.employeeNameSorter : - reportsSorters.employeeNameSorter;\r\n            });\r\n\r\n        if (reportsSorters.deviceNameSorter !== 0)\r\n            tempReports = tempReports.sort((a, b) => {\r\n                if (a.deviceName === b.deviceName) return 0;\r\n                return a.deviceName > b.deviceName ? reportsSorters.deviceNameSorter : - reportsSorters.deviceNameSorter;\r\n            });\r\n\r\n        if (reportsSorters.reportTitleSorter !== 0)\r\n            tempReports = tempReports.sort((a, b) => {\r\n                if (a.title === b.title) return 0;\r\n                return a.title > b.title ? reportsSorters.reportTitleSorter : - reportsSorters.reportTitleSorter\r\n            });\r\n\r\n        if (reportsSorters.reportDateSorter !== 0)\r\n            tempReports = tempReports.sort((a, b) => {\r\n                if (a.reportDate.localeCompare(b.reportDate) === 0) return 0;\r\n                return a.reportDate.localeCompare(b.reportDate) > 0 ? reportsSorters.reportDateSorter : - reportsSorters.reportDateSorter\r\n            });\r\n\r\n        if (reportsSorters.reportStatusSorter !== 0)\r\n            tempReports = tempReports.sort((a, b) => {\r\n                if (a.status === b.status) return 0;\r\n                return a.status > b.status ? reportsSorters.reportStatusSorter : -reportsSorters.reportStatusSorter;\r\n            });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    const onUpdateReportFilters = (name, value) => {\r\n        setFilters({\r\n            ...filters,\r\n            [name]: value\r\n        });\r\n    }\r\n    const onMouseMoveTbody = (e) => {\r\n        if (toolbar.isDisplay === true) {\r\n\r\n            setToolbar({ ...toolbar, isDisplay: false });\r\n        }\r\n    }\r\n    const tbodyOnMouseLick = (e) => {\r\n        e.preventDefault();\r\n        setToolbar({ ...toolbar, isDisplay: true, top: e.clientY - 35, left: e.clientX });\r\n    }\r\n\r\n    const onSetCurrentReport = (reportId) => {\r\n        setReportModal({ ...reportModal, currentReportId: reportId });\r\n    }\r\n\r\n    const onDisplayToolbar = (isDisplay) => {\r\n        setToolbar({ ...toolbar, isDisplay: isDisplay });\r\n    }\r\n    const onDisplayModal = (isModalDisplayed, modalOption) => {\r\n\r\n        setReportModal({\r\n            ...reportModal,\r\n            isModalDisplayed: isModalDisplayed,\r\n            modalOption: modalOption, /// 0 : add new Report, 1 : analyze, 2: delete,\r\n\r\n        });\r\n    }\r\n\r\n    if (tempReports.length > 0)\r\n        renderedReports = tempReports.map(report =>\r\n            <ReportRow\r\n                report={report}\r\n                key={report._id}\r\n                setCurrentReport={onSetCurrentReport}\r\n            />\r\n\r\n        );\r\n\r\n    return (\r\n        <div className={reportModal.isModalDisplayed ? \"modal-open container-fluid\" : \"container-fluid\"}\r\n        >\r\n            {\r\n                toolbar.isDisplay ?\r\n                    <ReportsToolkitMenu\r\n                        toolbar={toolbar}\r\n                        displayToolbar={onDisplayToolbar} displayModal={onDisplayModal}\r\n                        currentReportId={reportModal.currentReportId}\r\n                    />\r\n                    : ''\r\n            }\r\n            {\r\n                reportModal.isModalDisplayed ?\r\n                    <ReportModal\r\n                        currentReportId={reportModal.currentReportId}\r\n                        displayModal={onDisplayModal}\r\n                        modalOption={reportModal.modalOption}\r\n                        setCurrentReportId={onSetCurrentReport}\r\n                    />\r\n                    : ''\r\n            }\r\n            <h3 className=\"text-center\">Report Management</h3>\r\n            <div className=\"row justify-content-center\">\r\n\r\n                <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-11\">\r\n\r\n                    <table className='table table-bordered table-hover' >\r\n                        <thead className=\"thead-dark\">\r\n                            <tr>\r\n                                <TableHeading title=\"Employee Name\"\r\n                                    sortName=\"employeeNameSorter\" sortOrder={reportsSorters.employeeNameSorter}\r\n                                    setSortOrder={setSortOrder}\r\n                                />\r\n                                <TableHeading title=\"Device Name\"\r\n                                    sortName=\"deviceNameSorter\" sortOrder={reportsSorters.deviceNameSorter}\r\n                                    setSortOrder={setSortOrder}\r\n                                />\r\n                                <TableHeading title=\"Title\"\r\n                                    sortName=\"reportTitleSorter\" sortOrder={reportsSorters.reportTitleSorter}\r\n                                    setSortOrder={setSortOrder}\r\n                                />\r\n                                <TableHeading title=\"Report Date\"\r\n                                    sortName=\"reportDateSorter\" sortOrder={reportsSorters.reportDateSorter}\r\n                                    setSortOrder={setSortOrder}\r\n                                />\r\n                                <TableHeading title=\"Report Date\"\r\n                                    sortName=\"reportStatusSorter\" sortOrder={reportsSorters.reportStatusSorter}\r\n                                    setSortOrder={setSortOrder}\r\n                                />\r\n                            </tr>\r\n\r\n                            <ReportsFilters updateReportFilters={onUpdateReportFilters} filters={filters} />\r\n                        </thead>\r\n                        <tbody onMouseMove={e => onMouseMoveTbody(e)}\r\n                            onContextMenu={e => tbodyOnMouseLick(e)}\r\n                        >\r\n                            {renderedReports}\r\n                        </tbody>\r\n                    </table>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { client } from '../../api/client';\r\n\r\n\r\nexport const fetchUser = createAsyncThunk('user/fetchUser', async (id)=>{\r\n    const response = await client.get(`api/employees/${id}`);\r\n    \r\n    return response.employee;\r\n});\r\nexport const updateUser = createAsyncThunk('user/updateUser', async (employee) =>{\r\n    const response = await client.put(`api/employees/${employee._id}`, {employee: employee});\r\n    return response.employee;\r\n});\r\n\r\nconst initialState = {\r\n   user:{},\r\n   status: 'idle',\r\n   error: null,\r\n};\r\n\r\nconst userSlice = createSlice({\r\n    name:'user',\r\n    initialState,\r\n    reducers:{\r\n        userUpdated : (state, action) =>{\r\n            state = action.payload;\r\n            return state;\r\n        }\r\n\r\n    },\r\n    extraReducers:{\r\n        [fetchUser.fulfilled]:(state, action)=>{\r\n            state.user = action.payload;\r\n            state.status = 'succeeded';\r\n        },\r\n        [fetchUser.pending] :(state, action) =>{\r\n            state.status = 'loading';\r\n        },\r\n        [fetchUser.rejected] :(state, action) =>{\r\n            state.status = 'failed';\r\n        },\r\n        [updateUser.fulfilled]:(state, action)=>{\r\n            state.user = action.payload;\r\n        }\r\n    }\r\n});\r\n\r\nexport const {userUpdated,} = userSlice.actions;\r\nexport const selectUser = state => state.user.user;\r\nexport default userSlice.reducer;","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectUser, userUpdated, fetchUser, updateUser } from './userSlice';\r\nimport './style.css';\r\nimport { checkMail } from '../employees/employeesSlice';\r\n\r\nconst cookie = document.cookie.split(';')\r\n  .map(cookie => cookie.split('='))\r\n  .reduce((accumulator, [key, value]) => ({ ...accumulator, [key.trim()]: decodeURIComponent(value) }),\r\n    {});\r\n\r\n\r\nexport const DisplayUserForm = (props) => {\r\n\r\n\r\n  const inititaluser = useSelector(selectUser);\r\n  const userStatus = useSelector(state => state.user.status);\r\n  const [isEmailUpdated, setIsEmailUpdated] = useState(-1);\r\n  const [user, setUser] = useState({\r\n    _id: '',\r\n    name: '',\r\n    address: '',\r\n    email: '',\r\n    phoneNumber: '',\r\n    birthDate: '',\r\n    position: ''\r\n  });\r\n\r\n  const [loadingStatus, setLoadingStatus] = useState(false);\r\n\r\n  const [inputStatus, setInputStatus] = useState({\r\n    nameInputStatus: true,\r\n    addressInputStatus: true,\r\n    phoneNumberInputStatus: true,\r\n    emailInputStatus: true,\r\n    birthDateInputState: true,\r\n  });\r\n  const [emailValidation, setEmailValidation] = useState(true);\r\n  const dispatch = useDispatch();\r\n\r\n  const onClickCancel = () => {\r\n    setUser(inititaluser);\r\n    onClockInputs();\r\n    setEmailValidation(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (userStatus === 'idle') {\r\n      dispatch((fetchUser(cookie.loadingToken)));\r\n\r\n    }\r\n    if (userStatus === 'succeeded') {\r\n      setUser(inititaluser);\r\n      setIsEmailUpdated(0);\r\n    }\r\n\r\n  }, [dispatch, inititaluser, userStatus]);\r\n\r\n  useEffect(() => {\r\n    if (user.email.localeCompare(inititaluser.email) !== 0 && isEmailUpdated === 0) {\r\n      setIsEmailUpdated(1);\r\n    }\r\n  }, [user.email])\r\n\r\n  const onSave = () => {\r\n    setLoadingStatus(true);\r\n    if (isEmailUpdated)\r\n      checkMail(user.email)\r\n        .then(error => {\r\n          if (error === 'invalid_email') {\r\n            setLoadingStatus(false);\r\n            setEmailValidation(false);\r\n            setIsEmailUpdated(0);\r\n            setUser({...user, email: inititaluser.email});\r\n          } else if (error === 'valid_email') {\r\n            dispatch(updateUser(user))\r\n              .then(() => {\r\n                setLoadingStatus(false);\r\n                setEmailValidation(true);\r\n                setIsEmailUpdated(0);\r\n              });\r\n          }\r\n        })\r\n        .catch(error => {\r\n          alert(error);\r\n          setEmailValidation(false);\r\n          setIsEmailUpdated(0);\r\n          setUser({...user, email: inititaluser.email});\r\n        });\r\n    else {\r\n      dispatch(updateUser(user))\r\n        .then(() => {\r\n          setLoadingStatus(false);\r\n        })\r\n        .catch(err=> alert(err));\r\n    }\r\n  \r\n  onClockInputs();\r\n}\r\nconst onClockInputs = () => {\r\n  setInputStatus({\r\n    nameInputStatus: true,\r\n    addressInputStatus: true,\r\n    phoneNumberInputStatus: true,\r\n    emailInputStatus: true,\r\n    birthDateInputState: true,\r\n  });\r\n}\r\nconst onChange = (e) => {\r\n  let name = e.target.name;\r\n  let value = e.target.value;\r\n  if(name=== 'birthDate'){\r\n    setUser({...user, birthDate: value.toLocaleString()})\r\n  }\r\n  setUser({ ...user, [name]: value });\r\n\r\n}\r\n\r\nreturn (\r\n  <div className=\"card\" >\r\n    <div className=\"card-header\">\r\n      Your usermation\r\n      </div>\r\n    <div className=\"card-body\">\r\n      <div className=\"input-group flex-nowrap mb-2\">\r\n        <div className=\"input-group-prepend\">\r\n          <span className=\"input-group-text\" id=\"addon-wrapping\">ID</span>\r\n        </div>\r\n        <input type=\"text\" className=\"form-control\" id='_id' name='_id' readOnly={true}\r\n\r\n          value={user._id} aria-label=\"ID\" />\r\n      </div>\r\n\r\n      <div className=\"input-group flex-nowrap mb-2\">\r\n        <div className=\"input-group-prepend\">\r\n          <span className=\"input-group-text\" >Name</span>\r\n        </div>\r\n        <input type=\"text\" className=\"form-control\"\r\n          aria-label=\"Name\" id=\"name\" name=\"name\"\r\n          readOnly={inputStatus.nameInputStatus}\r\n          onDoubleClick={() => { setInputStatus({ ...inputStatus, nameInputStatus: !inputStatus.nameInputStatus }) }}\r\n          value={user.name}\r\n          onChange={e => onChange(e)}\r\n        />\r\n        <div className=\"input-group-appennd\">\r\n          <i className=\"fa fa-pencil  input-group-text reg-icon\" aria-hidden=\"true\"\r\n            onClick={() => { setInputStatus({ ...inputStatus, nameInputStatus: !inputStatus.nameInputStatus }) }}\r\n          >\r\n          </i>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div className=\"input-group flex-nowrap mb-2\">\r\n        <div className=\"input-group-prepend\">\r\n          <label className=\"input-group-text\">Adress</label>\r\n        </div>\r\n        <input type=\"text\"\r\n          className=\"form-control \"\r\n          id=\"address\" name=\"address\" readOnly={inputStatus.addressInputStatus}\r\n          onDoubleClick={() => setInputStatus({ ...inputStatus, addressInputStatus: !inputStatus.addressInputStatus })}\r\n\r\n          value={user.address}\r\n          onChange={e => onChange(e)} />\r\n        <div className=\"input-group-appennd\">\r\n          <i className=\"fa fa-pencil input-group-text reg-icon\" aria-hidden=\"true\"\r\n            onClick={() => { setInputStatus({ ...inputStatus, addressInputStatus: !inputStatus.addressInputStatus }) }}\r\n          >\r\n          </i>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div className=\"input-group mb-2\">\r\n        <div className=\"input-group-prepend\">\r\n          <label className=\"input-group-text\">Phone</label>\r\n        </div>\r\n        <input type=\"text\"\r\n          className=\"form-control \"\r\n          id=\"phoneNumber\" name=\"phoneNumber\" readOnly={inputStatus.phoneNumberInputStatus}\r\n          onDoubleClick={() => setInputStatus({ ...inputStatus, phoneNumberInputStatus: !inputStatus.phoneNumberInputStatus })}\r\n\r\n\r\n          value={user.phoneNumber}\r\n          onChange={e => onChange(e)} />\r\n        <div className=\"input-group-append\">\r\n          <i className=\"fa fa-pencil input-group-text reg-icon\" aria-hidden=\"true\"\r\n            onClick={() => { setInputStatus({ ...inputStatus, phoneNumberInputStatus: !inputStatus.phoneNumberInputStatus }) }}\r\n          >\r\n          </i>\r\n        </div>\r\n\r\n      </div>\r\n      <div className=\"input-group mb-2\">\r\n        <div className=\"input-group-prepend\">\r\n          <label className=\"input-group-text\">Email</label>\r\n        </div>\r\n        <input type=\"text\"\r\n          className=\"form-control \"\r\n          id=\"email\" name=\"email\" readOnly={inputStatus.emailInputStatus}\r\n          onDoubleClick={() => setInputStatus({ ...inputStatus, emailInputStatus: !inputStatus.emailInputStatus })}\r\n\r\n\r\n          value={user.email}\r\n          onChange={e => onChange(e)} />\r\n        <div className=\"input-group-append\">\r\n          <i className=\"fa fa-pencil input-group-text reg-icon\" aria-hidden=\"true\"\r\n            onClick={() => setInputStatus({ ...inputStatus, emailInputStatus: !inputStatus.emailInputStatus })}\r\n          >\r\n          </i>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"input-group mb-2\">\r\n        <div className=\"input-group-prepend\">\r\n          <label className=\"input-group-text\">BirthDate:</label>\r\n        </div>\r\n        <input type=\"date\"\r\n          className=\"form-control \"\r\n          id=\"birthDate\" name=\"birthDate\" readOnly=\"readOnly\"\r\n          onDoubleClick={() => { setInputStatus({ ...inputStatus, birthDateInputState: !inputStatus.birthDateInputState }) }}\r\n          value={user.birthDate !== undefined ? user.birthDate.substring(0, user.birthDate.indexOf('T')) : ''}\r\n          onChange={e => onChange(e)}\r\n        />\r\n\r\n\r\n      </div>\r\n\r\n      <div className=\"input-group mb-2\">\r\n        <div className=\"input-group-prepend\">\r\n          <label className=\"input-group-text\">Position</label>\r\n        </div>\r\n        <input type=\"text\"\r\n          className=\"form-control \"\r\n          id=\"position\" name=\"position\" readOnly={true}\r\n          value={user.position}\r\n        />\r\n\r\n      </div>\r\n\r\n    </div>\r\n    <div className=\"card-footer text-muted\">\r\n\r\n      <button type=\"button\" className=\"btn btn-primary\" onClick={onSave} >\r\n        {loadingStatus ? <i className=\"fa fa-circle-o-notch fa-spin\"></i> : ''}&nbsp;Save\r\n        </button>\r\n        &nbsp;\r\n        <button type=\"button\" className=\"btn btn-warning\" onClick={onClickCancel}>Cancel</button>\r\n        &nbsp;{emailValidation ? '' : <i className=\"fa fa-exclamation-triangle\" style={{ color: \"red\" }}> Invalid Email</i>}\r\n    </div>\r\n  </div>\r\n);\r\n\r\n}\r\n","import React from 'react';\r\nimport { DisplayUserForm } from './DisplayUserForm';\r\nimport './style.css';\r\nexport const UserPage = () => {\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <h3 className=\"text-center\">Private Information</h3>\r\n            <div className=\"row   justify-content-center mt-50\" >\r\n                \r\n                <div className=\"col-xs-12 col-sm-10 col-md-8 col-lg-6\">\r\n                <DisplayUserForm/>\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport { NavBar } from './app/NavBar';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from 'react-router-dom';\r\n\r\nimport {EmployeesPage} from './features/employees/EmployeesPage';\r\nimport { EmployeeRow } from './features/employees/EmployeeRow';\r\nimport {TasksPage} from './features/tasks/TasksPage';\r\nimport {TaskRow} from './features/tasks/TaskRow';\r\nimport { ReportsPage } from './features/reports/ReportsPage';\r\nimport { UserPage } from './features/user/UserPage';\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <NavBar />\r\n      <div className=\"App \">\r\n        <Switch>\r\n          <Route exact path=\"/management\" />\r\n          <Route exact path=\"/management/user\" component={UserPage} />\r\n          <Route exact path=\"/management/employees\" component={EmployeesPage}/>\r\n          <Route exact path=\"/management/tasks\" component={TasksPage}/>\r\n          <Route exact path=\"/management/reports\" component={ReportsPage}/>\r\n          <Redirect to=\"/management\" />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport employeesReducer from './../features/employees/employeesSlice'; \r\nimport userReducer from '../features/user/userSlice';\r\nimport reportsReducer from './../features/reports/reportsSlice';\r\nimport devicesReducer from './../features/devices/devicesSlice';\r\nimport tasksReducer from './../features/tasks/tasksSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    employees: employeesReducer,\r\n    user: userReducer,\r\n    reports: reportsReducer,\r\n    devices: devicesReducer,\r\n    tasks : tasksReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}