{"version":3,"sources":["app/NavBar.js","api/client.js","features/tasks/tasksSlice.js","features/employees/employeesSlice.js","features/reports/reportsSlice.js","features/tasks/TaskRow.js","features/tasks/EditTaskForm.js","features/tasks/TaskModal.js","features/tasks/TaskToolkitMenu.js","features/user/userSlice.js","features/devices/devicesSlice.js","features/tasks/TasksFilters.js","entities/TableHeading.js","features/tasks/TasksPage.js","features/user/DisplayUserForm.js","features/user/UserPage.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["host","document","location","NavBar","useState","currentPage","setCurrentPage","className","id","to","onClick","aria-hidden","fetch","method","replace","client","endpoint","a","body","customConfig","headers","config","JSON","stringify","window","response","status","assign","json","data","ok","Error","statusText","Promise","reject","message","get","post","delete","put","tasksAdapter","createEntityAdapter","selectId","task","_id","fetchTasksByTechnicianId","createAsyncThunk","tasks","addNewTask","updateTask","initialState","getInitialState","error","tasksSlice","createSlice","name","reducers","extraReducers","pending","state","action","fulfilled","upsertMany","payload","rejected","addOne","updateOne","changes","getSelectors","selectAllTasks","selectAll","selectTaskById","selectIds","selectById","employeesAdapter","emp","fetchEmployees","employees","addNewEmployee","initialEmployee","employee","updateEmployee","emloyee","checkMail","email","employeesSlice","reportsAdapter","selectEntities","actions","addNewEmp","report","fetchReports","reports","deleteReport","addNewReport","filters","reportsSlice","removeOne","selectAllReports","TaskRow","setCurrentTaskId","onContextMenu","e","data-toggle","data-target","reportTitle","deviceName","taskName","role","style","width","progress","aria-valuenow","aria-valuemin","aria-valuemax","EditTaskForm","currentTaskId","taskModal","setTaskModal","currentTask","useSelector","technician","user","dispatch","useDispatch","currentProgress","setCurrentProgress","validation","setValidation","solution","solutionName","detail","setSolution","loadingStatus","setLoadingStatus","loadingDeniedStatus","setLoadingDeniedStatus","solutionForm","type","aria-describedby","placeholder","value","onChange","target","useEffect","validate","denyButton","then","catch","alert","readOnly","min","max","step","required","title","data-dismiss","isDisplay","disabled","TaskModal","display","tabIndex","aria-labelledby","mouseX","clientX","mouseY","clientY","modalBoundary","getElementById","getBoundingClientRect","left","right","top","bottom","onCloseModalCheckly","aria-label","TaskToolkitMenu","taskToolkit","setTaskToolkit","taskModalOption","fetchUser","updateUser","userSlice","userUpdated","selectUser","require","deviceAdapter","device","fetchDevices","devices","devicesSlice","selectAllDevices","TasksFilters","updateFilters","reportTitleFilter","deviceNameFilter","taskNameFilter","tasksStatusFilter","TableHeading","sortName","setSortOrder","sortOrder","sorterDisplayer","setSorterDisplayer","onMouseOver","onMouseOut","float","color","class","cookie","split","map","reduce","accumulator","key","trim","decodeURIComponent","TasksPage","renderedTasks","userStatus","tasksStatus","reportStatus","deviceStatus","setFilters","reportTitleSorter","deviceNameSorter","taskNameSorter","taskStatusSorter","taskProgressSorter","sorters","setSorters","loadingToken","isUpdate","setUpdate","content","setContent","height","find","tempTask","Object","filter","toLowerCase","indexOf","taskTitleFilter","parseInt","sort","b","onMouseMove","preventDefault","tbodyOnMouseLick","DisplayUserForm","props","inititaluser","isEmailUpdated","setIsEmailUpdated","address","phoneNumber","birthDate","position","setUser","nameInputStatus","addressInputStatus","phoneNumberInputStatus","emailInputStatus","birthDateInputState","inputStatus","setInputStatus","emailValidation","setEmailValidation","localeCompare","onClockInputs","toLocaleString","onDoubleClick","undefined","substring","err","UserPage","App","exact","path","component","configureStore","reducer","userReducer","tasksReducer","devicesReducer","reportsReducer","Boolean","hostname","match","ReactDOM","render","StrictMode","store","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9d5ed920.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './NavBar.css';\r\nimport {Link} from 'react-router-dom';\r\nconst host = document.location.host;\r\nexport const NavBar = () => {\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const logOut = () =>{\r\n        fetch(`http://${host}/logout`,{method:'GET'});\r\n        document.location.replace(`http://${host}/logout`);\r\n    }\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <nav id=\"sidebar\">\r\n                \r\n                <ul className=\"list-unstyled components\">\r\n                    <li className={currentPage === 0? \"active\":''}>\r\n                        <Link to=\"/solving/home\" onClick={()=>setCurrentPage(0)}><i className=\"fa fa-home reg-icon\" aria-hidden=\"true\"></i></Link> \r\n                    </li>\r\n                    <li className={currentPage === 1? \"active\":''}>\r\n                        <Link to=\"/solving/user\" onClick={()=>setCurrentPage(1)}><i className=\"fa fa-address-card-o reg-icon\" aria-hidden=\"true\"></i></Link> \r\n                    </li>\r\n                    <li className={currentPage === 2? \"active\":''}>\r\n                        <Link to=\"/solving/tasks\" onClick={()=>setCurrentPage(2)}><i className=\"fa fa-tasks reg-icon\" aria-hidden=\"true\"></i></Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"\" onClick={logOut}>\r\n                        <i className=\"fa fa-sign-out reg-icon\"></i>\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n\r\n            </nav>\r\n\r\n        </div>\r\n    );\r\n}","\r\nconst host = document.location.host;\r\nexport async function client(endpoint, { body, ...customConfig } = {}) {\r\n    // authenticated requests\r\n    const headers = { 'Content-Type': 'application/json' };\r\n    const config = {\r\n        method: body ? 'POST' : 'GET',\r\n        ...customConfig,\r\n        headers: {\r\n            ...headers,\r\n            ...customConfig.headers\r\n        }\r\n    }\r\n\r\n    if (body) {\r\n        config.body = JSON.stringify(body);\r\n    }\r\n    //${process.env.REACT_APP_API_URL}/${endpoint}\r\n\r\n    let data;\r\n    try {\r\n        const response = await window.fetch(`http://${host}/${endpoint}`, config);\r\n        if (response.status === 401) {\r\n            logout();\r\n            window.location.assign(window.location);\r\n            return;\r\n        }\r\n        data = await response.json();\r\n        if (response.ok) {\r\n            \r\n            return data;\r\n        }\r\n        throw new Error(response.statusText);\r\n    } catch (err) {\r\n        return Promise.reject(err.message ? err.message : data)\r\n    }\r\n\r\n}\r\n\r\nfunction logout() {\r\n\r\n}\r\n\r\nclient.get = function (endpoint, customConfig = {}) {\r\n    return client(endpoint, { ...customConfig, method: 'GET' });\r\n}\r\n\r\nclient.post = function (endpoint, body, customConfig = {}) {\r\n    return client(endpoint, { ...customConfig, body, method: 'POST' })\r\n}\r\n\r\nclient.delete = function (endpoint, customConfig = {}) {\r\n    return client(endpoint, { ...customConfig, method: 'DELETE' })\r\n}\r\n\r\nclient.put = function (endpoint, body, customConfig = {}) {\r\n    return client(endpoint, { ...customConfig, body, method: 'PUT' })\r\n}\r\n\r\n\r\n","import { createAsyncThunk, createEntityAdapter, createSlice } from '@reduxjs/toolkit';\r\nimport { client } from '../../api/client';\r\n\r\n\r\nconst tasksAdapter = createEntityAdapter(\r\n    {\r\n        selectId: task => task._id,\r\n    }\r\n);\r\n\r\n\r\nexport const fetchTasksByTechnicianId = createAsyncThunk('tasks/fetchTasksByTechnician', async (id) => {\r\n    const response = await client.get(`api/tasks/technician/${id}`);\r\n    return response.tasks;\r\n});\r\n\r\nexport const addNewTask = createAsyncThunk('tasks/addNewTask', async (task) => {\r\n    const response = await client.post('api/tasks', { task });\r\n    return response.task;\r\n});\r\n\r\nexport const updateTask = createAsyncThunk('tasks/updateTask', async (task) => {\r\n    const response = await client.put(`api/tasks/${task._id}`, { task });\r\n    return response.task;\r\n});\r\n\r\n\r\n\r\nconst initialState = tasksAdapter.getInitialState({\r\n    status: 'idle',\r\n    error: null\r\n});\r\n\r\nconst tasksSlice = createSlice({\r\n    name: 'reports',\r\n    initialState,\r\n    reducers: {\r\n\r\n\r\n    },\r\n    extraReducers: {\r\n        \r\n        [fetchTasksByTechnicianId.pending]: (state, action) => {\r\n            state.status = 'loading';\r\n        },\r\n        [fetchTasksByTechnicianId.fulfilled]: (state, action) => {\r\n            state.status = 'succeeded';\r\n            tasksAdapter.upsertMany(state, action.payload);\r\n        },\r\n        [fetchTasksByTechnicianId.rejected]: (state, action) => {\r\n            state.status = 'failed';\r\n        },\r\n        [addNewTask.fulfilled]: (state, action) => tasksAdapter.addOne(state, action.payload),\r\n        [updateTask.fulfilled]: (state, action) => tasksAdapter.updateOne(state,{id:action.payload._id, changes:action.payload}),\r\n\r\n    }\r\n});\r\nexport const {\r\n    selectAll: selectAllTasks,\r\n    selectIds: selectAllTaskIds,\r\n    selectById: selectTaskById,\r\n} = tasksAdapter.getSelectors(state => state.tasks);\r\nexport default tasksSlice.reducer;","import { createAsyncThunk, createEntityAdapter, createSlice, nanoid } from '@reduxjs/toolkit';\r\nimport { client } from '../../api/client';\r\nconst employeesAdapter = createEntityAdapter({\r\n    selectId: emp => emp._id\r\n});\r\n\r\nexport const fetchEmployees = createAsyncThunk('employees/fetchEmployees', async () => {\r\n    const response = await client.get('api/employees');\r\n    return response.employees;\r\n});\r\nexport const addNewEmployee = createAsyncThunk('employees/addNewEmployee', async (initialEmployee) => {\r\n    const response = await client.post('api/employees', { employee: initialEmployee });\r\n    return response.employee;\r\n});\r\n\r\nexport const updateEmployee = createAsyncThunk('employees/updateEmployee', async (employee, _id) => {\r\n    const response = await client.put(`api/employees/${_id}`, { employee });\r\n    return response.emloyee;\r\n});\r\n\r\nexport const getEmployeeId = createAsyncThunk('employees/updateEmployee', async (_id) => {\r\n    const response = await client.get(`api/employees/${_id}`);\r\n    return response.emloyee;\r\n});\r\n\r\nexport const checkMail = async (email) => {\r\n    const response = await client.get(`api/employees/email/check?email=${email}`);\r\n    return response.error;\r\n};\r\nconst initialState = employeesAdapter.getInitialState({\r\n    status: 'idle',\r\n    error: null,\r\n})\r\n\r\nconst employeesSlice = createSlice({\r\n    name: 'employees',\r\n    initialState,\r\n    reducers: {\r\n        \r\n    },\r\n    extraReducers: {\r\n        [fetchEmployees.pending]: (state, action) => {\r\n            state.status = 'loading';\r\n        },\r\n        [fetchEmployees.fulfilled]: (state, action) => {\r\n            state.status = 'succeeded';\r\n            employeesAdapter.upsertMany(state, action.payload);\r\n        },\r\n        [fetchEmployees.rejected]: (state, action) => {\r\n            state.status = 'failed';\r\n            state.error = action.error.message;\r\n        },\r\n        [addNewEmployee.fulfilled]: employeesAdapter.addOne,\r\n        [updateEmployee.fulfilled]: employeesAdapter.updateOne\r\n    }\r\n});\r\n// export const selectAllEmployees = state => state.employees.employees;\r\n\r\n// export const selectEmployeeById = (state, employeeId) =>\r\n//     state.employees.employees.find(emp => emp._id === employeeId);\r\n\r\nexport const {\r\n    selectAll: selectAllEmployees,\r\n    selectById: selectEmployeeById,\r\n    selectEntities: selectEmployees,\r\n    \r\n    \r\n} = employeesAdapter.getSelectors(state => state.employees);\r\n\r\nexport const { addNewEmp, } = employeesSlice.actions;\r\n\r\nexport default employeesSlice.reducer;","import { createAsyncThunk, createEntityAdapter, createSlice } from '@reduxjs/toolkit';\r\nimport {client} from '../../api/client';\r\n\r\nconst reportsAdapter = createEntityAdapter({\r\n    selectId : report => report._id,\r\n\r\n});\r\n\r\nexport const fetchReports = createAsyncThunk('reports/fetchReports', async () =>{\r\n    const response = await client.get(`api/reports`);\r\n    return response.reports;\r\n});\r\nexport const deleteReport = createAsyncThunk('reports/deleteReport', async (id)=>{\r\n    const response = await client.delete(`api/reports/${id}`);\r\n    return response.report;\r\n});\r\nexport const addNewReport = createAsyncThunk('reports/addNewReport',async (report)=>{\r\n    const response = await client.post('api/reports',{report});\r\n    return response.report;\r\n})\r\nexport const checkReportStatus = async (id, dispatch)=>{\r\n    const response = await client.get(`api/reports/${id}/status`);\r\n    return response.status;\r\n};\r\n\r\n\r\n\r\nconst initialState = reportsAdapter.getInitialState({\r\n    status : 'idle',\r\n    error: null,\r\n    filters:{\r\n\r\n    }\r\n});\r\nconst reportsSlice = createSlice({\r\n    name: 'reports',\r\n    initialState,\r\n    reducers: {\r\n        \r\n    },\r\n    extraReducers:{\r\n        [fetchReports.pending]:(state , action)=>{\r\n            state.status = 'loading';\r\n        },\r\n        [fetchReports.fulfilled] :(state , action)=>{\r\n            state.status = 'succeeded';\r\n            reportsAdapter.upsertMany(state, action.payload);\r\n        },\r\n        [fetchReports.rejected] :(state , action)=>{\r\n            state.status = 'failed';\r\n        },\r\n        [addNewReport.fulfilled]:(state, action)=> reportsAdapter.addOne(state, action.payload),\r\n        [deleteReport.fulfilled]: (state, action)=>reportsAdapter.removeOne(state, action.payload._id),\r\n    }\r\n});\r\n\r\nexport const {\r\n    selectAll: selectAllReports,\r\n    selectIds: selectReportIds,\r\n    selectById: selectReportById,\r\n    selectEntities: selectReport,\r\n} = reportsAdapter.getSelectors(state => state.reports);\r\nexport default reportsSlice.reducer;","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectEmployeeById } from '../employees/employeesSlice';\r\nimport { selectReportById } from '../reports/reportsSlice';\r\nimport { selectTaskById } from './tasksSlice';\r\n\r\n\r\nexport const TaskRow = ({ task, setCurrentTaskId }) => {\r\n\r\n    \r\n    return (\r\n        <tr key={task._id} onContextMenu={e => { setCurrentTaskId(task._id) }}\r\n            data-toggle=\"modal\" data-target=\"#exampleModal\"\r\n            className ={task.status === -1 ?'bg-warning':''}\r\n        >\r\n            <td>{task.reportTitle}</td>\r\n            <td>{task.deviceName}</td>\r\n            <td>{task.taskName}</td>\r\n            <td>\r\n                {task.status === -1 ?\r\n                    <span className=\"badge badge-fill badge-danger\">Denied</span>\r\n                    : (task.status === 0 ? <span className=\"badge badge-fill badge-primary\">Solving</span> :\r\n                        (task.status === 1 ? <span className=\"badge badge-fill badge-success\">Finish</span> : ''))\r\n\r\n                }\r\n\r\n            </td>\r\n            <td>\r\n\r\n                <span className=\"progress\">\r\n                    <span className=\"progress-bar progress-bar-striped bg-danger\" role=\"progressbar\"\r\n                        style={{ width: `${task.progress}%` }} aria-valuenow={task.progress} aria-valuemin=\"0\" aria-valuemax=\"100\">\r\n                        {task.progress}\r\n                    </span>\r\n                </span>\r\n            </td>\r\n        </tr>);\r\n}","import { current } from '@reduxjs/toolkit';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectAllEmployees, selectEmployeeById } from '../employees/employeesSlice';\r\nimport { selectAllTasks, selectTaskById, updateTask } from './tasksSlice';\r\n\r\n\r\nexport const EditTaskForm = ({ currentTaskId, taskModal, setTaskModal }) => {\r\n\r\n    const currentTask = useSelector(state => selectTaskById(state, currentTaskId));\r\n\r\n    const technician = useSelector(state => state.user.user);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [currentProgress, setCurrentProgress] = useState(currentTask.progress);\r\n    const [validation, setValidation] = useState(false);\r\n    const [solution, setSolution] = useState(currentTask.solution ? currentTask.solution : {\r\n\r\n        solutionName: '',\r\n        detail: '',\r\n    });\r\n\r\n    const [loadingStatus, setLoadingStatus] = useState(false);\r\n    const [loadingDeniedStatus, setLoadingDeniedStatus] = useState(false);\r\n\r\n\r\n    const solutionForm = (\r\n        <div>\r\n            <div className=\"input-group mb-2\">\r\n                <div className=\"input-group-prepand\">\r\n                    <span className=\"input-group-text\">Solution Name</span>\r\n                </div>\r\n\r\n                <input type=\"text\" className=\"form-control\" name=\"technicianName\"\r\n                    id=\"technicianName\" aria-describedby=\"helpId\" placeholder=\"\"\r\n                    value={solution.solutionName}\r\n                    onChange={e => setSolution({ ...solution, solutionName: e.target.value })}\r\n                />\r\n\r\n                <div className=\"input-group-append\"></div>\r\n            </div>\r\n\r\n\r\n\r\n            <div className=\"form-group mb-2\">\r\n                <span>Solution Detail</span>\r\n\r\n\r\n                <textarea type=\"text\" className=\"form-control\" name=\"technicianName\"\r\n                    id=\"technicianName\" aria-describedby=\"helpId\" placeholder=\"\"\r\n\r\n                    value={solution.detail}\r\n                    onChange={e => setSolution({ ...solution, detail: e.target.value })}\r\n                />\r\n                <div className=\"input-group-append\"></div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    useEffect(() => {\r\n        setCurrentProgress(currentTask.progress);\r\n    }, [currentTask])\r\n\r\n\r\n    const onSave = () => {\r\n        setLoadingStatus(true);\r\n        dispatch(updateTask({\r\n            ...currentTask, progress: currentProgress,\r\n            solution, status: currentProgress > 99 ? 1 : 0,\r\n        }))\r\n            .then(() => {\r\n                setLoadingStatus(false);\r\n\r\n            })\r\n            .catch(error => {\r\n                setLoadingStatus(false);\r\n                alert(error);\r\n            });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    const validate = () => {\r\n        if (!currentTask.taskName) {\r\n            return false;\r\n        }\r\n        if (!currentTask.technician) {\r\n            return false;\r\n        }\r\n        if (currentProgress > 99) {\r\n            if (!solution.solutionName) {\r\n                return false;\r\n            }\r\n            if (!solution.detail) {\r\n                return false\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    useEffect(() => {\r\n        setValidation(validate)\r\n    }, [validate]);\r\n\r\n    const onDeny = () => {\r\n        setLoadingDeniedStatus(true);\r\n        dispatch(updateTask({\r\n            ...currentTask, progress: currentProgress,\r\n            status: -1,\r\n        }))\r\n            .then(() => {\r\n                setLoadingDeniedStatus(false);\r\n\r\n            })\r\n            .catch(error => {\r\n                setLoadingDeniedStatus(false);\r\n                alert(error);\r\n            });\r\n    }\r\n\r\n    const denyButton = (\r\n        <button type=\"button\" className=\"btn btn-danger\"\r\n            onClick={onDeny}\r\n        >{loadingDeniedStatus ? <i className=\"fa fa-circle-o-notch fa-spin\"></i> : ''}&nbsp;Deny\r\n        </button>\r\n    );\r\n    return (\r\n        <div>\r\n            <div className=\"modal-body\">\r\n                <div className=\"input-group mb-2\">\r\n                    <div className=\"input-group-prepand\">\r\n                        <span className=\"input-group-text\">Technician Name</span>\r\n                    </div>\r\n\r\n                    <input type=\"text\" className=\"form-control\" name=\"technicianName\"\r\n                        id=\"technicianName\" aria-describedby=\"helpId\" placeholder=\"\"\r\n                        readOnly=\"readOnly\"\r\n\r\n                        value={technician.name}\r\n                    />\r\n\r\n                </div>\r\n\r\n                <div className=\"input-group mb-2\">\r\n                    <div className=\"input-group-prepand\">\r\n                        <span className=\"input-group-text\">Task Name</span>\r\n                    </div>\r\n\r\n                    <input type=\"text\" className=\"form-control\" name=\"taskName\"\r\n                        id=\"taskName\" aria-describedby=\"helpId\" placeholder=\"\"\r\n                        readOnly=\"readOnly\"\r\n                        value={currentTask.taskName}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group mb-2\">\r\n                    <span>Detail</span>\r\n\r\n\r\n                    <textarea type=\"text\" className=\"form-control\" name=\"technicianName\"\r\n                        id=\"detail\" aria-describedby=\"helpId\" placeholder=\"\"\r\n                        readOnly ='readOnly'\r\n                        value={currentTask.detail}\r\n\r\n                    />\r\n                    <div className=\"input-group-append\"></div>\r\n                </div>\r\n                <div className=\"input-group mb-2\">\r\n                    <div className=\"input-group-prepand\">\r\n                        <span className=\"input-group-text\">Task Status</span>\r\n                    </div>\r\n\r\n\r\n                    <span className=\"input-group-text\">\r\n                        {\r\n                            currentTask.status === -1\r\n                                ? <span className=\"badge badge-fill badge-danger\">Denied</span>\r\n                                : (\r\n                                    currentTask.status === 0\r\n                                        ? <span className=\"badge badge-fill badge-primary\">Solving</span>\r\n                                        : (\r\n                                            currentTask.status === 1\r\n                                                ? <span className=\"badge badge-fill badge-success\">Finish</span>\r\n                                                : ''\r\n                                        )\r\n                                )\r\n\r\n                        }\r\n                    </span>\r\n                </div>\r\n                <div className=\"input-group mb-2\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\">Progress</span>\r\n                    </div>\r\n                    <input type=\"number\" name=\"\" id=\"input\"\r\n                        style={{ width: '50px' }}\r\n                        value={currentProgress} min={0} max={100} step={1} required=\"required\" title=\"\"\r\n                        onChange={e => { if (e.target.value <= 100 && currentTask.status !== -1) setCurrentProgress(e.target.value) }}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"progress mb-2\">\r\n\r\n                    <div className=\"progress-bar\" role=\"progressbar\"\r\n                        aria-valuenow={currentProgress}\r\n                        style={{ width: `${currentProgress}%` }}\r\n                        aria-valuemin=\"0\" aria-valuemax=\"100\"\r\n                    >\r\n                        {currentProgress}%\r\n                    </div>\r\n                </div>\r\n\r\n                {currentProgress > 99 ? solutionForm : ''}\r\n\r\n            </div>\r\n\r\n            <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\"\r\n                    onClick={() => { setTaskModal({ ...taskModal, isDisplay: false }) }}\r\n                >\r\n                    Close\r\n                </button>\r\n                {currentTask.status === 0 && currentProgress < 100 ? denyButton : ''}&nbsp;\r\n                <button type=\"button\" className=\"btn btn-primary\"\r\n                    onClick={onSave}\r\n                    disabled={!validation || currentTask.status === -1}\r\n                >{loadingStatus ? <i className=\"fa fa-circle-o-notch fa-spin\"></i> : ''}&nbsp;Save</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { EditTaskForm } from './EditTaskForm';\r\n\r\n\r\nexport const TaskModal = ({ taskModal, setTaskModal, currentTaskId }) => {\r\n   \r\n\r\n    const onCloseModalCheckly = (e) => {\r\n        const mouseX = e.clientX;\r\n        const mouseY = e.clientY;\r\n        const modal = document.getElementById(\"taskModalContent\");\r\n        const modalBoundary = modal.getBoundingClientRect();\r\n        if (mouseX < modalBoundary.left || mouseX > modalBoundary.right ||\r\n            mouseY < modalBoundary.top || mouseY > modalBoundary.bottom) {\r\n            setTaskModal({ ...taskModal, isDisplay: false })\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"modal fade show\"\r\n            style=\r\n            {{\r\n                display:  'block'\r\n\r\n            }}\r\n            id=\"taskModal\"\r\n            tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"taskModalTitle\" aria-hidden=\"true\"\r\n            onClick={(e) => { onCloseModalCheckly(e) }}\r\n\r\n        >\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n                <div className=\"modal-content\" id=\"taskModalContent\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\" id=\"taskModalTitle\">Modal title</h5>\r\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"\r\n                            onClick={() => {setTaskModal({ ...taskModal, isDisplay: false })}}\r\n                        >\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <EditTaskForm taskModal={taskModal} setTaskModal={setTaskModal} currentTaskId={currentTaskId}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n\r\nexport const TaskToolkitMenu = ({ taskToolkit, setTaskToolkit, setTaskModal, taskModal }) => {\r\n\r\n\r\n\r\n    const showTaskDetail = () => {\r\n        setTaskToolkit({...taskToolkit, isDisplay: false});\r\n        setTaskModal({...taskModal, isDisplay:true, taskModalOption:  1});\r\n    }\r\n\r\n    const onDeleteTask = () => {\r\n        setTaskToolkit({...taskToolkit, isDisplay: false});\r\n        setTaskModal({...taskModal, isDisplay:true, taskModalOption: -1});\r\n    }\r\n    return (\r\n        <span className=\"menu-toolbar\" style={{\r\n            top: taskToolkit.top,\r\n            left: taskToolkit.left, display: taskToolkit.isDisplay ? \"block\" : \"none\"\r\n        }}>\r\n            <button type=\"button\" className=\"btn btn-primary\"\r\n                onClick={showTaskDetail}\r\n            >\r\n                <i className=\"fa fa-pencil-square-o reg-icon\" aria-hidden=\"true\"></i>\r\n            </button>&nbsp;\r\n            <button type=\"button\" className=\"btn btn-danger\"\r\n                onClick={onDeleteTask}\r\n            >\r\n                <i className=\"fa fa-trash reg-icon\" aria-hidden=\"true\"></i>\r\n            </button>\r\n            \r\n        </span>\r\n    );\r\n}","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { client } from '../../api/client';\r\n\r\n\r\nexport const fetchUser = createAsyncThunk('user/fetchUser', async (id)=>{\r\n    const response = await client.get(`api/employees/${id}`);\r\n    \r\n    return response.employee;\r\n});\r\nexport const updateUser = createAsyncThunk('user/updateUser', async (employee) =>{\r\n    const response = await client.put(`api/employees/${employee._id}`, {employee: employee});\r\n    return response.employee;\r\n});\r\n\r\nconst initialState = {\r\n   user:{},\r\n   status: 'idle',\r\n   error: null,\r\n};\r\n\r\nconst userSlice = createSlice({\r\n    name:'user',\r\n    initialState,\r\n    reducers:{\r\n        userUpdated : (state, action) =>{\r\n            state = action.payload;\r\n            return state;\r\n        }\r\n\r\n    },\r\n    extraReducers:{\r\n        [fetchUser.fulfilled]:(state, action)=>{\r\n            state.user = action.payload;\r\n            state.status = 'succeeded';\r\n        },\r\n        [fetchUser.pending] :(state, action) =>{\r\n            state.status = 'loading';\r\n        },\r\n        [fetchUser.rejected] :(state, action) =>{\r\n            state.status = 'failed';\r\n        },\r\n        [updateUser.fulfilled]:(state, action)=>{\r\n            state.user = action.payload;\r\n        }\r\n    }\r\n});\r\n\r\nexport const {userUpdated,} = userSlice.actions;\r\nexport const selectUser = state => state.user.user;\r\nexport default userSlice.reducer;","import { client } from \"../../api/client\";\r\n\r\nconst { createSlice, createEntityAdapter, createAsyncThunk } = require(\"@reduxjs/toolkit\");\r\nconst deviceAdapter = createEntityAdapter({\r\n    selectId: device => device._id\r\n});\r\n\r\nexport const getDevicesByEmployeeId = createAsyncThunk('devices/fetchDevicesByEmployeesId' ,async (_id)=>{\r\n    const response = client.get(`api/employees/${_id}/devices`);\r\n    return response.devices;\r\n});\r\n\r\nexport const  fetchDevices = createAsyncThunk('devices/fetchDevices', async () =>{\r\n    const response = await client.get(`api/devices`);\r\n    return response.devices;\r\n})\r\n\r\n\r\nconst initialState = deviceAdapter.getInitialState({\r\n    status: 'idle',\r\n    error: null,\r\n});\r\n\r\nconst devicesSlice = createSlice({\r\n    name: 'devices',\r\n    initialState,\r\n    reducers: {\r\n\r\n    },\r\n    extraReducers:{\r\n        [fetchDevices.pending]:(state, action)=>{\r\n            state.status = 'loading';\r\n        },\r\n        [fetchDevices.rejected]:(state, action)=>{\r\n            state.status = 'failed';\r\n        },\r\n        [fetchDevices.fulfilled]:(state, action)=>{\r\n            state.status = 'succeeded';\r\n            deviceAdapter.upsertMany(state, action.payload);\r\n        }\r\n    }\r\n});\r\nexport const {\r\n    selectAll : selectAllDevices,\r\n    selectById: selectDeviceById,\r\n} = deviceAdapter.getSelectors(state => state.devices);\r\nexport default devicesSlice.reducer;","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nexport const TasksFilters = ({filters, updateFilters}) => {\r\n\r\n    const onChange = (e) =>{\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        updateFilters(name, value);\r\n    }\r\n    // reportTitleFilter: '',\r\n    //     deviceNameFilter: '',\r\n    //     taskTitleFilter :'',\r\n    //     tasksStatusFilter: -2,\r\n    return (\r\n        <tr>\r\n            <td>\r\n                <input type=\"text\" className=\"form-control\"\r\n                    name=\"reportTitleFilter\" id=\"reportTitleFilter\" aria-describedby=\"helpId\" \r\n                    placeholder=\"searching id\"\r\n                    value = {filters.reportTitleFilter}\r\n                    onChange = {(e)=> onChange(e)}\r\n                />\r\n            </td>\r\n            <td>\r\n                <input type=\"text\" className=\"form-control\"\r\n                    name=\"deviceNameFilter\" id=\"deviceNameFilter\" aria-describedby=\"helpId\"\r\n                    placeholder=\"searching name\"\r\n                    value = {filters.deviceNameFilter}\r\n                    onChange = {e => onChange(e)}\r\n                    />\r\n            </td>\r\n           \r\n\r\n            <td>\r\n                <input type=\"text\" className=\"form-control\"\r\n                    name=\"taskNameFilter\" id=\"taskNameFilter\" aria-describedby=\"helpId\"\r\n                    placeholder=\"searching phone\" \r\n                    value = {filters.taskNameFilter}\r\n                    onChange = {e => onChange(e)}\r\n                    />\r\n            </td>\r\n          \r\n            <td>\r\n\r\n                <select className=\"form-control\" name=\"tasksStatusFilter\" id=\"tasksStatusFilter\"\r\n                 value = {filters.tasksStatusFilter} \r\n                onChange={e => onChange(e)} >\r\n                    <option value={-2}>all</option>\r\n                    <option value={-1}>denied</option>\r\n                    <option value={0}>solving</option>\r\n                    <option value={1}>finish</option>\r\n                </select>\r\n            </td>\r\n            <td></td>\r\n        </tr>\r\n    );\r\n}","\r\nimport React, { useState } from 'react';\r\n    \r\nexport const TableHeading = ({ title, sortName, setSortOrder, sortOrder }) => {\r\n    const [sorterDisplayer, setSorterDisplayer] = useState(false);\r\n    const onSetSortOder = () => {\r\n        setSortOrder(sortName, sortOrder < 1 ? sortOrder + 1 : -1);\r\n    }\r\n\r\n    return (\r\n        <th\r\n            onMouseOver={e => setSorterDisplayer(true)}\r\n            onMouseOut={e => setSorterDisplayer(false)}\r\n            onClick={onSetSortOder}       \r\n        >\r\n            <span style={{float:'left'}}>\r\n            {title}\r\n            </span>\r\n            \r\n            {sorterDisplayer\r\n                ? <span className=\"sorter\" style={{float:\"right\", color: 'darksalmon'}} >\r\n                    {sortOrder === -1\r\n                        ? <i className=\"fa fa-sort-desc\" ></i>\r\n                        : (\r\n                            sortOrder === 1\r\n                                ? <i className=\"fa fa-sort-asc\"></i>\r\n                                : <i class=\"fa fa-random\" aria-hidden=\"true\"></i>\r\n                        )\r\n                    }\r\n                </span> : ''}\r\n        </th>\r\n\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchTasks, fetchTasksByTechnicianId, selectAllTaskIds, selectAllTasks } from './tasksSlice';\r\nimport { TaskRow } from './TaskRow';\r\nimport { fetchReportById, fetchReports, selectAllReports } from '../reports/reportsSlice';\r\nimport { TaskModal } from './TaskModal';\r\nimport { TaskToolkitMenu } from './TaskToolkitMenu';\r\nimport { fetchUser } from '../user/userSlice';\r\nimport { fetchDevices, selectAllDevices } from '../devices/devicesSlice';\r\nimport { TasksFilters } from './TasksFilters';\r\nimport { TableHeading } from '../../entities/TableHeading';\r\nconst cookie = document.cookie.split(';').map(cookie => cookie.split('='))\r\n    .reduce((accumulator, [key, value]) => ({...accumulator, [key.trim()]: decodeURIComponent(value)}),{})\r\nexport const TasksPage = () => {\r\n    const dispatch = useDispatch();\r\n    const tasks = useSelector(selectAllTasks);\r\n    const devices = useSelector(selectAllDevices);\r\n    const reports = useSelector(selectAllReports);\r\n\r\n    const userStatus = useSelector(state => state.user.status)\r\n    const tasksStatus = useSelector(state => state.tasks.status);\r\n    const reportStatus = useSelector(state => state.reports.status);\r\n    const deviceStatus = useSelector(state => state.devices.status);\r\n    const error = useSelector(state => state.tasks.error);\r\n    const [currentTaskId, setCurrentTaskId] = useState('');\r\n\r\n    const [filters, setFilters] = useState({\r\n        reportTitleFilter: '',\r\n        deviceNameFilter: '',\r\n        taskNameFilter: '',\r\n        tasksStatusFilter: -2,\r\n    });\r\n    const [sorters, setSorters] = useState({\r\n        reportTitleSorter: 0,\r\n        deviceNameSorter: 0,\r\n        taskNameSorter: 0,\r\n        taskStatusSorter: 0,\r\n        taskProgressSorter: 0,\r\n    });\r\n    const setSortOrder = (name, value) => {\r\n        setSorters({\r\n            reportTitleSorter: 0,\r\n            deviceNameSorter: 0,\r\n            taskNameSorter: 0,\r\n            taskStatusSorter: 0,\r\n            taskProgressSorter: 0,\r\n            [name]: value,\r\n        });\r\n    }\r\n    let renderedTasks;\r\n    useEffect(() => {\r\n\r\n        if (userStatus === 'idle') {\r\n            dispatch(fetchUser(cookie.loadingToken));\r\n        }\r\n    }, [userStatus]);\r\n\r\n    useEffect(() => {\r\n        if (deviceStatus === 'idle') {\r\n            dispatch(fetchDevices())\r\n        }\r\n    }, [deviceStatus]);\r\n\r\n    useEffect(() => {\r\n        if (reportStatus === 'idle') {\r\n            dispatch(fetchReports());\r\n        }\r\n    }, [reportStatus]);\r\n\r\n    useEffect(() => {\r\n        if (tasksStatus === 'idle') {\r\n \r\n            dispatch(fetchTasksByTechnicianId(cookie.loadingToken));\r\n        }\r\n    }, [tasksStatus]);\r\n    const [isUpdate, setUpdate] = useState(false);\r\n    const [content, setContent] = useState();\r\n\r\n    useEffect(() => {\r\n        setUpdate(true);\r\n    }, [tasks]);\r\n\r\n    if (tasksStatus === 'loading' || reportStatus === 'loading' || userStatus === 'loading') {\r\n        renderedTasks = (\r\n            <tr className=\"spinner-border text-primary\" style={{ width: 100, height: 100 }}></tr>\r\n        );\r\n    } else if (tasksStatus === 'failed' || reportStatus === 'failed' || userStatus === 'failed') {\r\n        renderedTasks = <tr>{error}</tr>\r\n    } else if (tasksStatus === \"succeeded\" && reportStatus === 'succeeded' && userStatus === 'succeeded') {\r\n        if (isUpdate) {\r\n            setContent(tasks.map(task => ({\r\n                ...task,\r\n                reportTitle: reports.find(report => report._id === task.report).title,\r\n                deviceName:\r\n                    devices.find(device => device._id === reports.find(report => report._id === task.report).device).deviceName\r\n            })));\r\n            setUpdate(false);\r\n        }\r\n    }\r\n    let tempTask = Object.assign([], content);\r\n\r\n    if (filters.reportTitleFilter) {\r\n        tempTask = tempTask.filter(task => task.reportTitle.toLowerCase().indexOf(filters.reportTitleFilter.toLowerCase()) !== -1);\r\n    }\r\n\r\n    if (filters.deviceNameFilter) {\r\n        tempTask = tempTask.filter(task => task.deviceName.toLowerCase().indexOf(filters.deviceNameFilter.toLowerCase()) !== -1);\r\n    }\r\n\r\n    if (filters.taskTitleFilter) {\r\n        tempTask = tempTask.filter(task => task.taskName.toLowerCase().indexOf(filters.taskTitleFilter.toLowerCase()) !== -1);\r\n    }\r\n\r\n    if (parseInt(filters.tasksStatusFilter) !== -2) {\r\n        tempTask = tempTask.filter(task => task.status === parseInt(filters.tasksStatusFilter));\r\n    }\r\n\r\n    if(sorters.deviceNameSorter !== 0){\r\n        tempTask = tempTask.sort((a, b) => {\r\n            if(a.deviceName === b.deviceName) return 0;\r\n            return a.deviceName > b.deviceName ? sorters.deviceNameSorter: -sorters.deviceNameSorter;\r\n        });\r\n    }\r\n    if(sorters.reportTitleSorter !== 0){\r\n        tempTask = tempTask.sort((a, b) => {\r\n            if(a.reportTitle === b.reportTitle) return 0;\r\n            return a.reportTitle > b.reportTitle ? sorters.reportTitleSorter: -sorters.reportTitleSorter;\r\n        });\r\n    }\r\n    if(sorters.taskNameSorter !== 0){\r\n        tempTask = tempTask.sort((a, b) => {\r\n            if(a.taskName === b.taskName) return 0;\r\n            return a.taskName > b.taskName ? sorters.taskNameSorter: -sorters.taskNameSorter;\r\n        });\r\n    }\r\n    if(sorters.taskStatusSorter !== 0){\r\n        tempTask = tempTask.sort((a, b) => {\r\n            if(a.status === b.status) return 0;\r\n            return a.status > b.status ? sorters.taskStatusSorter: -sorters.taskStatusSorter;\r\n        });\r\n    }\r\n\r\n    if(sorters.taskProgressSorter !== 0){\r\n        tempTask = tempTask.sort((a, b) => {\r\n            if(a.progress === b.progress) return 0;\r\n            return a.progress > b.progress ? sorters.taskProgressSorter: -sorters.taskProgressSorter;\r\n        });\r\n    }\r\n\r\n\r\n    if (content)\r\n        renderedTasks = tempTask.map(task =>\r\n            <TaskRow key={task._id} setCurrentTaskId={setCurrentTaskId} task={task} />\r\n        )\r\n\r\n    const [taskModal, setTaskModal] = useState({\r\n        isDisplay: false,\r\n        currentTaskId: '',\r\n        taskModalOption: 1 // 1 : more detail, -1: delete\r\n    });\r\n\r\n    const [taskToolkit, setTaskToolkit] = useState({\r\n        top: 0,\r\n        left: 0,\r\n        isDisplay: false,\r\n    });\r\n    const onMouseMoveTbody = (e) => {\r\n        if (taskToolkit.isDisplay) {\r\n            setTaskToolkit({ ...taskToolkit, isDisplay: false });\r\n\r\n        }\r\n    }\r\n    const tbodyOnMouseLick = (e) => {\r\n        e.preventDefault();\r\n        setTaskToolkit({ left: e.clientX, top: e.clientY - 35, isDisplay: true });\r\n    }\r\n    const onUpdateFilters = (name, value) => {\r\n        setFilters({ ...filters, [name]: value })\r\n    }\r\n\r\n    return (\r\n        <div className={taskModal.isDisplay ? \"modal-open container-fluid\" : \"container-fluid\"}\r\n\r\n        >\r\n            {taskModal.isDisplay ? <TaskModal setTaskModal={setTaskModal}\r\n                taskModal={taskModal} currentTaskId={currentTaskId}\r\n\r\n            /> : ''}\r\n            {taskToolkit.isDisplay ? <TaskToolkitMenu taskToolkit={taskToolkit}\r\n                setTaskToolkit={setTaskToolkit} setTaskModal={setTaskModal}\r\n            /> : ''}\r\n            <h3 className=\"text-center\">Tasks Management</h3>\r\n            <div className=\"row justify-content-center\">\r\n\r\n                <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-11\">\r\n\r\n                    <table className='table table-bordered table-hover' >\r\n                        <thead className=\"thead-dark\">\r\n                            <tr>\r\n                                <TableHeading title='Report' sortName='reportTitleSorter'\r\n                                    sortOrder={sorters.reportTitleSorter} setSortOrder={setSortOrder}\r\n                                />\r\n                                <TableHeading title='Device' sortName='deviceNameSorter'\r\n                                    sortOrder={sorters.deviceNameSorter} setSortOrder={setSortOrder}\r\n                                />\r\n                                <TableHeading title='Task' sortName='taskNameSorter'\r\n                                    sortOrder={sorters.taskNameSorter} setSortOrder={setSortOrder}\r\n                                />\r\n                                <TableHeading title='Task Status' sortName='taskStatusSorter'\r\n                                    sortOrder={sorters.taskStatusSorter} setSortOrder={setSortOrder}\r\n                                />\r\n                                <TableHeading title='Task Progress' sortName='taskProgressSorter'\r\n                                    sortOrder={sorters.taskProgressSorter} setSortOrder={setSortOrder}\r\n                                />\r\n                            \r\n                            </tr>\r\n                            <TasksFilters filters={filters} updateFilters={onUpdateFilters} />\r\n                        </thead>\r\n                        <tbody onMouseMove={e => onMouseMoveTbody(e)}\r\n                            onContextMenu={e => tbodyOnMouseLick(e)}\r\n                        >\r\n                            {renderedTasks ? renderedTasks : ''}\r\n\r\n\r\n                        </tbody>\r\n                    </table>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectUser, userUpdated, fetchUser, updateUser } from './userSlice';\r\nimport './style.css';\r\nimport { checkMail } from '../employees/employeesSlice';\r\n\r\nconst cookie = document.cookie.split(';')\r\n  .map(cookie => cookie.split('='))\r\n  .reduce((accumulator, [key, value]) => ({ ...accumulator, [key.trim()]: decodeURIComponent(value) }),\r\n    {});\r\n\r\n\r\nexport const DisplayUserForm = (props) => {\r\n\r\n\r\n  const inititaluser = useSelector(selectUser);\r\n  const userStatus = useSelector(state => state.user.status);\r\n  const [isEmailUpdated, setIsEmailUpdated] = useState(-1);\r\n  const [user, setUser] = useState({\r\n    _id: '',\r\n    name: '',\r\n    address: '',\r\n    email: '',\r\n    phoneNumber: '',\r\n    birthDate: '',\r\n    position: ''\r\n  });\r\n\r\n  const [loadingStatus, setLoadingStatus] = useState(false);\r\n\r\n  const [inputStatus, setInputStatus] = useState({\r\n    nameInputStatus: true,\r\n    addressInputStatus: true,\r\n    phoneNumberInputStatus: true,\r\n    emailInputStatus: true,\r\n    birthDateInputState: true,\r\n  });\r\n  const [emailValidation, setEmailValidation] = useState(true);\r\n  const dispatch = useDispatch();\r\n\r\n  const onClickCancel = () => {\r\n    setUser(inititaluser);\r\n    onClockInputs();\r\n    setEmailValidation(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (userStatus === 'idle') {\r\n      dispatch((fetchUser(cookie.loadingToken)));\r\n\r\n    }\r\n    if (userStatus === 'succeeded') {\r\n      setUser(inititaluser);\r\n      setIsEmailUpdated(0);\r\n    }\r\n\r\n  }, [dispatch, inititaluser, userStatus]);\r\n\r\n  useEffect(() => {\r\n    if (user.email.localeCompare(inititaluser.email) !== 0 && isEmailUpdated === 0) {\r\n      setIsEmailUpdated(1);\r\n    }\r\n  }, [user.email])\r\n\r\n  const onSave = () => {\r\n    setLoadingStatus(true);\r\n    if (isEmailUpdated)\r\n      checkMail(user.email)\r\n        .then(error => {\r\n          if (error === 'invalid_email') {\r\n            setLoadingStatus(false);\r\n            setEmailValidation(false);\r\n            setIsEmailUpdated(0);\r\n            setUser({...user, email: inititaluser.email});\r\n          } else if (error === 'valid_email') {\r\n            dispatch(updateUser(user))\r\n              .then(() => {\r\n                setLoadingStatus(false);\r\n                setEmailValidation(true);\r\n                setIsEmailUpdated(0);\r\n              });\r\n          }\r\n        })\r\n        .catch(error => {\r\n          alert(error);\r\n          setEmailValidation(false);\r\n          setIsEmailUpdated(0);\r\n          setUser({...user, email: inititaluser.email});\r\n        });\r\n    else {\r\n      dispatch(updateUser(user))\r\n        .then(() => {\r\n          setLoadingStatus(false);\r\n        })\r\n        .catch(err=> alert(err));\r\n    }\r\n  \r\n  onClockInputs();\r\n}\r\nconst onClockInputs = () => {\r\n  setInputStatus({\r\n    nameInputStatus: true,\r\n    addressInputStatus: true,\r\n    phoneNumberInputStatus: true,\r\n    emailInputStatus: true,\r\n    birthDateInputState: true,\r\n  });\r\n}\r\nconst onChange = (e) => {\r\n  let name = e.target.name;\r\n  let value = e.target.value;\r\n  if(name=== 'birthDate'){\r\n    setUser({...user, birthDate: value.toLocaleString()})\r\n  }\r\n  setUser({ ...user, [name]: value });\r\n\r\n}\r\n\r\nreturn (\r\n  <div className=\"card\" >\r\n    <div className=\"card-header\">\r\n      Your usermation\r\n      </div>\r\n    <div className=\"card-body\">\r\n      <div className=\"input-group flex-nowrap mb-2\">\r\n        <div className=\"input-group-prepend\">\r\n          <span className=\"input-group-text\" id=\"addon-wrapping\">ID</span>\r\n        </div>\r\n        <input type=\"text\" className=\"form-control\" id='_id' name='_id' readOnly={true}\r\n\r\n          value={user._id} aria-label=\"ID\" />\r\n      </div>\r\n\r\n      <div className=\"input-group flex-nowrap mb-2\">\r\n        <div className=\"input-group-prepend\">\r\n          <span className=\"input-group-text\" >Name</span>\r\n        </div>\r\n        <input type=\"text\" className=\"form-control\"\r\n          aria-label=\"Name\" id=\"name\" name=\"name\"\r\n          readOnly={inputStatus.nameInputStatus}\r\n          onDoubleClick={() => { setInputStatus({ ...inputStatus, nameInputStatus: !inputStatus.nameInputStatus }) }}\r\n          value={user.name}\r\n          onChange={e => onChange(e)}\r\n        />\r\n        <div className=\"input-group-appennd\">\r\n          <i className=\"fa fa-pencil  input-group-text reg-icon\" aria-hidden=\"true\"\r\n            onClick={() => { setInputStatus({ ...inputStatus, nameInputStatus: !inputStatus.nameInputStatus }) }}\r\n          >\r\n          </i>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div className=\"input-group flex-nowrap mb-2\">\r\n        <div className=\"input-group-prepend\">\r\n          <label className=\"input-group-text\">Adress</label>\r\n        </div>\r\n        <input type=\"text\"\r\n          className=\"form-control \"\r\n          id=\"address\" name=\"address\" readOnly={inputStatus.addressInputStatus}\r\n          onDoubleClick={() => setInputStatus({ ...inputStatus, addressInputStatus: !inputStatus.addressInputStatus })}\r\n\r\n          value={user.address}\r\n          onChange={e => onChange(e)} />\r\n        <div className=\"input-group-appennd\">\r\n          <i className=\"fa fa-pencil input-group-text reg-icon\" aria-hidden=\"true\"\r\n            onClick={() => { setInputStatus({ ...inputStatus, addressInputStatus: !inputStatus.addressInputStatus }) }}\r\n          >\r\n          </i>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div className=\"input-group mb-2\">\r\n        <div className=\"input-group-prepend\">\r\n          <label className=\"input-group-text\">Phone</label>\r\n        </div>\r\n        <input type=\"text\"\r\n          className=\"form-control \"\r\n          id=\"phoneNumber\" name=\"phoneNumber\" readOnly={inputStatus.phoneNumberInputStatus}\r\n          onDoubleClick={() => setInputStatus({ ...inputStatus, phoneNumberInputStatus: !inputStatus.phoneNumberInputStatus })}\r\n\r\n\r\n          value={user.phoneNumber}\r\n          onChange={e => onChange(e)} />\r\n        <div className=\"input-group-append\">\r\n          <i className=\"fa fa-pencil input-group-text reg-icon\" aria-hidden=\"true\"\r\n            onClick={() => { setInputStatus({ ...inputStatus, phoneNumberInputStatus: !inputStatus.phoneNumberInputStatus }) }}\r\n          >\r\n          </i>\r\n        </div>\r\n\r\n      </div>\r\n      <div className=\"input-group mb-2\">\r\n        <div className=\"input-group-prepend\">\r\n          <label className=\"input-group-text\">Email</label>\r\n        </div>\r\n        <input type=\"text\"\r\n          className=\"form-control \"\r\n          id=\"email\" name=\"email\" readOnly={inputStatus.emailInputStatus}\r\n          onDoubleClick={() => setInputStatus({ ...inputStatus, emailInputStatus: !inputStatus.emailInputStatus })}\r\n\r\n\r\n          value={user.email}\r\n          onChange={e => onChange(e)} />\r\n        <div className=\"input-group-append\">\r\n          <i className=\"fa fa-pencil input-group-text reg-icon\" aria-hidden=\"true\"\r\n            onClick={() => setInputStatus({ ...inputStatus, emailInputStatus: !inputStatus.emailInputStatus })}\r\n          >\r\n          </i>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"input-group mb-2\">\r\n        <div className=\"input-group-prepend\">\r\n          <label className=\"input-group-text\">BirthDate:</label>\r\n        </div>\r\n        <input type=\"date\"\r\n          className=\"form-control \"\r\n          id=\"birthDate\" name=\"birthDate\" readOnly=\"readOnly\"\r\n          onDoubleClick={() => { setInputStatus({ ...inputStatus, birthDateInputState: !inputStatus.birthDateInputState }) }}\r\n          value={user.birthDate !== undefined ? user.birthDate.substring(0, user.birthDate.indexOf('T')) : ''}\r\n          onChange={e => onChange(e)}\r\n        />\r\n\r\n\r\n      </div>\r\n\r\n      <div className=\"input-group mb-2\">\r\n        <div className=\"input-group-prepend\">\r\n          <label className=\"input-group-text\">Position</label>\r\n        </div>\r\n        <input type=\"text\"\r\n          className=\"form-control \"\r\n          id=\"position\" name=\"position\" readOnly={true}\r\n          value={user.position}\r\n        />\r\n\r\n      </div>\r\n\r\n    </div>\r\n    <div className=\"card-footer text-muted\">\r\n\r\n      <button type=\"button\" className=\"btn btn-primary\" onClick={onSave} >\r\n        {loadingStatus ? <i className=\"fa fa-circle-o-notch fa-spin\"></i> : ''}&nbsp;Save\r\n        </button>\r\n        &nbsp;\r\n        <button type=\"button\" className=\"btn btn-warning\" onClick={onClickCancel}>Cancel</button>\r\n        &nbsp;{emailValidation ? '' : <i className=\"fa fa-exclamation-triangle\" style={{ color: \"red\" }}> Invalid Email</i>}\r\n    </div>\r\n  </div>\r\n);\r\n\r\n}\r\n","import React from 'react';\r\nimport { DisplayUserForm } from './DisplayUserForm';\r\nimport './style.css';\r\nexport const UserPage = () => {\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <h3 className=\"text-center\">Private Information</h3>\r\n            <div className=\"row   justify-content-center mt-50\" >\r\n                \r\n                <div className=\"col-xs-12 col-sm-10 col-md-8 col-lg-6\">\r\n                <DisplayUserForm/>\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport { NavBar } from './app/NavBar';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from 'react-router-dom';\r\n\r\nimport { TasksPage } from './features/tasks/TasksPage';\r\nimport { UserPage } from './features/user/UserPage';\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <NavBar />\r\n      <div className=\"App \">\r\n        <Switch>\r\n          <Route exact path=\"/solving\" />\r\n          <Route exact path=\"/solving/user\" component={UserPage} />\r\n          <Route exact path=\"/solving/tasks\" component={TasksPage}/>\r\n          <Redirect to=\"/solving\" />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport userReducer from '../features/user/userSlice';\r\nimport tasksReducer from '../features/tasks/tasksSlice';\r\nimport devicesReducer from './../features/devices/devicesSlice';\r\nimport reportsReducer from '../features/reports/reportsSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n    tasks: tasksReducer,\r\n    devices: devicesReducer,\r\n    reports : reportsReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}